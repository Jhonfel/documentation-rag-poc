Using the SageMaker Training and Inference Toolkits
The SageMaker Training and SageMaker Inference toolkits implement the functionality that you need to adapt your containers to run scripts, train algorithms, and deploy models on SageMaker. When installed, the library defines the following for users:
+ The locations for storing code and other resources. 
+ The entry point that contains the code to run when the container is started. Your Dockerfile must copy the code that needs to be run into the location expected by a container that is compatible with SageMaker. 
+ Other information that a container needs to manage deployments for training and inference. 
SageMaker Toolkits Containers Structure
When SageMaker trains a model, it creates the following file folder structure in the container's /opt/ml directory.

/opt/ml
├── input
│   ├── config
│   │   ├── hyperparameters.json
│   │   └── resourceConfig.json
│   └── data
│       └── <channel_name>
│           └── <input data>
├── model
│
├── code
│
├── output
│
└── failure

When you run a model training job, the SageMaker container uses the /opt/ml/input/ directory, which contains the JSON files that configure the hyperparameters for the algorithm and the network layout used for distributed training. The /opt/ml/input/ directory also contains files that specify the channels through which SageMaker accesses the data, which is stored in Amazon Simple Storage Service (Amazon S3). The SageMaker containers library places the scripts that the container will run in the /opt/ml/code/ directory. Your script should write the model generated by your algorithm to the /opt/ml/model/ directory. For more information, see Use Your Own Training Algorithms.
When you host a trained model on SageMaker to make inferences, you deploy the model to an HTTP endpoint. The model makes real-time predictions in response to inference requests. The container must contain a serving stack to process these requests.
In a hosting or batch transform container, the model files are located in the same folder to which they were written during training.

/opt/ml/model
│
└── <model files>

For more information, see Use your own inference code.
Single Versus Multiple Containers
You can either provide separate Docker images for the training algorithm and inference code or you can use a single Docker image for both. When creating Docker images for use with SageMaker, consider the following:
+ Providing two Docker images can increase storage requirements and cost because common libraries might be duplicated.
+ In general, smaller containers start faster for both training and hosting. Models train faster and the hosting service can react to increases in traffic by automatically scaling more quickly.
+ You might be able to write an inference container that is significantly smaller than the training container. This is especially common when you use GPUs for training, but your inference code is optimized for CPUs.
+ SageMaker requires that Docker containers run without privileged access.
+ Both Docker containers that you build and those provided by SageMaker can send messages to the Stdout and Stderr files. SageMaker sends these messages to Amazon CloudWatch logs in your AWS account.
For more information about how to create SageMaker containers and how scripts are executed inside them, see the SageMaker Training Toolkit and SageMaker Inference Toolkit repositories on GitHub. They also provide lists of important environmental variables and the environmental variables provided by SageMaker containers.

AwsSageMaker
The following are examples of the AWS Security Finding Format for AwsSageMaker resources.
AwsSageMakerNotebookInstance
The AwsSageMakerNotebookInstance object provides information about a Amazon SageMaker notebook instance, which is a machine learning compute instance running the Jupyter Notebook App.
The following example shows the AWS Security Finding Format (ASFF) for the AwsSageMakerNotebookInstance object. To view descriptions of AwsSageMakerNotebookInstance attributes, see AwsSageMakerNotebookInstanceDetails in the AWS Security Hub API Reference.
Example

"AwsSageMakerNotebookInstance": {
    "DirectInternetAccess": "Disabled",
    "InstanceMetadataServiceConfiguration": {
        "MinimumInstanceMetadataServiceVersion": "1",
    },
    "InstanceType": "ml.t2.medium",
    "LastModifiedTime": "2022-09-09 22:48:32.012000+00:00",
    "NetworkInterfaceId": "eni-06c09ac2541a1bed3",
    "NotebookInstanceArn": "arn:aws:sagemaker:us-east-1:001098605940:notebook-instance/sagemakernotebookinstancerootaccessdisabledcomplia-8myjcyofzixm",
    "NotebookInstanceName": "SagemakerNotebookInstanceRootAccessDisabledComplia-8MYjcyofZiXm",
    "NotebookInstanceStatus": "InService",
    "PlatformIdentifier": "notebook-al1-v1",
    "RoleArn": "arn:aws:iam::001098605940:role/sechub-SageMaker-1-scenar-SageMakerCustomExecution-1R0X32HGC38IW",
    "RootAccess": "Disabled",
    "SecurityGroups": [
        "sg-06b347359ab068745"
    ],
    "SubnetId": "subnet-02c0deea5fa64578e",
    "Url": "sagemakernotebookinstancerootaccessdisabledcomplia-8myjcyofzixm.notebook.us-east-1.sagemaker.aws",
    "VolumeSizeInGB": 5
}


Automating Amazon SageMaker with Amazon EventBridge
Amazon EventBridge monitors status change events in Amazon SageMaker. EventBridge enables you to automate SageMaker and respond automatically to events such as a training job status change or endpoint status change. Events from SageMaker are delivered to EventBridge in near real time. You can write simple rules to indicate which events are of interest to you, and what automated actions to take when an event matches a rule. For an example of how to create a rule, see Schedule a Pipeline with Amazon EventBridge.
Some examples of the actions that can be automatically triggered include the following:
+ Invoking an AWS Lambda function
+ Invoking Amazon EC2 Run Command
+ Relaying the event to Amazon Kinesis Data Streams
+ Activating an AWS Step Functions state machine
+ Notifying an Amazon SNS topic or an AWS SMS queue
Topics
+ Training job state change
+ Hyperparameter tuning job state change
+ Transform job state change
+ Endpoint state change
+ Feature group state change
+ Model package state change
+ Pipeline execution state change
+ Pipeline step state change
+ SageMaker image state change
+ SageMaker image version state change
+ Endpoint deployment state change
+ Model card state change
Training job state change
Indicates a change in the status of a SageMaker training job.
If the value of TrainingJobStatus is Failed, the event contains the FailureReason field, which provides a description of why the training job failed.
```
{
    "version": "0",
    "id": "844e2571-85d4-695f-b930-0153b71dcb42",
    "detail-type": "SageMaker Training Job State Change",
    "source": "aws.sagemaker",
    "account": "123456789012",
    "time": "2018-10-06T12:26:13Z",
    "region": "us-east-1",
    "resources": [
        "arn:aws:sagemaker:us-east-1:123456789012:training-job/kmeans-1"
    ],
    "detail": {
        "TrainingJobName": "89c96cc8-dded-4739-afcc-6f1dc936701d",
        "TrainingJobArn": "arn:aws:sagemaker:us-east-1:123456789012:training-job/kmeans-1",
        "TrainingJobStatus": "Completed",
        "SecondaryStatus": "Completed",
        "HyperParameters": {
            "Hyper": "Parameters"
        },
        "AlgorithmSpecification": {
            "TrainingImage": "TrainingImage",
            "TrainingInputMode": "TrainingInputMode"
        },
        "RoleArn": "arn:aws:iam::123456789012:role/SMRole",
        "InputDataConfig": [
            {
                "ChannelName": "Train",
                "DataSource": {
                    "S3DataSource": {
                        "S3DataType": "S3DataType",
                        "S3Uri": "S3Uri",
                        "S3DataDistributionType": "S3DataDistributionType"
                    }
                },
                "ContentType": "ContentType",
                "CompressionType": "CompressionType",
                "RecordWrapperType": "RecordWrapperType"
            }
        ],
        "OutputDataConfig": {
            "KmsKeyId": "KmsKeyId",
            "S3OutputPath": "S3OutputPath"
        },
        "ResourceConfig": {
            "InstanceType": "InstanceType",
            "InstanceCount": 3,
            "VolumeSizeInGB": 20,
            "VolumeKmsKeyId": "VolumeKmsKeyId"
        },
        "VpcConfig": {
    },
    "StoppingCondition": {
        "MaxRuntimeInSeconds": 60
    },
    "CreationTime": "1583831889050",
    "TrainingStartTime": "1583831889050",
    "TrainingEndTime": "1583831889050",
    "LastModifiedTime": "1583831889050",
    "SecondaryStatusTransitions": [

    ],
    "Tags": {

    }
}

}
```
Hyperparameter tuning job state change
Indicates a change in the status of a SageMaker hyperparameter tuning job.

{
  "version": "0",
  "id": "844e2571-85d4-695f-b930-0153b71dcb42",
  "detail-type": "SageMaker HyperParameter Tuning Job State Change",
  "source": "aws.sagemaker",
  "account": "123456789012",
  "time": "2018-10-06T12:26:13Z",
  "region": "us-east-1",
  "resources": [
    "arn:aws:sagemaker:us-east-1:123456789012:tuningJob/x"
  ],
  "detail": {
    "HyperParameterTuningJobName": "016bffd3-6d71-4d3a-9710-0a332b2759fc",
    "HyperParameterTuningJobArn": "arn:aws:sagemaker:us-east-1:123456789012:tuningJob/x",
    "TrainingJobDefinition": {
      "StaticHyperParameters": {},
      "AlgorithmSpecification": {
        "TrainingImage": "trainingImageName",
        "TrainingInputMode": "inputModeFile",
        "MetricDefinitions": [
          {
            "Name": "metricName",
            "Regex": "regex"
          }
        ]
      },
      "RoleArn": "roleArn",
      "InputDataConfig": [
        {
          "ChannelName": "channelName",
          "DataSource": {
            "S3DataSource": {
              "S3DataType": "s3DataType",
              "S3Uri": "s3Uri",
              "S3DataDistributionType": "s3DistributionType"
            }
          },
          "ContentType": "contentType",
          "CompressionType": "gz",
          "RecordWrapperType": "RecordWrapper"
        }
      ],
      "VpcConfig": {
        "SecurityGroupIds": [
          "securityGroupIds"
        ],
        "Subnets": [
          "subnets"
        ]
      },
      "OutputDataConfig": {
        "KmsKeyId": "kmsKeyId",
        "S3OutputPath": "s3OutputPath"
      },
      "ResourceConfig": {
        "InstanceType": "instanceType",
        "InstanceCount": 10,
        "VolumeSizeInGB": 500,
        "VolumeKmsKeyId": "volumeKeyId"
      },
      "StoppingCondition": {
        "MaxRuntimeInSeconds": 3600
      }
    },
    "HyperParameterTuningJobStatus": "status",
    "CreationTime": "1583831889050",
    "LastModifiedTime": "1583831889050",
    "TrainingJobStatusCounters": {
      "Completed": 1,
      "InProgress": 0,
      "RetryableError": 0,
      "NonRetryableError": 0,
      "Stopped": 0
    },
    "ObjectiveStatusCounters": {
      "Succeeded": 1,
      "Pending": 0,
      "Failed": 0
    },
    "Tags": {}
  }
}

Transform job state change
Indicates a change in the status of a SageMaker batch transform job.
If the value of TransformJobStatus is Failed, the event contains the FailureReason field, which provides a description of why the training job failed.

{
  "version": "0",
  "id": "844e2571-85d4-695f-b930-0153b71dcb42",
  "detail-type": "SageMaker Transform Job State Change",
  "source": "aws.sagemaker",
  "account": "123456789012",
  "time": "2018-10-06T12:26:13Z",
  "region": "us-east-1",
  "resources": ["arn:aws:sagemaker:us-east-1:123456789012:transform-job/myjob"],
  "detail": {
    "TransformJobName": "4b52bd8f-e034-4345-818d-884bdd7c9724",
    "TransformJobArn": "arn:aws:sagemaker:us-east-1:123456789012:transform-job/myjob",
    "TransformJobStatus": "another status... GO",
    "FailureReason": "failed why 1",
    "ModelName": "i am a beautiful model",
    "MaxConcurrentTransforms": 5,
    "MaxPayloadInMB": 10,
    "BatchStrategy": "Strategizing...",
    "Environment": {
      "environment1": "environment2"
    },
    "TransformInput": {
      "DataSource": {
        "S3DataSource": {
          "S3DataType": "s3DataType",
          "S3Uri": "s3Uri"
        }
      },
      "ContentType": "content type",
      "CompressionType": "compression type",
      "SplitType": "split type"
    },
    "TransformOutput": {
      "S3OutputPath": "s3Uri",
      "Accept": "accept",
      "AssembleWith": "assemblyType",
      "KmsKeyId": "kmsKeyId"
    },
    "TransformResources": {
      "InstanceType": "instanceType",
      "InstanceCount": 3
    },
    "CreationTime": "2018-10-06T12:26:13Z",
    "TransformStartTime": "2018-10-06T12:26:13Z",
    "TransformEndTime": "2018-10-06T12:26:13Z",
    "Tags": {}
  }
}

Endpoint state change
Indicates a change in the status of a SageMaker hosted real-time inference endpoint.
The following shows an event with an endpoint in the IN_SERVICE state.
```
{
  "version": "0",
  "id": "d2921b5a-b0ad-cace-a8e3-0f159d018e06",
  "detail-type": "SageMaker Endpoint State Change",
  "source": "aws.sagemaker",
  "account": "123456789012",
  "time": "1583831889050",
  "region": "us-west-2",
  "resources": [
      "arn:aws:sagemaker:us-west-2:123456789012:endpoint/myendpoint"
  ],
  "detail": {
      "EndpointName": "MyEndpoint",
      "EndpointArn": "arn:aws:sagemaker:us-west-2:123456789012:endpoint/myendpoint",
      "EndpointConfigName": "MyEndpointConfig",
      "ProductionVariants": [
          {
              "DesiredWeight": 1.0,
              "DesiredInstanceCount": 1.0
          }
      ],
      "EndpointStatus": "IN_SERVICE",
      "CreationTime": 1592411992203.0,
      "LastModifiedTime": 1592411994287.0,
      "Tags": {
  }

}
}
```
Feature group state change
Indicates a change either in the FeatureGroupStatus or the OfflineStoreStatus of a SageMaker feature group.

{
  "version": "0",
  "id": "93201303-abdb-36a4-1b9b-4c1c3e3671c0",
  "detail-type": "SageMaker Feature Group State Change",
  "source": "aws.sagemaker",
  "account": "123456789012",
  "time": "2021-01-26T01:22:01Z",
  "region": "us-east-1",
  "resources": [
    "arn:aws:sagemaker:us-east-1:123456789012:feature-group/sample-feature-group"
  ],
  "detail": {
    "FeatureGroupArn": "arn:aws:sagemaker:us-east-1:123456789012:feature-group/sample-feature-group",
    "FeatureGroupName": "sample-feature-group",
    "RecordIdentifierFeatureName": "RecordIdentifier",
    "EventTimeFeatureName": "EventTime",
    "FeatureDefinitions": [
      {
        "FeatureName": "RecordIdentifier",
        "FeatureType": "Integral"
      },
      {
        "FeatureName": "EventTime",
        "FeatureType": "Fractional"
      }
    ],
    "CreationTime": 1611624059000,
    "OnlineStoreConfig": {
      "EnableOnlineStore": true
    },
    "OfflineStoreConfig": {
      "S3StorageConfig": {
        "S3Uri": "s3://offline/s3/uri"
      },
      "DisableGlueTableCreation": false,
      "DataCatalogConfig": {
        "TableName": "sample-feature-group-1611624059",
        "Catalog": "AwsDataCatalog",
        "Database": "sagemaker_featurestore"
      }
    },
    "RoleArn": "arn:aws:iam::123456789012:role/SageMakerRole",
    "FeatureGroupStatus": "Active",
    "Tags": {}
  }
}

Model package state change
Indicates a change in the status of a SageMaker model package.

{
  "version": "0",
  "id": "844e2571-85d4-695f-b930-0153b71dcb42",
  "detail-type": "SageMaker Model Package State Change",
  "source": "aws.sagemaker",
  "account": "123456789012",
  "time": "2021-02-24T17:00:14Z",
  "region": "us-east-2",
  "resources": [
    "arn:aws:sagemaker:us-east-2:123456789012:model-package/versionedmp-p-idy6c3e1fiqj/2"
  ],
  "source": [
    "aws.sagemaker"
  ],
  "detail": {
    "ModelPackageGroupName": "versionedmp-p-idy6c3e1fiqj",
    "ModelPackageVersion": 2,
    "ModelPackageArn": "arn:aws:sagemaker:us-east-2:123456789012:model-package/versionedmp-p-idy6c3e1fiqj/2",
    "CreationTime": "2021-02-24T17:00:14Z",
    "InferenceSpecification": {
      "Containers": [
        {
          "Image": "257758044811.dkr.ecr.us-east-2.amazonaws.com/sagemaker-xgboost:1.0-1-cpu-py3",
          "ImageDigest": "sha256:4dc8a7e4a010a19bb9e0a6b063f355393f6e623603361bd8b105f554d4f0c004",
          "ModelDataUrl": "s3://sagemaker-project-p-idy6c3e1fiqj/versionedmp-p-idy6c3e1fiqj/AbaloneTrain/pipelines-4r83jejmhorv-TrainAbaloneModel-xw869y8C4a/output/model.tar.gz"
        }
      ],
      "SupportedContentTypes": [
        "text/csv"
      ],
      "SupportedResponseMIMETypes": [
        "text/csv"
      ]
    },
    "ModelPackageStatus": "Completed",
    "ModelPackageStatusDetails": {
      "ValidationStatuses": [],
      "ImageScanStatuses": []
    },
    "CertifyForMarketplace": false,
    "ModelApprovalStatus": "Rejected",
    "MetadataProperties": {
      "GeneratedBy": "arn:aws:sagemaker:us-east-2:123456789012:pipeline/versionedmp-p-idy6c3e1fiqj/execution/4r83jejmhorv"
    },
    "ModelMetrics": {
      "ModelQuality": {
        "Statistics": {
          "ContentType": "application/json",
          "S3Uri": "s3://sagemaker-project-p-idy6c3e1fiqj/versionedmp-p-idy6c3e1fiqj/script-2021-02-24-10-55-15-413/output/evaluation/evaluation.json"
        }
      }
    },
    "LastModifiedTime": "2021-02-24T17:00:14Z"
  }
}

Pipeline execution state change
Indicates a change in the status of a SageMaker pipeline execution.

{
  "version": "0",
  "id": "315c1398-40ff-a850-213b-158f73kd93ir",
  "detail-type": "SageMaker Model Building Pipeline Execution Status Change",
  "source": "aws.sagemaker",
  "account": "123456789012",
  "time": "2021-03-15T16:10:11Z",
  "region": "us-east-1",
  "resources": ["arn:aws:sagemaker:us-east-1:123456789012:pipeline/myPipeline-123", "arn:aws:sagemaker:us-east-1:123456789012:pipeline/myPipeline-123/execution/p4jn9xou8a8s"],
  "detail": {
    "pipelineExecutionDisplayName": "SomeDisplayName",
    "currentPipelineExecutionStatus": "Succeeded",
    "previousPipelineExecutionStatus": "Executing",
    "executionStartTime": "2021-03-15T16:03:13Z",
    "executionEndTime": "2021-03-15T16:10:10Z",
    "pipelineExecutionDescription": "SomeDescription",
    "pipelineArn": "arn:aws:sagemaker:us-east-1:123456789012:pipeline/myPipeline-123",
    "pipelineExecutionArn": "arn:aws:sagemaker:us-east-1:123456789012:pipeline/myPipeline-123/execution/p4jn9xou8a8s"
  }
}

Pipeline step state change
Indicates a change in the status of a SageMaker pipeline step.
If there is a cache hit, the event contains the cacheHitResult field.
If the value of currentStepStatus is Failed, the event contains the failureReason field, which provides a description of why the step failed.

{
  "version": "0",
  "id": "ea37ccbb-5e2b-05e9-4073-1daazc940304",
  "detail-type": "SageMaker Model Building Pipeline Execution Step Status Change",
  "source": "aws.sagemaker",
  "account": "123456789012",
  "time": "2021-03-15T16:10:10Z",
  "region": "us-east-1",
  "resources": ["arn:aws:sagemaker:us-east-1:123456789012:pipeline/myPipeline-123", "arn:aws:sagemaker:us-east-1:123456789012:pipeline/myPipeline-123/execution/p4jn9xou8a8s"],
  "detail": {
    "metadata": {
      "processingJob": {
        "arn": "arn:aws:sagemaker:us-east-1:123456789012:processing-job/pipelines-p4jn9xou8a8s-myprocessingstep1-tmgxry49ug"
      }
    },
    "stepStartTime": "2021-03-15T16:03:14Z",
    "stepEndTime": "2021-03-15T16:10:09Z",
    "stepName": "myprocessingstep1",
    "stepType": "Processing",
    "previousStepStatus": "Executing",
    "currentStepStatus": "Succeeded",
    "pipelineArn": "arn:aws:sagemaker:us-east-1:123456789012:pipeline/myPipeline-123",
    "pipelineExecutionArn": "arn:aws:sagemaker:us-east-1:123456789012:pipeline/myPipeline-123/execution/p4jn9xou8a8s"
  }
}

SageMaker image state change
Indicates a change in the status of a SageMaker image.

{
  "version": "0",
  "id": "cee033a3-17d8-49f8-865f-b9ebf485d9ee",
  "detail-type": "SageMaker Image State Change",
  "source": "aws.sagemaker",
  "account": "123456789012",
  "time": "2021-04-29T01:29:59Z",
  "region": "us-east-1",
  "resources": ["arn:aws:sagemaker:us-west-2:123456789012:image/cee033a3-17d8-49f8-865f-b9ebf485d9ee"],
  "detail": {
    "ImageName": "cee033a3-17d8-49f8-865f-b9ebf485d9ee",
    "ImageArn": "arn:aws:sagemaker:us-west-2:123456789012:image/cee033a3-17d8-49f8-865f-b9ebf485d9ee",
    "ImageStatus": "Creating",
    "Version": 1.0,
    "Tags": {}
  }
}

SageMaker image version state change
Indicates a change in the status of a SageMaker image version.

{
  "version": "0",
  "id": "07fc4615-ebd7-15fc-1746-243411f09f04",
  "detail-type": "SageMaker Image Version State Change",
  "source": "aws.sagemaker",
  "account": "123456789012",
  "time": "2021-04-29T01:29:59Z",
  "region": "us-east-1",
  "resources": ["arn:aws:sagemaker:us-west-2:123456789012:image-version/07800032-2d29-48b7-8f82-5129225b2a85"],
  "detail": {
    "ImageArn": "arn:aws:sagemaker:us-west-2:123456789012:image/a70ff896-c832-4fe8-add6-eba25a0f43e6",
    "ImageVersionArn": "arn:aws:sagemaker:us-west-2:123456789012:image-version/07800032-2d29-48b7-8f82-5129225b2a85",
    "ImageVersionStatus": "Creating",
    "Version": 1.0,
    "Tags": {}
  }
}

For more information about the status values and their meanings for SageMaker jobs, endpoints, and pipelines, see the following links:
+ https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIDescribeAlgorithm.html#sagemaker-DescribeAlgorithm-response-AlgorithmStatus
+ https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIDescribeEndpoint.html#sagemaker-DescribeEndpoint-response-EndpointStatus
+ https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIDescribeFeatureGroup.html#sagemaker-DescribeFeatureGroup-response-FeatureGroupStatus
+ https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIDescribeHyperParameterTuningJob.html#sagemaker-DescribeHyperParameterTuningJob-response-HyperParameterTuningJobStatus
+ https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIDescribeLabelingJob.html#sagemaker-DescribeLabelingJob-response-LabelingJobStatus
+ https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIDescribeModelPackage.html#sagemaker-DescribeModelPackage-response-ModelPackageStatus
+ https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIDescribeNotebookInstance.html#sagemaker-DescribeNotebookInstance-response-NotebookInstanceStatus
+ https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIDescribePipelineExecution.html#sagemaker-DescribePipelineExecution-response-PipelineExecutionStatus
+ https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIPipelineExecutionStep.html#sagemaker-Type-PipelineExecutionStep-StepStatus
+ https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIDescribeProcessingJob.html#sagemaker-DescribeProcessingJob-response-ProcessingJobStatus
+ https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIDescribeTrainingJob.html#sagemaker-DescribeTrainingJob-response-TrainingJobStatus
+ https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIDescribeTransformJob.html#sagemaker-DescribeTransformJob-response-TransformJobStatus
For more information, see the Amazon EventBridge User Guide.
Endpoint deployment state change
Important
The following examples may not work for all endpoints. For a list of features that may exclude your endpoint, see the Exclusions page.
Indicates a state change for an endpoint deployment. The following example shows an endpoint updating with a blue/green canary deployment.

{
    "version": "0",
    "id": "0bd4a141-0a02-9d8a-f977-3924c3fb259c",
    "detail-type": "SageMaker Endpoint Deployment State Change",
    "source": "aws.sagemaker",
    "account": "123456789012",
    "time": "2021-10-25T01:52:12Z",
    "region": "us-west-2",
    "resources": [
        "arn:aws:sagemaker:us-west-2:651393343886:endpoint/sample-endpoint"
    ],
    "detail": {
        "EndpointName": "sample-endpoint",
        "EndpointArn": "arn:aws:sagemaker:us-west-2:651393343886:endpoint/sample-endpoint",
        "EndpointConfigName": "sample-endpoint-config-1",
        "ProductionVariants": [
            {
                "VariantName": "AllTraffic",
                "CurrentWeight": 1,
                "DesiredWeight": 1,
                "CurrentInstanceCount": 3,
                "DesiredInstanceCount": 3
            }
        ],
        "EndpointStatus": "UPDATING",
        "CreationTime": 1635195148181,
        "LastModifiedTime": 1635195148181,
        "Tags": {},
        "PendingDeploymentSummary": {
            "EndpointConfigName": "sample-endpoint-config-2",
            "StartTime": Timestamp,
            "ProductionVariants": [
                {
                    "VariantName": "AllTraffic",
                    "CurrentWeight": 1,
                    "DesiredWeight": 1,
                    "CurrentInstanceCount": 1,
                    "DesiredInstanceCount": 3,
                    "VariantStatus": [
                        {
                            "Status": "Baking",
                            "StatusMessage": "Baking for 600 seconds (TerminationWaitInSeconds) with traffic enabled on canary capacity of 1 instance(s).",
                            "StartTime": 1635195269181,
                        }
                    ]
                }
            ]
        }
    }
}

The following example indicates a state change for an endpoint deployment, which is being updated with new capacity on an existing endpoint configuration.

{
    "version": "0",
    "id": "0bd4a141-0a02-9d8a-f977-3924c3fb259c",
    "detail-type": "SageMaker Endpoint Deployment State Change",
    "source": "aws.sagemaker",
    "account": "123456789012",
    "time": "2021-10-25T01:52:12Z",
    "region": "us-west-2",
    "resources": [
        "arn:aws:sagemaker:us-west-2:651393343886:endpoint/sample-endpoint"
    ],
    "detail": {
        "EndpointName": "sample-endpoint",
        "EndpointArn": "arn:aws:sagemaker:us-west-2:651393343886:endpoint/sample-endpoint",
        "EndpointConfigName": "sample-endpoint-config-1",
        "ProductionVariants": [
            {
                "VariantName": "AllTraffic",
                "CurrentWeight": 1,
                "DesiredWeight": 1,
                "CurrentInstanceCount": 3,
                "DesiredInstanceCount": 6,
                "VariantStatus": [
                    {
                        "Status": "Updating",
                        "StatusMessage": "Scaling out desired instance count to 6.",
                        "StartTime": 1635195269181,
                    }
                ]
            }
        ],
        "EndpointStatus": "UPDATING",
        "CreationTime": 1635195148181,
        "LastModifiedTime": 1635195148181,
        "Tags": {},
    }

The following secondary deployment statuses are also available for endpoints (found in the VariantStatus object.
+ Creating: creating instances for the production variant.
Example message: "Launching X instance(s)."
+ Deleting: terminating instances for the production variant.
Example message: "Terminating X instance(s)."
+ Updating: updating capacity for the production variant.
Example messages: "Launching X instance(s).", "Scaling out desired instance count to X."
+ ActivatingTraffic: turning on traffic for the production variant.
Example message: "Activating traffic on canary capacity of X instance(s)."
+ Baking: waiting period to monitor the CloudWatch alarms in the auto-rollback configuration.
Example message: "Baking for X seconds (TerminationWaitInSeconds) with traffic enabled on full capacity of Y instance(s)."
Model card state change
Indicates a change in the status of an Amazon SageMaker Model Card. For more information about model cards, see Amazon SageMaker Model Cards.

{
    "version": "0",
    "id": "aa7a9c4f-2caa-4d04-a6de-e67227ba4302",
    "detail-type": "SageMaker Model Card State Change",
    "source": "aws.sagemaker",
    "account": "123456789012",
    "time": "2022-11-30T00:00:00Z",
    "region": "us-east-1",
    "resources": [
        "arn:aws:sagemaker:us-east-1:123456789012:model-card/example-card"
    ],
    "detail": {
        "ModelCardVersion": 2,
        "LastModifiedTime": "2022-12-03T00:09:44.893854735Z",
        "LastModifiedBy": {
            "DomainId": "us-east-1",
            "UserProfileArn": "arn:aws:sagemaker:us-east-1:123456789012:user-profile/user",
            "UserProfileName": "user"
        },
        "CreationTime": "2022-12-03T00:09:33.084Z",
        "CreatedBy": {
            "DomainId": "us-east-1",
            "UserProfileArn": "arn:aws:sagemaker:us-east-1:123456789012:user-profile/user",
            "UserProfileName": "user"
        },
        "ModelCardName": "example-card",
        "ModelId": "example-model",
        "ModelCardStatus": "Draft",
        "AccountId": "123456789012",
        "SecurityConfig": {}
    }
}


AWS::Events::Rule SageMakerPipelineParameter
Name/Value pair of a parameter to start execution of a SageMaker Model Building Pipeline.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Name](#cfn-events-rule-sagemakerpipelineparameter-name)" : String,
  "[Value](#cfn-events-rule-sagemakerpipelineparameter-value)" : String
}

YAML

  [Name](#cfn-events-rule-sagemakerpipelineparameter-name): String
  [Value](#cfn-events-rule-sagemakerpipelineparameter-value): String

Properties
Name 
Name of parameter to start execution of a SageMaker Model Building Pipeline.
Required: Yes
Type: String
Minimum: 1
Maximum: 256
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
Update requires: No interruption
Value 
Value of parameter to start execution of a SageMaker Model Building Pipeline.
Required: Yes
Type: String
Maximum: 1024
Update requires: No interruption

AWS::Events::Rule SageMakerPipelineParameters
These are custom parameters to use when the target is a SageMaker Model Building Pipeline that starts based on EventBridge events.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[PipelineParameterList](#cfn-events-rule-sagemakerpipelineparameters-pipelineparameterlist)" : [ SageMakerPipelineParameter, ... ]
}

YAML

  [PipelineParameterList](#cfn-events-rule-sagemakerpipelineparameters-pipelineparameterlist): 
    - SageMakerPipelineParameter

Properties
PipelineParameterList 
List of Parameter names and values for SageMaker Model Building Pipeline execution.
Required: No
Type: List of SageMakerPipelineParameter
Maximum: 200
Update requires: No interruption

AWS::Greengrass::ResourceDefinition SageMakerMachineLearningModelResourceData
Settings for an Secrets Manager machine learning resource. For more information, see Perform Machine Learning Inference in the AWS IoT Greengrass Version 1 Developer Guide.
 In an AWS CloudFormation template, SageMakerMachineLearningModelResourceData can be used in the https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html property type.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DestinationPath](#cfn-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-destinationpath)" : String,
  "[OwnerSetting](#cfn-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-ownersetting)" : ResourceDownloadOwnerSetting,
  "[SageMakerJobArn](#cfn-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-sagemakerjobarn)" : String
}

YAML

  [DestinationPath](#cfn-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-destinationpath): String
  [OwnerSetting](#cfn-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-ownersetting): 
    ResourceDownloadOwnerSetting
  [SageMakerJobArn](#cfn-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-sagemakerjobarn): String

Properties
DestinationPath 
The absolute local path of the resource inside the Lambda environment.
Required: Yes
Type: String
Update requires: Replacement
OwnerSetting 
The owner setting for the downloaded machine learning resource. For more information, see Access Machine Learning Resources from Lambda Functions in the AWS IoT Greengrass Version 1 Developer Guide.
Required: No
Type: ResourceDownloadOwnerSetting
Update requires: Replacement
SageMakerJobArn 
The Amazon Resource Name (ARN) of the Amazon SageMaker training job that represents the source model.
Required: Yes
Type: String
Update requires: Replacement
See also

SageMakerMachineLearningModelResourceData in the * AWS IoT Greengrass Version 1 API Reference * 
AWS IoT Greengrass Version 1 Developer Guide 


AWS::Greengrass::ResourceDefinitionVersion SageMakerMachineLearningModelResourceData
Settings for an Secrets Manager machine learning resource. For more information, see Perform Machine Learning Inference in the AWS IoT Greengrass Version 1 Developer Guide.
 In an AWS CloudFormation template, SageMakerMachineLearningModelResourceData can be used in the https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html property type.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DestinationPath](#cfn-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-destinationpath)" : String,
  "[OwnerSetting](#cfn-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-ownersetting)" : ResourceDownloadOwnerSetting,
  "[SageMakerJobArn](#cfn-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-sagemakerjobarn)" : String
}

YAML

  [DestinationPath](#cfn-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-destinationpath): String
  [OwnerSetting](#cfn-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-ownersetting): 
    ResourceDownloadOwnerSetting
  [SageMakerJobArn](#cfn-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-sagemakerjobarn): String

Properties
DestinationPath 
The absolute local path of the resource inside the Lambda environment.
Required: Yes
Type: String
Update requires: Replacement
OwnerSetting 
The owner setting for the downloaded machine learning resource. For more information, see Access Machine Learning Resources from Lambda Functions in the AWS IoT Greengrass Version 1 Developer Guide.
Required: No
Type: ResourceDownloadOwnerSetting
Update requires: Replacement
SageMakerJobArn 
The Amazon Resource Name (ARN) of the Amazon SageMaker training job that represents the source model.
Required: Yes
Type: String
Update requires: Replacement
See also

SageMakerMachineLearningModelResourceData in the * AWS IoT Greengrass Version 1 API Reference * 
AWS IoT Greengrass Version 1 Developer Guide 


AWS::Pipes::Pipe PipeTargetSageMakerPipelineParameters
The parameters for using a SageMaker pipeline as a target.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[PipelineParameterList](#cfn-pipes-pipe-pipetargetsagemakerpipelineparameters-pipelineparameterlist)" : [ SageMakerPipelineParameter, ... ]
}

YAML

  [PipelineParameterList](#cfn-pipes-pipe-pipetargetsagemakerpipelineparameters-pipelineparameterlist): 
    - SageMakerPipelineParameter

Properties
PipelineParameterList 
List of Parameter names and values for SageMaker Model Building Pipeline execution.
Required: No
Type: List of SageMakerPipelineParameter
Update requires: No interruption

AWS::Pipes::Pipe SageMakerPipelineParameter
Name/Value pair of a parameter to start execution of a SageMaker Model Building Pipeline.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Name](#cfn-pipes-pipe-sagemakerpipelineparameter-name)" : String,
  "[Value](#cfn-pipes-pipe-sagemakerpipelineparameter-value)" : String
}

YAML

  [Name](#cfn-pipes-pipe-sagemakerpipelineparameter-name): String
  [Value](#cfn-pipes-pipe-sagemakerpipelineparameter-value): String

Properties
Name 
Name of parameter to start execution of a SageMaker Model Building Pipeline.
Required: Yes
Type: String
Update requires: No interruption
Value 
Value of parameter to start execution of a SageMaker Model Building Pipeline.
Required: Yes
Type: String
Update requires: No interruption

AWS::SageMaker::App ResourceSpec
Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InstanceType](#cfn-sagemaker-app-resourcespec-instancetype)" : String,
  "[SageMakerImageArn](#cfn-sagemaker-app-resourcespec-sagemakerimagearn)" : String,
  "[SageMakerImageVersionArn](#cfn-sagemaker-app-resourcespec-sagemakerimageversionarn)" : String
}

YAML

  [InstanceType](#cfn-sagemaker-app-resourcespec-instancetype): String
  [SageMakerImageArn](#cfn-sagemaker-app-resourcespec-sagemakerimagearn): String
  [SageMakerImageVersionArn](#cfn-sagemaker-app-resourcespec-sagemakerimageversionarn): String

Properties
InstanceType 
The instance type that the image version runs on.
JupyterServer apps only support the system value.
For KernelGateway apps, the system value is translated to ml.t3.medium. KernelGateway apps also support all other values for available instance types.
Required: No
Type: String
Allowed values: ml.c5.12xlarge | ml.c5.18xlarge | ml.c5.24xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.large | ml.c5.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.g5.12xlarge | ml.g5.16xlarge | ml.g5.24xlarge | ml.g5.2xlarge | ml.g5.48xlarge | ml.g5.4xlarge | ml.g5.8xlarge | ml.g5.xlarge | ml.geospatial.interactive | ml.m5.12xlarge | ml.m5.16xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.8xlarge | ml.m5.large | ml.m5.xlarge | ml.m5d.12xlarge | ml.m5d.16xlarge | ml.m5d.24xlarge | ml.m5d.2xlarge | ml.m5d.4xlarge | ml.m5d.8xlarge | ml.m5d.large | ml.m5d.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge | ml.p3dn.24xlarge | ml.r5.12xlarge | ml.r5.16xlarge | ml.r5.24xlarge | ml.r5.2xlarge | ml.r5.4xlarge | ml.r5.8xlarge | ml.r5.large | ml.r5.xlarge | ml.t3.2xlarge | ml.t3.large | ml.t3.medium | ml.t3.micro | ml.t3.small | ml.t3.xlarge | system
Update requires: No interruption
SageMakerImageArn 
The ARN of the SageMaker image that the image version belongs to.
Required: No
Type: String
Maximum: 256
Pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$
Update requires: No interruption
SageMakerImageVersionArn 
The ARN of the image version created on the instance.
Required: No
Type: String
Maximum: 256
Pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$
Update requires: No interruption

AWS::SageMaker::AppImageConfig FileSystemConfig
The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DefaultGid](#cfn-sagemaker-appimageconfig-filesystemconfig-defaultgid)" : Integer,
  "[DefaultUid](#cfn-sagemaker-appimageconfig-filesystemconfig-defaultuid)" : Integer,
  "[MountPath](#cfn-sagemaker-appimageconfig-filesystemconfig-mountpath)" : String
}

YAML

  [DefaultGid](#cfn-sagemaker-appimageconfig-filesystemconfig-defaultgid): Integer
  [DefaultUid](#cfn-sagemaker-appimageconfig-filesystemconfig-defaultuid): Integer
  [MountPath](#cfn-sagemaker-appimageconfig-filesystemconfig-mountpath): String

Properties
DefaultGid 
The default POSIX group ID (GID). If not specified, defaults to 100.
Required: No
Type: Integer
Minimum: 0
Maximum: 65535
Update requires: No interruption
DefaultUid 
The default POSIX user ID (UID). If not specified, defaults to 1000.
Required: No
Type: Integer
Minimum: 0
Maximum: 65535
Update requires: No interruption
MountPath 
The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.
Required: No
Type: String
Maximum: 1024
Pattern: ^\/.*
Update requires: No interruption

AWS::SageMaker::AppImageConfig KernelGatewayImageConfig
The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[FileSystemConfig](#cfn-sagemaker-appimageconfig-kernelgatewayimageconfig-filesystemconfig)" : FileSystemConfig,
  "[KernelSpecs](#cfn-sagemaker-appimageconfig-kernelgatewayimageconfig-kernelspecs)" : [ KernelSpec, ... ]
}

YAML

  [FileSystemConfig](#cfn-sagemaker-appimageconfig-kernelgatewayimageconfig-filesystemconfig): 
    FileSystemConfig
  [KernelSpecs](#cfn-sagemaker-appimageconfig-kernelgatewayimageconfig-kernelspecs): 
    - KernelSpec

Properties
FileSystemConfig 
The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
Required: No
Type: FileSystemConfig
Update requires: No interruption
KernelSpecs 
The specification of the Jupyter kernels in the image.
Required: Yes
Type: List of KernelSpec
Maximum: 1
Update requires: No interruption

AWS::SageMaker::AppImageConfig KernelSpec
The specification of a Jupyter kernel.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DisplayName](#cfn-sagemaker-appimageconfig-kernelspec-displayname)" : String,
  "[Name](#cfn-sagemaker-appimageconfig-kernelspec-name)" : String
}

YAML

  [DisplayName](#cfn-sagemaker-appimageconfig-kernelspec-displayname): String
  [Name](#cfn-sagemaker-appimageconfig-kernelspec-name): String

Properties
DisplayName 
The display name of the kernel.
Required: No
Type: String
Maximum: 1024
Update requires: No interruption
Name 
The name of the Jupyter kernel in the image. This value is case sensitive.
Required: Yes
Type: String
Maximum: 1024
Update requires: No interruption

AWS::SageMaker::CodeRepository GitConfig
Specifies configuration details for a Git repository in your AWS account.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Branch](#cfn-sagemaker-coderepository-gitconfig-branch)" : String,
  "[RepositoryUrl](#cfn-sagemaker-coderepository-gitconfig-repositoryurl)" : String,
  "[SecretArn](#cfn-sagemaker-coderepository-gitconfig-secretarn)" : String
}

YAML

  [Branch](#cfn-sagemaker-coderepository-gitconfig-branch): String
  [RepositoryUrl](#cfn-sagemaker-coderepository-gitconfig-repositoryurl): String
  [SecretArn](#cfn-sagemaker-coderepository-gitconfig-secretarn): String

Properties
Branch 
The default branch for the Git repository.
Required: No
Type: String
Minimum: 1
Maximum: 1024
Pattern: [^ ~^:?*\[]+
Update requires: Replacement
RepositoryUrl 
The URL where the Git repository is located.
Required: Yes
Type: String
Pattern: ^https://([^/]+)/?(.*)$
Update requires: Replacement
SecretArn 
The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of AWSCURRENT and must be in the following format:
{"username": UserName, "password": Password}
Required: No
Type: String
Minimum: 1
Maximum: 2048
Pattern: arn:aws[a-z\-]*:secretsmanager:[a-z0-9\-]*:[0-9]{12}:secret:.*
Update requires: No interruption

AWS::SageMaker::DataQualityJobDefinition BatchTransformInput
The BatchTransformInput property type specifies Property description not available. for an AWS::SageMaker::DataQualityJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DataCapturedDestinationS3Uri](#cfn-sagemaker-dataqualityjobdefinition-batchtransforminput-datacaptureddestinations3uri)" : String,
  "[DatasetFormat](#cfn-sagemaker-dataqualityjobdefinition-batchtransforminput-datasetformat)" : DatasetFormat,
  "[LocalPath](#cfn-sagemaker-dataqualityjobdefinition-batchtransforminput-localpath)" : String,
  "[S3DataDistributionType](#cfn-sagemaker-dataqualityjobdefinition-batchtransforminput-s3datadistributiontype)" : String,
  "[S3InputMode](#cfn-sagemaker-dataqualityjobdefinition-batchtransforminput-s3inputmode)" : String
}

YAML

  [DataCapturedDestinationS3Uri](#cfn-sagemaker-dataqualityjobdefinition-batchtransforminput-datacaptureddestinations3uri): String
  [DatasetFormat](#cfn-sagemaker-dataqualityjobdefinition-batchtransforminput-datasetformat): 
    DatasetFormat
  [LocalPath](#cfn-sagemaker-dataqualityjobdefinition-batchtransforminput-localpath): String
  [S3DataDistributionType](#cfn-sagemaker-dataqualityjobdefinition-batchtransforminput-s3datadistributiontype): String
  [S3InputMode](#cfn-sagemaker-dataqualityjobdefinition-batchtransforminput-s3inputmode): String

Properties
DataCapturedDestinationS3Uri 
Property description not available.
Required: Yes
Type: String
Update requires: Replacement
DatasetFormat 
Property description not available.
Required: Yes
Type: DatasetFormat
Update requires: Replacement
LocalPath 
Property description not available.
Required: Yes
Type: String
Update requires: Replacement
S3DataDistributionType 
Property description not available.
Required: No
Type: String
Update requires: Replacement
S3InputMode 
Property description not available.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition ClusterConfig
The configuration for the cluster of resources used to run the processing job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InstanceCount](#cfn-sagemaker-dataqualityjobdefinition-clusterconfig-instancecount)" : Integer,
  "[InstanceType](#cfn-sagemaker-dataqualityjobdefinition-clusterconfig-instancetype)" : String,
  "[VolumeKmsKeyId](#cfn-sagemaker-dataqualityjobdefinition-clusterconfig-volumekmskeyid)" : String,
  "[VolumeSizeInGB](#cfn-sagemaker-dataqualityjobdefinition-clusterconfig-volumesizeingb)" : Integer
}

YAML

  [InstanceCount](#cfn-sagemaker-dataqualityjobdefinition-clusterconfig-instancecount): Integer
  [InstanceType](#cfn-sagemaker-dataqualityjobdefinition-clusterconfig-instancetype): String
  [VolumeKmsKeyId](#cfn-sagemaker-dataqualityjobdefinition-clusterconfig-volumekmskeyid): String
  [VolumeSizeInGB](#cfn-sagemaker-dataqualityjobdefinition-clusterconfig-volumesizeingb): Integer

Properties
InstanceCount 
The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
Required: Yes
Type: Integer
Update requires: Replacement
InstanceType 
The ML compute instance type for the processing job.
Required: Yes
Type: String
Update requires: Replacement
VolumeKmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
Required: No
Type: String
Update requires: Replacement
VolumeSizeInGB 
The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
Required: Yes
Type: Integer
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition ConstraintsResource
The constraints resource for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Uri](#cfn-sagemaker-dataqualityjobdefinition-constraintsresource-s3uri)" : String
}

YAML

  [S3Uri](#cfn-sagemaker-dataqualityjobdefinition-constraintsresource-s3uri): String

Properties
S3Uri 
The Amazon S3 URI for the constraints resource.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition Csv
The Csv property type specifies Property description not available. for an AWS::SageMaker::DataQualityJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Header](#cfn-sagemaker-dataqualityjobdefinition-csv-header)" : Boolean
}

YAML

  [Header](#cfn-sagemaker-dataqualityjobdefinition-csv-header): Boolean

Properties
Header 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition DataQualityAppSpecification
Information about the container that a data quality monitoring job runs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ContainerArguments](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification-containerarguments)" : [ String, ... ],
  "[ContainerEntrypoint](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification-containerentrypoint)" : [ String, ... ],
  "[Environment](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification-environment)" : {Key : Value, ...},
  "[ImageUri](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification-imageuri)" : String,
  "[PostAnalyticsProcessorSourceUri](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification-postanalyticsprocessorsourceuri)" : String,
  "[RecordPreprocessorSourceUri](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification-recordpreprocessorsourceuri)" : String
}

YAML

  [ContainerArguments](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification-containerarguments): 
    - String
  [ContainerEntrypoint](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification-containerentrypoint): 
    - String
  [Environment](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification-environment): 
    Key : Value
  [ImageUri](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification-imageuri): String
  [PostAnalyticsProcessorSourceUri](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification-postanalyticsprocessorsourceuri): String
  [RecordPreprocessorSourceUri](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification-recordpreprocessorsourceuri): String

Properties
ContainerArguments 
The arguments to send to the container that the monitoring job runs.
Required: No
Type: List of String
Maximum: 50
Update requires: Replacement
ContainerEntrypoint 
The entrypoint for a container used to run a monitoring job.
Required: No
Type: List of String
Maximum: 100
Update requires: Replacement
Environment 
Sets the environment variables in the container that the monitoring job runs.
Required: No
Type: Map of String
Update requires: Replacement
ImageUri 
The container image that the data quality monitoring job runs.
Required: Yes
Type: String
Maximum: 255
Pattern: .*
Update requires: Replacement
PostAnalyticsProcessorSourceUri 
An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
Required: No
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement
RecordPreprocessorSourceUri 
An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers.
Required: No
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition DataQualityBaselineConfig
Configuration for monitoring constraints and monitoring statistics. These baseline resources are compared against the results of the current job from the series of jobs scheduled to collect data periodically.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[BaseliningJobName](#cfn-sagemaker-dataqualityjobdefinition-dataqualitybaselineconfig-baseliningjobname)" : String,
  "[ConstraintsResource](#cfn-sagemaker-dataqualityjobdefinition-dataqualitybaselineconfig-constraintsresource)" : ConstraintsResource,
  "[StatisticsResource](#cfn-sagemaker-dataqualityjobdefinition-dataqualitybaselineconfig-statisticsresource)" : StatisticsResource
}

YAML

  [BaseliningJobName](#cfn-sagemaker-dataqualityjobdefinition-dataqualitybaselineconfig-baseliningjobname): String
  [ConstraintsResource](#cfn-sagemaker-dataqualityjobdefinition-dataqualitybaselineconfig-constraintsresource): 
    ConstraintsResource
  [StatisticsResource](#cfn-sagemaker-dataqualityjobdefinition-dataqualitybaselineconfig-statisticsresource): 
    StatisticsResource

Properties
BaseliningJobName 
The name of the job that performs baselining for the data quality monitoring job.
Required: No
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
ConstraintsResource 
The constraints resource for a monitoring job.
Required: No
Type: ConstraintsResource
Update requires: Replacement
StatisticsResource 
Configuration for monitoring constraints and monitoring statistics. These baseline resources are compared against the results of the current job from the series of jobs scheduled to collect data periodically.
Required: No
Type: StatisticsResource
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition DataQualityJobInput
The input for the data quality monitoring job. Currently endpoints are supported for input.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[BatchTransformInput](#cfn-sagemaker-dataqualityjobdefinition-dataqualityjobinput-batchtransforminput)" : BatchTransformInput,
  "[EndpointInput](#cfn-sagemaker-dataqualityjobdefinition-dataqualityjobinput-endpointinput)" : EndpointInput
}

YAML

  [BatchTransformInput](#cfn-sagemaker-dataqualityjobdefinition-dataqualityjobinput-batchtransforminput): 
    BatchTransformInput
  [EndpointInput](#cfn-sagemaker-dataqualityjobdefinition-dataqualityjobinput-endpointinput): 
    EndpointInput

Properties
BatchTransformInput 
Property description not available.
Required: No
Type: BatchTransformInput
Update requires: Replacement
EndpointInput 
Input object for the endpoint
Required: No
Type: EndpointInput
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition DatasetFormat
The DatasetFormat property type specifies Property description not available. for an AWS::SageMaker::DataQualityJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Csv](#cfn-sagemaker-dataqualityjobdefinition-datasetformat-csv)" : Csv,
  "[Json](#cfn-sagemaker-dataqualityjobdefinition-datasetformat-json)" : Json,
  "[Parquet](#cfn-sagemaker-dataqualityjobdefinition-datasetformat-parquet)" : Boolean
}

YAML

  [Csv](#cfn-sagemaker-dataqualityjobdefinition-datasetformat-csv): 
    Csv
  [Json](#cfn-sagemaker-dataqualityjobdefinition-datasetformat-json): 
    Json
  [Parquet](#cfn-sagemaker-dataqualityjobdefinition-datasetformat-parquet): Boolean

Properties
Csv 
Property description not available.
Required: No
Type: Csv
Update requires: Replacement
Json 
Property description not available.
Required: No
Type: Json
Update requires: Replacement
Parquet 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition EndpointInput
Input object for the endpoint
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EndpointName](#cfn-sagemaker-dataqualityjobdefinition-endpointinput-endpointname)" : String,
  "[LocalPath](#cfn-sagemaker-dataqualityjobdefinition-endpointinput-localpath)" : String,
  "[S3DataDistributionType](#cfn-sagemaker-dataqualityjobdefinition-endpointinput-s3datadistributiontype)" : String,
  "[S3InputMode](#cfn-sagemaker-dataqualityjobdefinition-endpointinput-s3inputmode)" : String
}

YAML

  [EndpointName](#cfn-sagemaker-dataqualityjobdefinition-endpointinput-endpointname): String
  [LocalPath](#cfn-sagemaker-dataqualityjobdefinition-endpointinput-localpath): String
  [S3DataDistributionType](#cfn-sagemaker-dataqualityjobdefinition-endpointinput-s3datadistributiontype): String
  [S3InputMode](#cfn-sagemaker-dataqualityjobdefinition-endpointinput-s3inputmode): String

Properties
EndpointName 
An endpoint in customer's account which has enabled DataCaptureConfig enabled.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
LocalPath 
Path to the filesystem where the endpoint data is available to the container.
Required: Yes
Type: String
Maximum: 256
Pattern: .*
Update requires: Replacement
S3DataDistributionType 
Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to FullyReplicated
Required: No
Type: String
Allowed values: FullyReplicated | ShardedByS3Key
Update requires: Replacement
S3InputMode 
Whether the Pipe or File is used as the input mode for transferring data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
Required: No
Type: String
Allowed values: File | Pipe
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition Json
The Json property type specifies Property description not available. for an AWS::SageMaker::DataQualityJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Line](#cfn-sagemaker-dataqualityjobdefinition-json-line)" : Boolean
}

YAML

  [Line](#cfn-sagemaker-dataqualityjobdefinition-json-line): Boolean

Properties
Line 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition MonitoringOutput
The output object for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Output](#cfn-sagemaker-dataqualityjobdefinition-monitoringoutput-s3output)" : S3Output
}

YAML

  [S3Output](#cfn-sagemaker-dataqualityjobdefinition-monitoringoutput-s3output): 
    S3Output

Properties
S3Output 
The Amazon S3 storage location where the results of a monitoring job are saved.
Required: Yes
Type: S3Output
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition MonitoringOutputConfig
The output configuration for monitoring jobs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[KmsKeyId](#cfn-sagemaker-dataqualityjobdefinition-monitoringoutputconfig-kmskeyid)" : String,
  "[MonitoringOutputs](#cfn-sagemaker-dataqualityjobdefinition-monitoringoutputconfig-monitoringoutputs)" : [ MonitoringOutput, ... ]
}

YAML

  [KmsKeyId](#cfn-sagemaker-dataqualityjobdefinition-monitoringoutputconfig-kmskeyid): String
  [MonitoringOutputs](#cfn-sagemaker-dataqualityjobdefinition-monitoringoutputconfig-monitoringoutputs): 
    - MonitoringOutput

Properties
KmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: Replacement
MonitoringOutputs 
Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
Required: Yes
Type: List of MonitoringOutput
Maximum: 1
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition MonitoringResources
Identifies the resources to deploy for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ClusterConfig](#cfn-sagemaker-dataqualityjobdefinition-monitoringresources-clusterconfig)" : ClusterConfig
}

YAML

  [ClusterConfig](#cfn-sagemaker-dataqualityjobdefinition-monitoringresources-clusterconfig): 
    ClusterConfig

Properties
ClusterConfig 
The configuration for the cluster resources used to run the processing job.
Required: Yes
Type: ClusterConfig
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition NetworkConfig
Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EnableInterContainerTrafficEncryption](#cfn-sagemaker-dataqualityjobdefinition-networkconfig-enableintercontainertrafficencryption)" : Boolean,
  "[EnableNetworkIsolation](#cfn-sagemaker-dataqualityjobdefinition-networkconfig-enablenetworkisolation)" : Boolean,
  "[VpcConfig](#cfn-sagemaker-dataqualityjobdefinition-networkconfig-vpcconfig)" : VpcConfig
}

YAML

  [EnableInterContainerTrafficEncryption](#cfn-sagemaker-dataqualityjobdefinition-networkconfig-enableintercontainertrafficencryption): Boolean
  [EnableNetworkIsolation](#cfn-sagemaker-dataqualityjobdefinition-networkconfig-enablenetworkisolation): Boolean
  [VpcConfig](#cfn-sagemaker-dataqualityjobdefinition-networkconfig-vpcconfig): 
    VpcConfig

Properties
EnableInterContainerTrafficEncryption 
Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
Required: No
Type: Boolean
Update requires: Replacement
EnableNetworkIsolation 
Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
Required: No
Type: Boolean
Update requires: Replacement
VpcConfig 
Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
Required: No
Type: VpcConfig
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition S3Output
The Amazon S3 storage location where the results of a monitoring job are saved.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[LocalPath](#cfn-sagemaker-dataqualityjobdefinition-s3output-localpath)" : String,
  "[S3UploadMode](#cfn-sagemaker-dataqualityjobdefinition-s3output-s3uploadmode)" : String,
  "[S3Uri](#cfn-sagemaker-dataqualityjobdefinition-s3output-s3uri)" : String
}

YAML

  [LocalPath](#cfn-sagemaker-dataqualityjobdefinition-s3output-localpath): String
  [S3UploadMode](#cfn-sagemaker-dataqualityjobdefinition-s3output-s3uploadmode): String
  [S3Uri](#cfn-sagemaker-dataqualityjobdefinition-s3output-s3uri): String

Properties
LocalPath 
The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
Required: Yes
Type: String
Update requires: Replacement
S3UploadMode 
Whether to upload the results of the monitoring job continuously or after the job completes.
Required: No
Type: String
Update requires: Replacement
S3Uri 
A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
Required: Yes
Type: String
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition StatisticsResource
The statistics resource for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Uri](#cfn-sagemaker-dataqualityjobdefinition-statisticsresource-s3uri)" : String
}

YAML

  [S3Uri](#cfn-sagemaker-dataqualityjobdefinition-statisticsresource-s3uri): String

Properties
S3Uri 
The Amazon S3 URI for the statistics resource.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition StoppingCondition
Specifies a limit to how long a model training job or model compilation job can run. It also specifies how long a managed spot training job has to complete. When the job reaches the time limit, SageMaker ends the training or compilation job. Use this API to cap model training costs.
To stop a training job, SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. 
The training algorithms provided by SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with CreateModel.
Note
The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MaxRuntimeInSeconds](#cfn-sagemaker-dataqualityjobdefinition-stoppingcondition-maxruntimeinseconds)" : Integer
}

YAML

  [MaxRuntimeInSeconds](#cfn-sagemaker-dataqualityjobdefinition-stoppingcondition-maxruntimeinseconds): Integer

Properties
MaxRuntimeInSeconds 
The maximum length of time, in seconds, that a training or compilation job can run before it is stopped.
For compilation jobs, if the job does not complete during this time, a TimeOut error is generated. We recommend starting with 900 seconds and increasing as necessary based on your model.
For all other jobs, if the job does not complete during this time, SageMaker ends the job. When RetryStrategy is specified in the job request, MaxRuntimeInSeconds specifies the maximum time for all of the attempts in total, not each individual attempt. The default value is 1 day. The maximum value is 28 days.
The maximum time that a TrainingJob can run in total, including any time spent publishing metrics or archiving and uploading models after it has been stopped, is 30 days.
Required: Yes
Type: Integer
Minimum: 1
Update requires: Replacement

AWS::SageMaker::DataQualityJobDefinition VpcConfig
Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud and Protect Training Jobs by Using an Amazon Virtual Private Cloud. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[SecurityGroupIds](#cfn-sagemaker-dataqualityjobdefinition-vpcconfig-securitygroupids)" : [ String, ... ],
  "[Subnets](#cfn-sagemaker-dataqualityjobdefinition-vpcconfig-subnets)" : [ String, ... ]
}

YAML

  [SecurityGroupIds](#cfn-sagemaker-dataqualityjobdefinition-vpcconfig-securitygroupids): 
    - String
  [Subnets](#cfn-sagemaker-dataqualityjobdefinition-vpcconfig-subnets): 
    - String

Properties
SecurityGroupIds 
The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
Required: Yes
Type: List of String
Maximum: 5
Update requires: Replacement
Subnets 
The ID of the subnets in the VPC to which you want to connect your training job or model. For information about the availability of specific instance types, see Supported Instance Types and Availability Zones.
Required: Yes
Type: List of String
Maximum: 16
Update requires: Replacement

AWS::SageMaker::Device Device
Information of a particular device.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Description](#cfn-sagemaker-device-device-description)" : String,
  "[DeviceName](#cfn-sagemaker-device-device-devicename)" : String,
  "[IotThingName](#cfn-sagemaker-device-device-iotthingname)" : String
}

YAML

  [Description](#cfn-sagemaker-device-device-description): String
  [DeviceName](#cfn-sagemaker-device-device-devicename): String
  [IotThingName](#cfn-sagemaker-device-device-iotthingname): String

Properties
Description 
Description of the device.
Required: No
Type: String
Minimum: 1
Maximum: 40
Pattern: [\S\s]+
Update requires: No interruption
DeviceName 
The name of the device.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: Replacement
IotThingName 
AWS Internet of Things (IoT) object name.
Required: No
Type: String
Maximum: 128
Pattern: [a-zA-Z0-9:_-]+
Update requires: No interruption

AWS::SageMaker::DeviceFleet EdgeOutputConfig
The output configuration for storing sample data collected by the fleet.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[KmsKeyId](#cfn-sagemaker-devicefleet-edgeoutputconfig-kmskeyid)" : String,
  "[S3OutputLocation](#cfn-sagemaker-devicefleet-edgeoutputconfig-s3outputlocation)" : String
}

YAML

  [KmsKeyId](#cfn-sagemaker-devicefleet-edgeoutputconfig-kmskeyid): String
  [S3OutputLocation](#cfn-sagemaker-devicefleet-edgeoutputconfig-s3outputlocation): String

Properties
KmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume after compilation job. If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account.
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: No interruption
S3OutputLocation 
The Amazon Simple Storage (S3) bucket URI.
Required: Yes
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: No interruption

AWS::SageMaker::Domain CustomImage
A custom SageMaker image. For more information, see Bring your own SageMaker image.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[AppImageConfigName](#cfn-sagemaker-domain-customimage-appimageconfigname)" : String,
  "[ImageName](#cfn-sagemaker-domain-customimage-imagename)" : String,
  "[ImageVersionNumber](#cfn-sagemaker-domain-customimage-imageversionnumber)" : Integer
}

YAML

  [AppImageConfigName](#cfn-sagemaker-domain-customimage-appimageconfigname): String
  [ImageName](#cfn-sagemaker-domain-customimage-imagename): String
  [ImageVersionNumber](#cfn-sagemaker-domain-customimage-imageversionnumber): Integer

Properties
AppImageConfigName 
The name of the AppImageConfig.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: No interruption
ImageName 
The name of the CustomImage. Must be unique to your account.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$
Update requires: No interruption
ImageVersionNumber 
The version number of the CustomImage.
Required: No
Type: Integer
Minimum: 0
Update requires: No interruption

AWS::SageMaker::Domain DefaultSpaceSettings
A collection of settings that apply to spaces created in the Domain.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ExecutionRole](#cfn-sagemaker-domain-defaultspacesettings-executionrole)" : String,
  "[JupyterServerAppSettings](#cfn-sagemaker-domain-defaultspacesettings-jupyterserverappsettings)" : JupyterServerAppSettings,
  "[KernelGatewayAppSettings](#cfn-sagemaker-domain-defaultspacesettings-kernelgatewayappsettings)" : KernelGatewayAppSettings,
  "[SecurityGroups](#cfn-sagemaker-domain-defaultspacesettings-securitygroups)" : [ String, ... ]
}

YAML

  [ExecutionRole](#cfn-sagemaker-domain-defaultspacesettings-executionrole): String
  [JupyterServerAppSettings](#cfn-sagemaker-domain-defaultspacesettings-jupyterserverappsettings): 
    JupyterServerAppSettings
  [KernelGatewayAppSettings](#cfn-sagemaker-domain-defaultspacesettings-kernelgatewayappsettings): 
    KernelGatewayAppSettings
  [SecurityGroups](#cfn-sagemaker-domain-defaultspacesettings-securitygroups): 
    - String

Properties
ExecutionRole 
The execution role for the space.
Required: No
Type: String
Minimum: 20
Maximum: 2048
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Update requires: No interruption
JupyterServerAppSettings 
The JupyterServer app settings.
Required: No
Type: JupyterServerAppSettings
Update requires: No interruption
KernelGatewayAppSettings 
The KernelGateway app settings.
Required: No
Type: KernelGatewayAppSettings
Update requires: No interruption
SecurityGroups 
The security groups for the Amazon Virtual Private Cloud that the space uses for communication.
Required: No
Type: List of String
Maximum: 5
Update requires: No interruption

AWS::SageMaker::Domain DomainSettings
A collection of settings that apply to the SageMaker Domain. These settings are specified through the CreateDomain API call.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[RStudioServerProDomainSettings](#cfn-sagemaker-domain-domainsettings-rstudioserverprodomainsettings)" : RStudioServerProDomainSettings,
  "[SecurityGroupIds](#cfn-sagemaker-domain-domainsettings-securitygroupids)" : [ String, ... ]
}

YAML

  [RStudioServerProDomainSettings](#cfn-sagemaker-domain-domainsettings-rstudioserverprodomainsettings): 
    RStudioServerProDomainSettings
  [SecurityGroupIds](#cfn-sagemaker-domain-domainsettings-securitygroupids): 
    - String

Properties
RStudioServerProDomainSettings 
A collection of settings that configure the RStudioServerPro Domain-level app.
Required: No
Type: RStudioServerProDomainSettings
Update requires: No interruption
SecurityGroupIds 
The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.
Required: No
Type: List of String
Maximum: 3
Update requires: No interruption

AWS::SageMaker::Domain JupyterServerAppSettings
The JupyterServer app settings.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DefaultResourceSpec](#cfn-sagemaker-domain-jupyterserverappsettings-defaultresourcespec)" : ResourceSpec
}

YAML

  [DefaultResourceSpec](#cfn-sagemaker-domain-jupyterserverappsettings-defaultresourcespec): 
    ResourceSpec

Properties
DefaultResourceSpec 
The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterServer app.
Required: No
Type: ResourceSpec
Update requires: No interruption

AWS::SageMaker::Domain KernelGatewayAppSettings
The KernelGateway app settings.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CustomImages](#cfn-sagemaker-domain-kernelgatewayappsettings-customimages)" : [ CustomImage, ... ],
  "[DefaultResourceSpec](#cfn-sagemaker-domain-kernelgatewayappsettings-defaultresourcespec)" : ResourceSpec
}

YAML

  [CustomImages](#cfn-sagemaker-domain-kernelgatewayappsettings-customimages): 
    - CustomImage
  [DefaultResourceSpec](#cfn-sagemaker-domain-kernelgatewayappsettings-defaultresourcespec): 
    ResourceSpec

Properties
CustomImages 
A list of custom SageMaker images that are configured to run as a KernelGateway app.
Required: No
Type: List of CustomImage
Maximum: 200
Update requires: No interruption
DefaultResourceSpec 
The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
The Amazon SageMaker Studio UI does not use the default instance type value set here. The default instance type set here is used when Apps are created using the AWS Command Line Interface or AWS CloudFormation and the instance type parameter value is not passed.
Required: No
Type: ResourceSpec
Update requires: No interruption

AWS::SageMaker::Domain ResourceSpec
Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InstanceType](#cfn-sagemaker-domain-resourcespec-instancetype)" : String,
  "[LifecycleConfigArn](#cfn-sagemaker-domain-resourcespec-lifecycleconfigarn)" : String,
  "[SageMakerImageArn](#cfn-sagemaker-domain-resourcespec-sagemakerimagearn)" : String,
  "[SageMakerImageVersionArn](#cfn-sagemaker-domain-resourcespec-sagemakerimageversionarn)" : String
}

YAML

  [InstanceType](#cfn-sagemaker-domain-resourcespec-instancetype): String
  [LifecycleConfigArn](#cfn-sagemaker-domain-resourcespec-lifecycleconfigarn): String
  [SageMakerImageArn](#cfn-sagemaker-domain-resourcespec-sagemakerimagearn): String
  [SageMakerImageVersionArn](#cfn-sagemaker-domain-resourcespec-sagemakerimageversionarn): String

Properties
InstanceType 
The instance type that the image version runs on.
JupyterServer apps only support the system value.
For KernelGateway apps, the system value is translated to ml.t3.medium. KernelGateway apps also support all other values for available instance types.
Required: No
Type: String
Allowed values: ml.c5.12xlarge | ml.c5.18xlarge | ml.c5.24xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.large | ml.c5.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.g5.12xlarge | ml.g5.16xlarge | ml.g5.24xlarge | ml.g5.2xlarge | ml.g5.48xlarge | ml.g5.4xlarge | ml.g5.8xlarge | ml.g5.xlarge | ml.geospatial.interactive | ml.m5.12xlarge | ml.m5.16xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.8xlarge | ml.m5.large | ml.m5.xlarge | ml.m5d.12xlarge | ml.m5d.16xlarge | ml.m5d.24xlarge | ml.m5d.2xlarge | ml.m5d.4xlarge | ml.m5d.8xlarge | ml.m5d.large | ml.m5d.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge | ml.p3dn.24xlarge | ml.r5.12xlarge | ml.r5.16xlarge | ml.r5.24xlarge | ml.r5.2xlarge | ml.r5.4xlarge | ml.r5.8xlarge | ml.r5.large | ml.r5.xlarge | ml.t3.2xlarge | ml.t3.large | ml.t3.medium | ml.t3.micro | ml.t3.small | ml.t3.xlarge | system
Update requires: Some interruptions
LifecycleConfigArn 
 The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
Required: No
Type: String
Maximum: 256
Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:studio-lifecycle-config/.*
Update requires: Some interruptions
SageMakerImageArn 
The ARN of the SageMaker image that the image version belongs to.
Required: No
Type: String
Maximum: 256
Pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$
Update requires: Some interruptions
SageMakerImageVersionArn 
The ARN of the image version created on the instance.
Required: No
Type: String
Maximum: 256
Pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$
Update requires: Some interruptions

AWS::SageMaker::Domain RSessionAppSettings
A collection of settings that apply to an RSessionGateway app.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CustomImages](#cfn-sagemaker-domain-rsessionappsettings-customimages)" : [ CustomImage, ... ],
  "[DefaultResourceSpec](#cfn-sagemaker-domain-rsessionappsettings-defaultresourcespec)" : ResourceSpec
}

YAML

  [CustomImages](#cfn-sagemaker-domain-rsessionappsettings-customimages): 
    - CustomImage
  [DefaultResourceSpec](#cfn-sagemaker-domain-rsessionappsettings-defaultresourcespec): 
    ResourceSpec

Properties
CustomImages 
A list of custom SageMaker images that are configured to run as a RSession app.
Required: No
Type: List of CustomImage
Maximum: 200
Update requires: No interruption
DefaultResourceSpec 
Specifies the ARNs of a SageMaker image and SageMaker image version, and the instance type that the version runs on.
Required: No
Type: ResourceSpec
Update requires: No interruption

AWS::SageMaker::Domain RStudioServerProAppSettings
A collection of settings that configure user interaction with the RStudioServerPro app. RStudioServerProAppSettings cannot be updated. The RStudioServerPro app must be deleted and a new one created to make any changes.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[AccessStatus](#cfn-sagemaker-domain-rstudioserverproappsettings-accessstatus)" : String,
  "[UserGroup](#cfn-sagemaker-domain-rstudioserverproappsettings-usergroup)" : String
}

YAML

  [AccessStatus](#cfn-sagemaker-domain-rstudioserverproappsettings-accessstatus): String
  [UserGroup](#cfn-sagemaker-domain-rstudioserverproappsettings-usergroup): String

Properties
AccessStatus 
Indicates whether the current user has access to the RStudioServerPro app.
Required: No
Type: String
Allowed values: DISABLED | ENABLED
Update requires: No interruption
UserGroup 
The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.
Required: No
Type: String
Allowed values: R_STUDIO_ADMIN | R_STUDIO_USER
Update requires: No interruption

AWS::SageMaker::Domain RStudioServerProDomainSettings
A collection of settings that configure the RStudioServerPro Domain-level app.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DefaultResourceSpec](#cfn-sagemaker-domain-rstudioserverprodomainsettings-defaultresourcespec)" : ResourceSpec,
  "[DomainExecutionRoleArn](#cfn-sagemaker-domain-rstudioserverprodomainsettings-domainexecutionrolearn)" : String,
  "[RStudioConnectUrl](#cfn-sagemaker-domain-rstudioserverprodomainsettings-rstudioconnecturl)" : String,
  "[RStudioPackageManagerUrl](#cfn-sagemaker-domain-rstudioserverprodomainsettings-rstudiopackagemanagerurl)" : String
}

YAML

  [DefaultResourceSpec](#cfn-sagemaker-domain-rstudioserverprodomainsettings-defaultresourcespec): 
    ResourceSpec
  [DomainExecutionRoleArn](#cfn-sagemaker-domain-rstudioserverprodomainsettings-domainexecutionrolearn): String
  [RStudioConnectUrl](#cfn-sagemaker-domain-rstudioserverprodomainsettings-rstudioconnecturl): String
  [RStudioPackageManagerUrl](#cfn-sagemaker-domain-rstudioserverprodomainsettings-rstudiopackagemanagerurl): String

Properties
DefaultResourceSpec 
A collection that defines the default InstanceType, SageMakerImageArn, and SageMakerImageVersionArn for the Domain.
Required: No
Type: ResourceSpec
Update requires: Replacement
DomainExecutionRoleArn 
The ARN of the execution role for the RStudioServerPro Domain-level app.
Required: Yes
Type: String
Minimum: 20
Maximum: 2048
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Update requires: No interruption
RStudioConnectUrl 
A URL pointing to an RStudio Connect server.
Required: No
Type: String
Update requires: No interruption
RStudioPackageManagerUrl 
A URL pointing to an RStudio Package Manager server.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::Domain SharingSettings
Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[NotebookOutputOption](#cfn-sagemaker-domain-sharingsettings-notebookoutputoption)" : String,
  "[S3KmsKeyId](#cfn-sagemaker-domain-sharingsettings-s3kmskeyid)" : String,
  "[S3OutputPath](#cfn-sagemaker-domain-sharingsettings-s3outputpath)" : String
}

YAML

  [NotebookOutputOption](#cfn-sagemaker-domain-sharingsettings-notebookoutputoption): String
  [S3KmsKeyId](#cfn-sagemaker-domain-sharingsettings-s3kmskeyid): String
  [S3OutputPath](#cfn-sagemaker-domain-sharingsettings-s3outputpath): String

Properties
NotebookOutputOption 
Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
Required: No
Type: String
Allowed values: Allowed | Disabled
Update requires: No interruption
S3KmsKeyId 
When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: No interruption
S3OutputPath 
When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
Required: No
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: No interruption

AWS::SageMaker::Domain UserSettings
A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
SecurityGroups is aggregated when specified in both calls. For all other settings in UserSettings, the values specified in CreateUserProfile take precedence over those specified in CreateDomain.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ExecutionRole](#cfn-sagemaker-domain-usersettings-executionrole)" : String,
  "[JupyterServerAppSettings](#cfn-sagemaker-domain-usersettings-jupyterserverappsettings)" : JupyterServerAppSettings,
  "[KernelGatewayAppSettings](#cfn-sagemaker-domain-usersettings-kernelgatewayappsettings)" : KernelGatewayAppSettings,
  "[RSessionAppSettings](#cfn-sagemaker-domain-usersettings-rsessionappsettings)" : RSessionAppSettings,
  "[RStudioServerProAppSettings](#cfn-sagemaker-domain-usersettings-rstudioserverproappsettings)" : RStudioServerProAppSettings,
  "[SecurityGroups](#cfn-sagemaker-domain-usersettings-securitygroups)" : [ String, ... ],
  "[SharingSettings](#cfn-sagemaker-domain-usersettings-sharingsettings)" : SharingSettings
}

YAML

  [ExecutionRole](#cfn-sagemaker-domain-usersettings-executionrole): String
  [JupyterServerAppSettings](#cfn-sagemaker-domain-usersettings-jupyterserverappsettings): 
    JupyterServerAppSettings
  [KernelGatewayAppSettings](#cfn-sagemaker-domain-usersettings-kernelgatewayappsettings): 
    KernelGatewayAppSettings
  [RSessionAppSettings](#cfn-sagemaker-domain-usersettings-rsessionappsettings): 
    RSessionAppSettings
  [RStudioServerProAppSettings](#cfn-sagemaker-domain-usersettings-rstudioserverproappsettings): 
    RStudioServerProAppSettings
  [SecurityGroups](#cfn-sagemaker-domain-usersettings-securitygroups): 
    - String
  [SharingSettings](#cfn-sagemaker-domain-usersettings-sharingsettings): 
    SharingSettings

Properties
ExecutionRole 
The execution role for the user.
Required: No
Type: String
Minimum: 20
Maximum: 2048
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Update requires: No interruption
JupyterServerAppSettings 
The Jupyter server's app settings.
Required: No
Type: JupyterServerAppSettings
Update requires: No interruption
KernelGatewayAppSettings 
The kernel gateway app settings.
Required: No
Type: KernelGatewayAppSettings
Update requires: No interruption
RSessionAppSettings 
A collection of settings that configure the RSessionGateway app.
Required: No
Type: RSessionAppSettings
Update requires: No interruption
RStudioServerProAppSettings 
A collection of settings that configure user interaction with the RStudioServerPro app.
Required: No
Type: RStudioServerProAppSettings
Update requires: No interruption
SecurityGroups 
The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
Optional when the CreateDomain.AppNetworkAccessType parameter is set to PublicInternetOnly.
Required when the CreateDomain.AppNetworkAccessType parameter is set to VpcOnly.
Amazon SageMaker adds a security group to allow NFS traffic from SageMaker Studio. Therefore, the number of security groups that you can specify is one less than the maximum number shown.
Required: No
Type: List of String
Maximum: 5
Update requires: No interruption
SharingSettings 
Specifies options for sharing SageMaker Studio notebooks.
Required: No
Type: SharingSettings
Update requires: No interruption

AWS::SageMaker::Endpoint Alarm
An Amazon CloudWatch alarm configured to monitor metrics on an endpoint.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[AlarmName](#cfn-sagemaker-endpoint-alarm-alarmname)" : String
}

YAML

  [AlarmName](#cfn-sagemaker-endpoint-alarm-alarmname): String

Properties
AlarmName 
The name of a CloudWatch alarm in your account.
Required: Yes
Type: String
Minimum: 1
Maximum: 255
Pattern: ^(?!\s*$).+
Update requires: No interruption

AWS::SageMaker::Endpoint AutoRollbackConfig
Automatic rollback configuration for handling endpoint deployment failures and recovery.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Alarms](#cfn-sagemaker-endpoint-autorollbackconfig-alarms)" : [ Alarm, ... ]
}

YAML

  [Alarms](#cfn-sagemaker-endpoint-autorollbackconfig-alarms): 
    - Alarm

Properties
Alarms 
List of CloudWatch alarms in your account that are configured to monitor metrics on an endpoint. If any alarms are tripped during a deployment, SageMaker rolls back the deployment.
Required: Yes
Type: List of Alarm
Maximum: 10
Update requires: No interruption

AWS::SageMaker::Endpoint BlueGreenUpdatePolicy
Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. SageMaker flips traffic to the new fleet according to the specified traffic routing configuration. Only one update policy should be used in the deployment configuration. If no update policy is specified, SageMaker uses a blue/green deployment strategy with all at once traffic shifting by default.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MaximumExecutionTimeoutInSeconds](#cfn-sagemaker-endpoint-bluegreenupdatepolicy-maximumexecutiontimeoutinseconds)" : Integer,
  "[TerminationWaitInSeconds](#cfn-sagemaker-endpoint-bluegreenupdatepolicy-terminationwaitinseconds)" : Integer,
  "[TrafficRoutingConfiguration](#cfn-sagemaker-endpoint-bluegreenupdatepolicy-trafficroutingconfiguration)" : TrafficRoutingConfig
}

YAML

  [MaximumExecutionTimeoutInSeconds](#cfn-sagemaker-endpoint-bluegreenupdatepolicy-maximumexecutiontimeoutinseconds): Integer
  [TerminationWaitInSeconds](#cfn-sagemaker-endpoint-bluegreenupdatepolicy-terminationwaitinseconds): Integer
  [TrafficRoutingConfiguration](#cfn-sagemaker-endpoint-bluegreenupdatepolicy-trafficroutingconfiguration): 
    TrafficRoutingConfig

Properties
MaximumExecutionTimeoutInSeconds 
Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in TerminationWaitInSeconds and WaitIntervalInSeconds.
Required: No
Type: Integer
Minimum: 600
Maximum: 14400
Update requires: No interruption
TerminationWaitInSeconds 
Additional waiting time in seconds after the completion of an endpoint deployment before terminating the old endpoint fleet. Default is 0.
Required: No
Type: Integer
Minimum: 0
Maximum: 3600
Update requires: No interruption
TrafficRoutingConfiguration 
Defines the traffic routing strategy to shift traffic from the old fleet to the new fleet during an endpoint deployment.
Required: Yes
Type: TrafficRoutingConfig
Update requires: No interruption

AWS::SageMaker::Endpoint CapacitySize
Specifies the endpoint capacity to activate for production.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Type](#cfn-sagemaker-endpoint-capacitysize-type)" : String,
  "[Value](#cfn-sagemaker-endpoint-capacitysize-value)" : Integer
}

YAML

  [Type](#cfn-sagemaker-endpoint-capacitysize-type): String
  [Value](#cfn-sagemaker-endpoint-capacitysize-value): Integer

Properties
Type 
Specifies the endpoint capacity type.
+  INSTANCE_COUNT: The endpoint activates based on the number of instances.
+  CAPACITY_PERCENT: The endpoint activates based on the specified percentage of capacity.
Required: Yes
Type: String
Allowed values: CAPACITY_PERCENT | INSTANCE_COUNT
Update requires: No interruption
Value 
Defines the capacity size, either as a number of instances or a capacity percentage.
Required: Yes
Type: Integer
Minimum: 1
Update requires: No interruption

AWS::SageMaker::Endpoint DeploymentConfig
The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[AutoRollbackConfiguration](#cfn-sagemaker-endpoint-deploymentconfig-autorollbackconfiguration)" : AutoRollbackConfig,
  "[BlueGreenUpdatePolicy](#cfn-sagemaker-endpoint-deploymentconfig-bluegreenupdatepolicy)" : BlueGreenUpdatePolicy
}

YAML

  [AutoRollbackConfiguration](#cfn-sagemaker-endpoint-deploymentconfig-autorollbackconfiguration): 
    AutoRollbackConfig
  [BlueGreenUpdatePolicy](#cfn-sagemaker-endpoint-deploymentconfig-bluegreenupdatepolicy): 
    BlueGreenUpdatePolicy

Properties
AutoRollbackConfiguration 
Automatic rollback configuration for handling endpoint deployment failures and recovery.
Required: No
Type: AutoRollbackConfig
Update requires: No interruption
BlueGreenUpdatePolicy 
Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. SageMaker flips traffic to the new fleet according to the specified traffic routing configuration. Only one update policy should be used in the deployment configuration. If no update policy is specified, SageMaker uses a blue/green deployment strategy with all at once traffic shifting by default.
Required: Yes
Type: BlueGreenUpdatePolicy
Update requires: No interruption

AWS::SageMaker::Endpoint TrafficRoutingConfig
Defines the traffic routing strategy during an endpoint deployment to shift traffic from the old fleet to the new fleet.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CanarySize](#cfn-sagemaker-endpoint-trafficroutingconfig-canarysize)" : CapacitySize,
  "[LinearStepSize](#cfn-sagemaker-endpoint-trafficroutingconfig-linearstepsize)" : CapacitySize,
  "[Type](#cfn-sagemaker-endpoint-trafficroutingconfig-type)" : String,
  "[WaitIntervalInSeconds](#cfn-sagemaker-endpoint-trafficroutingconfig-waitintervalinseconds)" : Integer
}

YAML

  [CanarySize](#cfn-sagemaker-endpoint-trafficroutingconfig-canarysize): 
    CapacitySize
  [LinearStepSize](#cfn-sagemaker-endpoint-trafficroutingconfig-linearstepsize): 
    CapacitySize
  [Type](#cfn-sagemaker-endpoint-trafficroutingconfig-type): String
  [WaitIntervalInSeconds](#cfn-sagemaker-endpoint-trafficroutingconfig-waitintervalinseconds): Integer

Properties
CanarySize 
Batch size for the first step to turn on traffic on the new endpoint fleet. Value must be less than or equal to 50% of the variant's total instance count.
Required: No
Type: CapacitySize
Update requires: No interruption
LinearStepSize 
Batch size for each step to turn on traffic on the new endpoint fleet. Value must be 10-50% of the variant's total instance count.
Required: No
Type: CapacitySize
Update requires: No interruption
Type 
Traffic routing strategy type.
+  ALL_AT_ONCE: Endpoint traffic shifts to the new fleet in a single step. 
+  CANARY: Endpoint traffic shifts to the new fleet in two steps. The first step is the canary, which is a small portion of the traffic. The second step is the remainder of the traffic. 
+  LINEAR: Endpoint traffic shifts to the new fleet in n steps of a configurable size. 
Required: Yes
Type: String
Allowed values: ALL_AT_ONCE | CANARY | LINEAR
Update requires: No interruption
WaitIntervalInSeconds 
The waiting time (in seconds) between incremental steps to turn on traffic on the new endpoint fleet.
Required: No
Type: Integer
Minimum: 0
Maximum: 3600
Update requires: No interruption

AWS::SageMaker::Endpoint VariantProperty
Specifies a production variant property type for an Endpoint.
If you are updating an Endpoint with the RetainAllVariantProperties option set to true, the VarientProperty objects listed in ExcludeRetainedVariantProperties override the existing variant properties of the Endpoint.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[VariantPropertyType](#cfn-sagemaker-endpoint-variantproperty-variantpropertytype)" : String
}

YAML

  [VariantPropertyType](#cfn-sagemaker-endpoint-variantproperty-variantpropertytype): String

Properties
VariantPropertyType 
The type of variant property. The supported values are:
+ DesiredInstanceCount: Overrides the existing variant instance counts using the InitialInstanceCount values in the ProductionVariants.
+ DesiredWeight: Overrides the existing variant weights using the InitialVariantWeight values in the ProductionVariants.
+ DataCaptureConfig: (Not currently supported.)
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::EndpointConfig AsyncInferenceClientConfig
Configures the behavior of the client used by SageMaker to interact with the model container during asynchronous inference.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MaxConcurrentInvocationsPerInstance](#cfn-sagemaker-endpointconfig-asyncinferenceclientconfig-maxconcurrentinvocationsperinstance)" : Integer
}

YAML

  [MaxConcurrentInvocationsPerInstance](#cfn-sagemaker-endpointconfig-asyncinferenceclientconfig-maxconcurrentinvocationsperinstance): Integer

Properties
MaxConcurrentInvocationsPerInstance 
The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, SageMaker will choose an optimal value for you.
Required: No
Type: Integer
Update requires: Replacement

AWS::SageMaker::EndpointConfig AsyncInferenceConfig
Specifies configuration for how an endpoint performs asynchronous inference.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ClientConfig](#cfn-sagemaker-endpointconfig-asyncinferenceconfig-clientconfig)" : AsyncInferenceClientConfig,
  "[OutputConfig](#cfn-sagemaker-endpointconfig-asyncinferenceconfig-outputconfig)" : AsyncInferenceOutputConfig
}

YAML

  [ClientConfig](#cfn-sagemaker-endpointconfig-asyncinferenceconfig-clientconfig): 
    AsyncInferenceClientConfig
  [OutputConfig](#cfn-sagemaker-endpointconfig-asyncinferenceconfig-outputconfig): 
    AsyncInferenceOutputConfig

Properties
ClientConfig 
Configures the behavior of the client used by SageMaker to interact with the model container during asynchronous inference.
Required: No
Type: AsyncInferenceClientConfig
Update requires: Replacement
OutputConfig 
Specifies the configuration for asynchronous inference invocation outputs.
Required: Yes
Type: AsyncInferenceOutputConfig
Update requires: Replacement

AWS::SageMaker::EndpointConfig AsyncInferenceNotificationConfig
Specifies the configuration for notifications of inference results for asynchronous inference.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ErrorTopic](#cfn-sagemaker-endpointconfig-asyncinferencenotificationconfig-errortopic)" : String,
  "[SuccessTopic](#cfn-sagemaker-endpointconfig-asyncinferencenotificationconfig-successtopic)" : String
}

YAML

  [ErrorTopic](#cfn-sagemaker-endpointconfig-asyncinferencenotificationconfig-errortopic): String
  [SuccessTopic](#cfn-sagemaker-endpointconfig-asyncinferencenotificationconfig-successtopic): String

Properties
ErrorTopic 
Amazon SNS topic to post a notification to when an inference fails. If no topic is provided, no notification is sent on failure.
Required: No
Type: String
Update requires: Replacement
SuccessTopic 
Amazon SNS topic to post a notification to when an inference completes successfully. If no topic is provided, no notification is sent on success.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::EndpointConfig AsyncInferenceOutputConfig
Specifies the configuration for asynchronous inference invocation outputs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[KmsKeyId](#cfn-sagemaker-endpointconfig-asyncinferenceoutputconfig-kmskeyid)" : String,
  "[NotificationConfig](#cfn-sagemaker-endpointconfig-asyncinferenceoutputconfig-notificationconfig)" : AsyncInferenceNotificationConfig,
  "[S3OutputPath](#cfn-sagemaker-endpointconfig-asyncinferenceoutputconfig-s3outputpath)" : String
}

YAML

  [KmsKeyId](#cfn-sagemaker-endpointconfig-asyncinferenceoutputconfig-kmskeyid): String
  [NotificationConfig](#cfn-sagemaker-endpointconfig-asyncinferenceoutputconfig-notificationconfig): 
    AsyncInferenceNotificationConfig
  [S3OutputPath](#cfn-sagemaker-endpointconfig-asyncinferenceoutputconfig-s3outputpath): String

Properties
KmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.
Required: No
Type: String
Update requires: Replacement
NotificationConfig 
Specifies the configuration for notifications of inference results for asynchronous inference.
Required: No
Type: AsyncInferenceNotificationConfig
Update requires: Replacement
S3OutputPath 
The Amazon S3 location to upload inference responses to.
Required: Yes
Type: String
Update requires: Replacement

AWS::SageMaker::EndpointConfig CaptureOption
Specifies whether the endpoint captures input data or output data.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CaptureMode](#cfn-sagemaker-endpointconfig-captureoption-capturemode)" : String
}

YAML

  [CaptureMode](#cfn-sagemaker-endpointconfig-captureoption-capturemode): String

Properties
CaptureMode 
Specifies whether the endpoint captures input data or output data.
Required: Yes
Type: String
Allowed values: Input | Output
Update requires: Replacement

AWS::SageMaker::EndpointConfig ClarifyExplainerConfig
The ClarifyExplainerConfig property type specifies Property description not available. for an AWS::SageMaker::EndpointConfig.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EnableExplanations](#cfn-sagemaker-endpointconfig-clarifyexplainerconfig-enableexplanations)" : String,
  "[InferenceConfig](#cfn-sagemaker-endpointconfig-clarifyexplainerconfig-inferenceconfig)" : ClarifyInferenceConfig,
  "[ShapConfig](#cfn-sagemaker-endpointconfig-clarifyexplainerconfig-shapconfig)" : ClarifyShapConfig
}

YAML

  [EnableExplanations](#cfn-sagemaker-endpointconfig-clarifyexplainerconfig-enableexplanations): String
  [InferenceConfig](#cfn-sagemaker-endpointconfig-clarifyexplainerconfig-inferenceconfig): 
    ClarifyInferenceConfig
  [ShapConfig](#cfn-sagemaker-endpointconfig-clarifyexplainerconfig-shapconfig): 
    ClarifyShapConfig

Properties
EnableExplanations 
Property description not available.
Required: No
Type: String
Update requires: Replacement
InferenceConfig 
Property description not available.
Required: No
Type: ClarifyInferenceConfig
Update requires: Replacement
ShapConfig 
Property description not available.
Required: Yes
Type: ClarifyShapConfig
Update requires: Replacement

AWS::SageMaker::EndpointConfig ClarifyFeatureType
The ClarifyFeatureType property type specifies Property description not available. for an AWS::SageMaker::EndpointConfig.

AWS::SageMaker::EndpointConfig ClarifyHeader
The ClarifyHeader property type specifies Property description not available. for an AWS::SageMaker::EndpointConfig.

AWS::SageMaker::EndpointConfig ClarifyInferenceConfig
The ClarifyInferenceConfig property type specifies Property description not available. for an AWS::SageMaker::EndpointConfig.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ContentTemplate](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-contenttemplate)" : String,
  "[FeatureHeaders](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-featureheaders)" : [ ClarifyHeader, ... ],
  "[FeaturesAttribute](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-featuresattribute)" : String,
  "[FeatureTypes](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-featuretypes)" : [ ClarifyFeatureType, ... ],
  "[LabelAttribute](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-labelattribute)" : String,
  "[LabelHeaders](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-labelheaders)" : [ ClarifyHeader, ... ],
  "[LabelIndex](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-labelindex)" : Integer,
  "[MaxPayloadInMB](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-maxpayloadinmb)" : Integer,
  "[MaxRecordCount](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-maxrecordcount)" : Integer,
  "[ProbabilityAttribute](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-probabilityattribute)" : String,
  "[ProbabilityIndex](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-probabilityindex)" : Integer
}

YAML

  [ContentTemplate](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-contenttemplate): String
  [FeatureHeaders](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-featureheaders): 
    - ClarifyHeader
  [FeaturesAttribute](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-featuresattribute): String
  [FeatureTypes](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-featuretypes): 
    - ClarifyFeatureType
  [LabelAttribute](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-labelattribute): String
  [LabelHeaders](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-labelheaders): 
    - ClarifyHeader
  [LabelIndex](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-labelindex): Integer
  [MaxPayloadInMB](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-maxpayloadinmb): Integer
  [MaxRecordCount](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-maxrecordcount): Integer
  [ProbabilityAttribute](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-probabilityattribute): String
  [ProbabilityIndex](#cfn-sagemaker-endpointconfig-clarifyinferenceconfig-probabilityindex): Integer

Properties
ContentTemplate 
Property description not available.
Required: No
Type: String
Update requires: Replacement
FeatureHeaders 
Property description not available.
Required: No
Type: List of ClarifyHeader
Update requires: Replacement
FeaturesAttribute 
Property description not available.
Required: No
Type: String
Update requires: Replacement
FeatureTypes 
Property description not available.
Required: No
Type: List of ClarifyFeatureType
Update requires: Replacement
LabelAttribute 
Property description not available.
Required: No
Type: String
Update requires: Replacement
LabelHeaders 
Property description not available.
Required: No
Type: List of ClarifyHeader
Update requires: Replacement
LabelIndex 
Property description not available.
Required: No
Type: Integer
Update requires: Replacement
MaxPayloadInMB 
Property description not available.
Required: No
Type: Integer
Update requires: Replacement
MaxRecordCount 
Property description not available.
Required: No
Type: Integer
Update requires: Replacement
ProbabilityAttribute 
Property description not available.
Required: No
Type: String
Update requires: Replacement
ProbabilityIndex 
Property description not available.
Required: No
Type: Integer
Update requires: Replacement

AWS::SageMaker::EndpointConfig ClarifyShapBaselineConfig
The ClarifyShapBaselineConfig property type specifies Property description not available. for an AWS::SageMaker::EndpointConfig.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MimeType](#cfn-sagemaker-endpointconfig-clarifyshapbaselineconfig-mimetype)" : String,
  "[ShapBaseline](#cfn-sagemaker-endpointconfig-clarifyshapbaselineconfig-shapbaseline)" : String,
  "[ShapBaselineUri](#cfn-sagemaker-endpointconfig-clarifyshapbaselineconfig-shapbaselineuri)" : String
}

YAML

  [MimeType](#cfn-sagemaker-endpointconfig-clarifyshapbaselineconfig-mimetype): String
  [ShapBaseline](#cfn-sagemaker-endpointconfig-clarifyshapbaselineconfig-shapbaseline): String
  [ShapBaselineUri](#cfn-sagemaker-endpointconfig-clarifyshapbaselineconfig-shapbaselineuri): String

Properties
MimeType 
Property description not available.
Required: No
Type: String
Update requires: Replacement
ShapBaseline 
Property description not available.
Required: No
Type: String
Update requires: Replacement
ShapBaselineUri 
Property description not available.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::EndpointConfig ClarifyShapConfig
The ClarifyShapConfig property type specifies Property description not available. for an AWS::SageMaker::EndpointConfig.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[NumberOfSamples](#cfn-sagemaker-endpointconfig-clarifyshapconfig-numberofsamples)" : Integer,
  "[Seed](#cfn-sagemaker-endpointconfig-clarifyshapconfig-seed)" : Integer,
  "[ShapBaselineConfig](#cfn-sagemaker-endpointconfig-clarifyshapconfig-shapbaselineconfig)" : ClarifyShapBaselineConfig,
  "[TextConfig](#cfn-sagemaker-endpointconfig-clarifyshapconfig-textconfig)" : ClarifyTextConfig,
  "[UseLogit](#cfn-sagemaker-endpointconfig-clarifyshapconfig-uselogit)" : Boolean
}

YAML

  [NumberOfSamples](#cfn-sagemaker-endpointconfig-clarifyshapconfig-numberofsamples): Integer
  [Seed](#cfn-sagemaker-endpointconfig-clarifyshapconfig-seed): Integer
  [ShapBaselineConfig](#cfn-sagemaker-endpointconfig-clarifyshapconfig-shapbaselineconfig): 
    ClarifyShapBaselineConfig
  [TextConfig](#cfn-sagemaker-endpointconfig-clarifyshapconfig-textconfig): 
    ClarifyTextConfig
  [UseLogit](#cfn-sagemaker-endpointconfig-clarifyshapconfig-uselogit): Boolean

Properties
NumberOfSamples 
Property description not available.
Required: No
Type: Integer
Update requires: Replacement
Seed 
Property description not available.
Required: No
Type: Integer
Update requires: Replacement
ShapBaselineConfig 
Property description not available.
Required: Yes
Type: ClarifyShapBaselineConfig
Update requires: Replacement
TextConfig 
Property description not available.
Required: No
Type: ClarifyTextConfig
Update requires: Replacement
UseLogit 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::EndpointConfig ClarifyTextConfig
The ClarifyTextConfig property type specifies Property description not available. for an AWS::SageMaker::EndpointConfig.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Granularity](#cfn-sagemaker-endpointconfig-clarifytextconfig-granularity)" : String,
  "[Language](#cfn-sagemaker-endpointconfig-clarifytextconfig-language)" : String
}

YAML

  [Granularity](#cfn-sagemaker-endpointconfig-clarifytextconfig-granularity): String
  [Language](#cfn-sagemaker-endpointconfig-clarifytextconfig-language): String

Properties
Granularity 
Property description not available.
Required: Yes
Type: String
Update requires: Replacement
Language 
Property description not available.
Required: Yes
Type: String
Update requires: Replacement

AWS::SageMaker::EndpointConfig CaptureContentTypeHeader
Specifies the JSON and CSV content types of the data that the endpoint captures.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CsvContentTypes](#cfn-sagemaker-endpointconfig-datacaptureconfig-capturecontenttypeheader-csvcontenttypes)" : [ String, ... ],
  "[JsonContentTypes](#cfn-sagemaker-endpointconfig-datacaptureconfig-capturecontenttypeheader-jsoncontenttypes)" : [ String, ... ]
}

YAML

  [CsvContentTypes](#cfn-sagemaker-endpointconfig-datacaptureconfig-capturecontenttypeheader-csvcontenttypes): 
    - String
  [JsonContentTypes](#cfn-sagemaker-endpointconfig-datacaptureconfig-capturecontenttypeheader-jsoncontenttypes): 
    - String

Properties
CsvContentTypes 
A list of the CSV content types of the data that the endpoint captures. For the endpoint to capture the data, you must also specify the content type when you invoke the endpoint.
Required: No
Type: List of String
Maximum: 10
Update requires: Replacement
JsonContentTypes 
A list of the JSON content types of the data that the endpoint captures. For the endpoint to capture the data, you must also specify the content type when you invoke the endpoint.
Required: No
Type: List of String
Maximum: 10
Update requires: Replacement

AWS::SageMaker::EndpointConfig DataCaptureConfig
Specifies the configuration of your endpoint for model monitor data capture. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CaptureContentTypeHeader](#cfn-sagemaker-endpointconfig-datacaptureconfig-capturecontenttypeheader)" : CaptureContentTypeHeader,
  "[CaptureOptions](#cfn-sagemaker-endpointconfig-datacaptureconfig-captureoptions)" : [ CaptureOption, ... ],
  "[DestinationS3Uri](#cfn-sagemaker-endpointconfig-datacaptureconfig-destinations3uri)" : String,
  "[EnableCapture](#cfn-sagemaker-endpointconfig-datacaptureconfig-enablecapture)" : Boolean,
  "[InitialSamplingPercentage](#cfn-sagemaker-endpointconfig-datacaptureconfig-initialsamplingpercentage)" : Integer,
  "[KmsKeyId](#cfn-sagemaker-endpointconfig-datacaptureconfig-kmskeyid)" : String
}

YAML

  [CaptureContentTypeHeader](#cfn-sagemaker-endpointconfig-datacaptureconfig-capturecontenttypeheader): 
    CaptureContentTypeHeader
  [CaptureOptions](#cfn-sagemaker-endpointconfig-datacaptureconfig-captureoptions): 
    - CaptureOption
  [DestinationS3Uri](#cfn-sagemaker-endpointconfig-datacaptureconfig-destinations3uri): String
  [EnableCapture](#cfn-sagemaker-endpointconfig-datacaptureconfig-enablecapture): Boolean
  [InitialSamplingPercentage](#cfn-sagemaker-endpointconfig-datacaptureconfig-initialsamplingpercentage): Integer
  [KmsKeyId](#cfn-sagemaker-endpointconfig-datacaptureconfig-kmskeyid): String

Properties
CaptureContentTypeHeader 
A list of the JSON and CSV content type that the endpoint captures.
Required: No
Type: CaptureContentTypeHeader
Update requires: Replacement
CaptureOptions 
Specifies whether the endpoint captures input data to your model, output data from your model, or both.
Required: Yes
Type: List of CaptureOption
Maximum: 2
Update requires: Replacement
DestinationS3Uri 
The S3 bucket where model monitor stores captured data.
Required: Yes
Type: String
Maximum: 512
Pattern: ^(https|s3)://([^/])/?(.*)$
Update requires: Replacement
EnableCapture 
Set to True to enable data capture.
Required: No
Type: Boolean
Update requires: Replacement
InitialSamplingPercentage 
The percentage of data to capture.
Required: Yes
Type: Integer
Minimum: 0
Maximum: 100
Update requires: Replacement
KmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the captured data at rest using Amazon S3 server-side encryption. The KmsKeyId can be any of the following formats: Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab Key ARN: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab Alias name: alias/ExampleAlias Alias name ARN: arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account. For more information, see KMS-Managed Encryption Keys (https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html) in the Amazon Simple Storage Service Developer Guide. The KMS key policy must grant permission to the IAM role that you specify in your CreateModel (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateModel.html) request. For more information, see Using Key Policies in AWS KMS (http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html) in the AWS Key Management Service Developer Guide.
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: Replacement

AWS::SageMaker::EndpointConfig ExplainerConfig
The ExplainerConfig property type specifies Property description not available. for an AWS::SageMaker::EndpointConfig.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ClarifyExplainerConfig](#cfn-sagemaker-endpointconfig-explainerconfig-clarifyexplainerconfig)" : ClarifyExplainerConfig
}

YAML

  [ClarifyExplainerConfig](#cfn-sagemaker-endpointconfig-explainerconfig-clarifyexplainerconfig): 
    ClarifyExplainerConfig

Properties
ClarifyExplainerConfig 
Property description not available.
Required: No
Type: ClarifyExplainerConfig
Update requires: Replacement

AWS::SageMaker::EndpointConfig ServerlessConfig
Specifies the serverless configuration for an endpoint variant.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MaxConcurrency](#cfn-sagemaker-endpointconfig-productionvariant-serverlessconfig-maxconcurrency)" : Integer,
  "[MemorySizeInMB](#cfn-sagemaker-endpointconfig-productionvariant-serverlessconfig-memorysizeinmb)" : Integer
}

YAML

  [MaxConcurrency](#cfn-sagemaker-endpointconfig-productionvariant-serverlessconfig-maxconcurrency): Integer
  [MemorySizeInMB](#cfn-sagemaker-endpointconfig-productionvariant-serverlessconfig-memorysizeinmb): Integer

Properties
MaxConcurrency 
The maximum number of concurrent invocations your serverless endpoint can process.
Required: Yes
Type: Integer
Minimum: 1
Maximum: 200
Update requires: Replacement
MemorySizeInMB 
The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.
Required: Yes
Type: Integer
Minimum: 1024
Maximum: 6144
Update requires: Replacement

AWS::SageMaker::EndpointConfig ProductionVariant
Specifies a model that you want to host and the resources to deploy for hosting it. If you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying the InitialVariantWeight objects. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[AcceleratorType](#cfn-sagemaker-endpointconfig-productionvariant-acceleratortype)" : String,
  "[ContainerStartupHealthCheckTimeoutInSeconds](#cfn-sagemaker-endpointconfig-productionvariant-containerstartuphealthchecktimeoutinseconds)" : Integer,
  "[InitialInstanceCount](#cfn-sagemaker-endpointconfig-productionvariant-initialinstancecount)" : Integer,
  "[InitialVariantWeight](#cfn-sagemaker-endpointconfig-productionvariant-initialvariantweight)" : Double,
  "[InstanceType](#cfn-sagemaker-endpointconfig-productionvariant-instancetype)" : String,
  "[ModelDataDownloadTimeoutInSeconds](#cfn-sagemaker-endpointconfig-productionvariant-modeldatadownloadtimeoutinseconds)" : Integer,
  "[ModelName](#cfn-sagemaker-endpointconfig-productionvariant-modelname)" : String,
  "[ServerlessConfig](#cfn-sagemaker-endpointconfig-productionvariant-serverlessconfig)" : ServerlessConfig,
  "[VariantName](#cfn-sagemaker-endpointconfig-productionvariant-variantname)" : String,
  "[VolumeSizeInGB](#cfn-sagemaker-endpointconfig-productionvariant-volumesizeingb)" : Integer
}

YAML

  [AcceleratorType](#cfn-sagemaker-endpointconfig-productionvariant-acceleratortype): String
  [ContainerStartupHealthCheckTimeoutInSeconds](#cfn-sagemaker-endpointconfig-productionvariant-containerstartuphealthchecktimeoutinseconds): Integer
  [InitialInstanceCount](#cfn-sagemaker-endpointconfig-productionvariant-initialinstancecount): Integer
  [InitialVariantWeight](#cfn-sagemaker-endpointconfig-productionvariant-initialvariantweight): Double
  [InstanceType](#cfn-sagemaker-endpointconfig-productionvariant-instancetype): String
  [ModelDataDownloadTimeoutInSeconds](#cfn-sagemaker-endpointconfig-productionvariant-modeldatadownloadtimeoutinseconds): Integer
  [ModelName](#cfn-sagemaker-endpointconfig-productionvariant-modelname): String
  [ServerlessConfig](#cfn-sagemaker-endpointconfig-productionvariant-serverlessconfig): 
    ServerlessConfig
  [VariantName](#cfn-sagemaker-endpointconfig-productionvariant-variantname): String
  [VolumeSizeInGB](#cfn-sagemaker-endpointconfig-productionvariant-volumesizeingb): Integer

Properties
AcceleratorType 
The size of the Elastic Inference (EI) instance to use for the production variant. EI instances provide on-demand GPU computing for inference. For more information, see Using Elastic Inference in Amazon SageMaker. For more information, see Using Elastic Inference in Amazon SageMaker.
Required: No
Type: String
Allowed values: ml.eia1.large | ml.eia1.medium | ml.eia1.xlarge | ml.eia2.large | ml.eia2.medium | ml.eia2.xlarge
Update requires: Replacement
ContainerStartupHealthCheckTimeoutInSeconds 
Property description not available.
Required: No
Type: Integer
Update requires: Replacement
InitialInstanceCount 
Number of instances to launch initially.
Required: No
Type: Integer
Minimum: 1
Update requires: Replacement
InitialVariantWeight 
Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. The traffic to a production variant is determined by the ratio of the VariantWeight to the sum of all VariantWeight values across all ProductionVariants. If unspecified, it defaults to 1.0.
Required: Yes
Type: Double
Update requires: Replacement
InstanceType 
The ML compute instance type.
Required: No
Type: String
Allowed values: ml.c4.2xlarge | ml.c4.4xlarge | ml.c4.8xlarge | ml.c4.large | ml.c4.xlarge | ml.c5.18xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.large | ml.c5.xlarge | ml.c5d.18xlarge | ml.c5d.2xlarge | ml.c5d.4xlarge | ml.c5d.9xlarge | ml.c5d.large | ml.c5d.xlarge | ml.c6g.12xlarge | ml.c6g.16xlarge | ml.c6g.2xlarge | ml.c6g.4xlarge | ml.c6g.8xlarge | ml.c6g.large | ml.c6g.xlarge | ml.c6gd.12xlarge | ml.c6gd.16xlarge | ml.c6gd.2xlarge | ml.c6gd.4xlarge | ml.c6gd.8xlarge | ml.c6gd.large | ml.c6gd.xlarge | ml.c6gn.12xlarge | ml.c6gn.16xlarge | ml.c6gn.2xlarge | ml.c6gn.4xlarge | ml.c6gn.8xlarge | ml.c6gn.large | ml.c6gn.xlarge | ml.c6i.12xlarge | ml.c6i.16xlarge | ml.c6i.24xlarge | ml.c6i.2xlarge | ml.c6i.32xlarge | ml.c6i.4xlarge | ml.c6i.8xlarge | ml.c6i.large | ml.c6i.xlarge | ml.c7g.12xlarge | ml.c7g.16xlarge | ml.c7g.2xlarge | ml.c7g.4xlarge | ml.c7g.8xlarge | ml.c7g.large | ml.c7g.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.g5.12xlarge | ml.g5.16xlarge | ml.g5.24xlarge | ml.g5.2xlarge | ml.g5.48xlarge | ml.g5.4xlarge | ml.g5.8xlarge | ml.g5.xlarge | ml.inf1.24xlarge | ml.inf1.2xlarge | ml.inf1.6xlarge | ml.inf1.xlarge | ml.m4.10xlarge | ml.m4.16xlarge | ml.m4.2xlarge | ml.m4.4xlarge | ml.m4.xlarge | ml.m5.12xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.large | ml.m5.xlarge | ml.m5d.12xlarge | ml.m5d.24xlarge | ml.m5d.2xlarge | ml.m5d.4xlarge | ml.m5d.large | ml.m5d.xlarge | ml.m6g.12xlarge | ml.m6g.16xlarge | ml.m6g.2xlarge | ml.m6g.4xlarge | ml.m6g.8xlarge | ml.m6g.large | ml.m6g.xlarge | ml.m6gd.12xlarge | ml.m6gd.16xlarge | ml.m6gd.2xlarge | ml.m6gd.4xlarge | ml.m6gd.8xlarge | ml.m6gd.large | ml.m6gd.xlarge | ml.p2.16xlarge | ml.p2.8xlarge | ml.p2.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge | ml.p4d.24xlarge | ml.p4de.24xlarge | ml.r5.12xlarge | ml.r5.24xlarge | ml.r5.2xlarge | ml.r5.4xlarge | ml.r5.large | ml.r5.xlarge | ml.r5d.12xlarge | ml.r5d.24xlarge | ml.r5d.2xlarge | ml.r5d.4xlarge | ml.r5d.large | ml.r5d.xlarge | ml.r6g.12xlarge | ml.r6g.16xlarge | ml.r6g.2xlarge | ml.r6g.4xlarge | ml.r6g.8xlarge | ml.r6g.large | ml.r6g.xlarge | ml.r6gd.12xlarge | ml.r6gd.16xlarge | ml.r6gd.2xlarge | ml.r6gd.4xlarge | ml.r6gd.8xlarge | ml.r6gd.large | ml.r6gd.xlarge | ml.t2.2xlarge | ml.t2.large | ml.t2.medium | ml.t2.xlarge
Update requires: Replacement
ModelDataDownloadTimeoutInSeconds 
Property description not available.
Required: No
Type: Integer
Update requires: Replacement
ModelName 
The name of the model that you want to host. This is the name that you specified when creating the model.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
Update requires: Replacement
ServerlessConfig 
The serverless configuration for an endpoint. Specifies a serverless endpoint configuration instead of an instance-based endpoint configuration.
Required: No
Type: ServerlessConfig
Update requires: No interruption
VariantName 
The name of the production variant.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
VolumeSizeInGB 
Property description not available.
Required: No
Type: Integer
Update requires: Replacement

AWS::SageMaker::FeatureGroup DataCatalogConfig
The meta data of the Glue table which serves as data catalog for the OfflineStore. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Catalog](#cfn-sagemaker-featuregroup-datacatalogconfig-catalog)" : String,
  "[Database](#cfn-sagemaker-featuregroup-datacatalogconfig-database)" : String,
  "[TableName](#cfn-sagemaker-featuregroup-datacatalogconfig-tablename)" : String
}

YAML

  [Catalog](#cfn-sagemaker-featuregroup-datacatalogconfig-catalog): String
  [Database](#cfn-sagemaker-featuregroup-datacatalogconfig-database): String
  [TableName](#cfn-sagemaker-featuregroup-datacatalogconfig-tablename): String

Properties
Catalog 
The name of the Glue table catalog.
Required: Yes
Type: String
Minimum: 1
Maximum: 255
Pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
Update requires: Replacement
Database 
The name of the Glue table database.
Required: Yes
Type: String
Minimum: 1
Maximum: 255
Pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
Update requires: Replacement
TableName 
The name of the Glue table.
Required: Yes
Type: String
Minimum: 1
Maximum: 255
Pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
Update requires: Replacement

AWS::SageMaker::FeatureGroup FeatureDefinition
A list of features. You must include FeatureName and FeatureType. Valid feature FeatureTypes are Integral, Fractional and String. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[FeatureName](#cfn-sagemaker-featuregroup-featuredefinition-featurename)" : String,
  "[FeatureType](#cfn-sagemaker-featuregroup-featuredefinition-featuretype)" : String
}

YAML

  [FeatureName](#cfn-sagemaker-featuregroup-featuredefinition-featurename): String
  [FeatureType](#cfn-sagemaker-featuregroup-featuredefinition-featuretype): String

Properties
FeatureName 
The name of a feature. The type must be a string. FeatureName cannot be any of the following: is_deleted, write_time, api_invocation_time.
Required: Yes
Type: String
Minimum: 1
Maximum: 64
Pattern: ^[a-zA-Z0-9]([-_]*[a-zA-Z0-9]){0,63}
Update requires: No interruption
FeatureType 
The value type of a feature. Valid values are Integral, Fractional, or String.
Required: Yes
Type: String
Allowed values: Fractional | Integral | String
Update requires: No interruption

AWS::SageMaker::FeatureGroup OfflineStoreConfig
The configuration of an OfflineStore.
Provide an OfflineStoreConfig in a request to CreateFeatureGroup to create an OfflineStore.
To encrypt an OfflineStore using at rest data encryption, specify AWS Key Management Service (KMS) key ID, or KMSKeyId, in S3StorageConfig.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DataCatalogConfig](#cfn-sagemaker-featuregroup-offlinestoreconfig-datacatalogconfig)" : DataCatalogConfig,
  "[DisableGlueTableCreation](#cfn-sagemaker-featuregroup-offlinestoreconfig-disablegluetablecreation)" : Boolean,
  "[S3StorageConfig](#cfn-sagemaker-featuregroup-offlinestoreconfig-s3storageconfig)" : S3StorageConfig,
  "[TableFormat](#cfn-sagemaker-featuregroup-offlinestoreconfig-tableformat)" : String
}

YAML

  [DataCatalogConfig](#cfn-sagemaker-featuregroup-offlinestoreconfig-datacatalogconfig): 
    DataCatalogConfig
  [DisableGlueTableCreation](#cfn-sagemaker-featuregroup-offlinestoreconfig-disablegluetablecreation): Boolean
  [S3StorageConfig](#cfn-sagemaker-featuregroup-offlinestoreconfig-s3storageconfig): 
    S3StorageConfig
  [TableFormat](#cfn-sagemaker-featuregroup-offlinestoreconfig-tableformat): String

Properties
DataCatalogConfig 
The meta data of the Glue table that is autogenerated when an OfflineStore is created.
Required: No
Type: DataCatalogConfig
Update requires: Replacement
DisableGlueTableCreation 
Set to True to disable the automatic creation of an AWS Glue table when configuring an OfflineStore.
Required: No
Type: Boolean
Update requires: Replacement
S3StorageConfig 
The Amazon Simple Storage (Amazon S3) location of OfflineStore.
Required: Yes
Type: S3StorageConfig
Update requires: Replacement
TableFormat 
Property description not available.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::FeatureGroup OnlineStoreConfig
Use this to specify the AWS Key Management Service (KMS) Key ID, or KMSKeyId, for at rest data encryption. You can turn OnlineStore on or off by specifying the EnableOnlineStore flag at General Assembly; the default value is False.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EnableOnlineStore](#cfn-sagemaker-featuregroup-onlinestoreconfig-enableonlinestore)" : Boolean,
  "[SecurityConfig](#cfn-sagemaker-featuregroup-onlinestoreconfig-securityconfig)" : OnlineStoreSecurityConfig
}

YAML

  [EnableOnlineStore](#cfn-sagemaker-featuregroup-onlinestoreconfig-enableonlinestore): Boolean
  [SecurityConfig](#cfn-sagemaker-featuregroup-onlinestoreconfig-securityconfig): 
    OnlineStoreSecurityConfig

Properties
EnableOnlineStore 
Turn OnlineStore off by specifying False for the EnableOnlineStore flag. Turn OnlineStore on by specifying True for the EnableOnlineStore flag.
The default value is False.
Required: No
Type: Boolean
Update requires: Replacement
SecurityConfig 
Use to specify KMS Key ID (KMSKeyId) for at-rest encryption of your OnlineStore.
Required: No
Type: OnlineStoreSecurityConfig
Update requires: Replacement

AWS::SageMaker::FeatureGroup OnlineStoreSecurityConfig
The security configuration for OnlineStore.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[KmsKeyId](#cfn-sagemaker-featuregroup-onlinestoresecurityconfig-kmskeyid)" : String
}

YAML

  [KmsKeyId](#cfn-sagemaker-featuregroup-onlinestoresecurityconfig-kmskeyid): String

Properties
KmsKeyId 
The AWS Key Management Service (KMS) key ARN that SageMaker Feature Store uses to encrypt the Amazon S3 objects at rest using Amazon S3 server-side encryption.
The caller (either user or IAM role) of CreateFeatureGroup must have below permissions to the OnlineStore KmsKeyId:
+  "kms:Encrypt" 
+  "kms:Decrypt" 
+  "kms:DescribeKey" 
+  "kms:CreateGrant" 
+  "kms:RetireGrant" 
+  "kms:ReEncryptFrom" 
+  "kms:ReEncryptTo" 
+  "kms:GenerateDataKey" 
+  "kms:ListAliases" 
+  "kms:ListGrants" 
+  "kms:RevokeGrant" 
The caller (either user or IAM role) to all DataPlane operations (PutRecord, GetRecord, DeleteRecord) must have the following permissions to the KmsKeyId:
+  "kms:Decrypt"
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: Replacement

AWS::SageMaker::FeatureGroup S3StorageConfig
The Amazon Simple Storage (Amazon S3) location and and security configuration for OfflineStore.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[KmsKeyId](#cfn-sagemaker-featuregroup-s3storageconfig-kmskeyid)" : String,
  "[S3Uri](#cfn-sagemaker-featuregroup-s3storageconfig-s3uri)" : String
}

YAML

  [KmsKeyId](#cfn-sagemaker-featuregroup-s3storageconfig-kmskeyid): String
  [S3Uri](#cfn-sagemaker-featuregroup-s3storageconfig-s3uri): String

Properties
KmsKeyId 
The AWS Key Management Service (KMS) key ARN of the key used to encrypt any objects written into the OfflineStore S3 location.
The IAM roleARN that is passed as a parameter to CreateFeatureGroup must have below permissions to the KmsKeyId:
+  "kms:GenerateDataKey"
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: Replacement
S3Uri 
The S3 URI, or location in Amazon S3, of OfflineStore.
S3 URIs have a format similar to the following: s3://example-bucket/prefix/.
Required: Yes
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement

AWS::SageMaker::InferenceExperiment CaptureContentTypeHeader
Configuration specifying how to treat different headers. If no headers are specified SageMaker will by default base64 encode when capturing the data.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CsvContentTypes](#cfn-sagemaker-inferenceexperiment-capturecontenttypeheader-csvcontenttypes)" : [ String, ... ],
  "[JsonContentTypes](#cfn-sagemaker-inferenceexperiment-capturecontenttypeheader-jsoncontenttypes)" : [ String, ... ]
}

YAML

  [CsvContentTypes](#cfn-sagemaker-inferenceexperiment-capturecontenttypeheader-csvcontenttypes): 
    - String
  [JsonContentTypes](#cfn-sagemaker-inferenceexperiment-capturecontenttypeheader-jsoncontenttypes): 
    - String

Properties
CsvContentTypes 
The list of all content type headers that SageMaker will treat as CSV and capture accordingly.
Required: No
Type: List of String
Maximum: 10
Update requires: No interruption
JsonContentTypes 
The list of all content type headers that SageMaker will treat as JSON and capture accordingly.
Required: No
Type: List of String
Maximum: 10
Update requires: No interruption

AWS::SageMaker::InferenceExperiment DataStorageConfig
The Amazon S3 location and configuration for storing inference request and response data. 
This is an optional parameter that you can use for data capture. For more information, see Capture data. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ContentType](#cfn-sagemaker-inferenceexperiment-datastorageconfig-contenttype)" : CaptureContentTypeHeader,
  "[Destination](#cfn-sagemaker-inferenceexperiment-datastorageconfig-destination)" : String,
  "[KmsKey](#cfn-sagemaker-inferenceexperiment-datastorageconfig-kmskey)" : String
}

YAML

  [ContentType](#cfn-sagemaker-inferenceexperiment-datastorageconfig-contenttype): 
    CaptureContentTypeHeader
  [Destination](#cfn-sagemaker-inferenceexperiment-datastorageconfig-destination): String
  [KmsKey](#cfn-sagemaker-inferenceexperiment-datastorageconfig-kmskey): String

Properties
ContentType 
Configuration specifying how to treat different headers. If no headers are specified SageMaker will by default base64 encode when capturing the data.
Required: No
Type: CaptureContentTypeHeader
Update requires: No interruption
Destination 
The Amazon S3 bucket where the inference request and response data is stored.
Required: Yes
Type: String
Maximum: 512
Pattern: ^(https|s3)://([^/])/?(.*)$
Update requires: No interruption
KmsKey 
 The AWS Key Management Service key that Amazon SageMaker uses to encrypt captured data at rest using Amazon S3 server-side encryption.
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: No interruption

AWS::SageMaker::InferenceExperiment EndpointMetadata
The metadata of the endpoint.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EndpointConfigName](#cfn-sagemaker-inferenceexperiment-endpointmetadata-endpointconfigname)" : String,
  "[EndpointName](#cfn-sagemaker-inferenceexperiment-endpointmetadata-endpointname)" : String,
  "[EndpointStatus](#cfn-sagemaker-inferenceexperiment-endpointmetadata-endpointstatus)" : String
}

YAML

  [EndpointConfigName](#cfn-sagemaker-inferenceexperiment-endpointmetadata-endpointconfigname): String
  [EndpointName](#cfn-sagemaker-inferenceexperiment-endpointmetadata-endpointname): String
  [EndpointStatus](#cfn-sagemaker-inferenceexperiment-endpointmetadata-endpointstatus): String

Properties
EndpointConfigName 
The name of the endpoint configuration.
Required: No
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: No interruption
EndpointName 
The name of the endpoint.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: No interruption
EndpointStatus 
 The status of the endpoint. For possible values of the status of an endpoint, see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sagemaker-inferenceexperiment-endpointmetadata.html#cfn-sagemaker-inferenceexperiment-endpointmetadata-endpointstatus.
Required: No
Type: String
Allowed values: Creating | Deleting | Failed | InService | OutOfService | RollingBack | SystemUpdating | Updating
Update requires: No interruption

AWS::SageMaker::InferenceExperiment InferenceExperimentSchedule
The start and end times of an inference experiment.
The maximum duration that you can set for an inference experiment is 30 days.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EndTime](#cfn-sagemaker-inferenceexperiment-inferenceexperimentschedule-endtime)" : String,
  "[StartTime](#cfn-sagemaker-inferenceexperiment-inferenceexperimentschedule-starttime)" : String
}

YAML

  [EndTime](#cfn-sagemaker-inferenceexperiment-inferenceexperimentschedule-endtime): String
  [StartTime](#cfn-sagemaker-inferenceexperiment-inferenceexperimentschedule-starttime): String

Properties
EndTime 
The timestamp at which the inference experiment ended or will end.
Required: No
Type: String
Update requires: No interruption
StartTime 
The timestamp at which the inference experiment started or will start.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::InferenceExperiment ModelInfrastructureConfig
The configuration for the infrastructure that the model will be deployed to.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InfrastructureType](#cfn-sagemaker-inferenceexperiment-modelinfrastructureconfig-infrastructuretype)" : String,
  "[RealTimeInferenceConfig](#cfn-sagemaker-inferenceexperiment-modelinfrastructureconfig-realtimeinferenceconfig)" : RealTimeInferenceConfig
}

YAML

  [InfrastructureType](#cfn-sagemaker-inferenceexperiment-modelinfrastructureconfig-infrastructuretype): String
  [RealTimeInferenceConfig](#cfn-sagemaker-inferenceexperiment-modelinfrastructureconfig-realtimeinferenceconfig): 
    RealTimeInferenceConfig

Properties
InfrastructureType 
The inference option to which to deploy your model. Possible values are the following:
+  RealTime: Deploy to real-time inference.
Required: Yes
Type: String
Allowed values: RealTimeInference
Update requires: No interruption
RealTimeInferenceConfig 
The infrastructure configuration for deploying the model to real-time inference.
Required: Yes
Type: RealTimeInferenceConfig
Update requires: No interruption

AWS::SageMaker::InferenceExperiment ModelVariantConfig
Contains information about the deployment options of a model.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InfrastructureConfig](#cfn-sagemaker-inferenceexperiment-modelvariantconfig-infrastructureconfig)" : ModelInfrastructureConfig,
  "[ModelName](#cfn-sagemaker-inferenceexperiment-modelvariantconfig-modelname)" : String,
  "[VariantName](#cfn-sagemaker-inferenceexperiment-modelvariantconfig-variantname)" : String
}

YAML

  [InfrastructureConfig](#cfn-sagemaker-inferenceexperiment-modelvariantconfig-infrastructureconfig): 
    ModelInfrastructureConfig
  [ModelName](#cfn-sagemaker-inferenceexperiment-modelvariantconfig-modelname): String
  [VariantName](#cfn-sagemaker-inferenceexperiment-modelvariantconfig-variantname): String

Properties
InfrastructureConfig 
The configuration for the infrastructure that the model will be deployed to.
Required: Yes
Type: ModelInfrastructureConfig
Update requires: No interruption
ModelName 
The name of the Amazon SageMaker Model entity.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
Update requires: No interruption
VariantName 
The name of the variant.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])?
Update requires: No interruption

AWS::SageMaker::InferenceExperiment RealTimeInferenceConfig
The infrastructure configuration for deploying the model to a real-time inference endpoint.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InstanceCount](#cfn-sagemaker-inferenceexperiment-realtimeinferenceconfig-instancecount)" : Integer,
  "[InstanceType](#cfn-sagemaker-inferenceexperiment-realtimeinferenceconfig-instancetype)" : String
}

YAML

  [InstanceCount](#cfn-sagemaker-inferenceexperiment-realtimeinferenceconfig-instancecount): Integer
  [InstanceType](#cfn-sagemaker-inferenceexperiment-realtimeinferenceconfig-instancetype): String

Properties
InstanceCount 
The number of instances of the type specified by InstanceType.
Required: Yes
Type: Integer
Minimum: 0
Update requires: No interruption
InstanceType 
The instance type the model is deployed to.
Required: Yes
Type: String
Allowed values: ml.c4.2xlarge | ml.c4.4xlarge | ml.c4.8xlarge | ml.c4.xlarge | ml.c5.18xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.xlarge | ml.c5d.18xlarge | ml.c5d.2xlarge | ml.c5d.4xlarge | ml.c5d.9xlarge | ml.c5d.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.g5.12xlarge | ml.g5.16xlarge | ml.g5.24xlarge | ml.g5.2xlarge | ml.g5.48xlarge | ml.g5.4xlarge | ml.g5.8xlarge | ml.g5.xlarge | ml.m4.10xlarge | ml.m4.16xlarge | ml.m4.2xlarge | ml.m4.4xlarge | ml.m4.xlarge | ml.m5.12xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.xlarge | ml.m5d.12xlarge | ml.m5d.16xlarge | ml.m5d.24xlarge | ml.m5d.2xlarge | ml.m5d.4xlarge | ml.m5d.8xlarge | ml.m5d.large | ml.m5d.xlarge | ml.p2.16xlarge | ml.p2.8xlarge | ml.p2.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge | ml.p3dn.24xlarge | ml.r5.12xlarge | ml.r5.16xlarge | ml.r5.24xlarge | ml.r5.2xlarge | ml.r5.4xlarge | ml.r5.8xlarge | ml.r5.large | ml.r5.xlarge | ml.t2.2xlarge | ml.t2.large | ml.t2.medium | ml.t2.xlarge | ml.t3.2xlarge | ml.t3.large | ml.t3.medium | ml.t3.xlarge
Update requires: No interruption

AWS::SageMaker::InferenceExperiment ShadowModeConfig
The configuration of ShadowMode inference experiment type, which specifies a production variant to take all the inference requests, and a shadow variant to which Amazon SageMaker replicates a percentage of the inference requests. For the shadow variant it also specifies the percentage of requests that Amazon SageMaker replicates. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ShadowModelVariants](#cfn-sagemaker-inferenceexperiment-shadowmodeconfig-shadowmodelvariants)" : [ ShadowModelVariantConfig, ... ],
  "[SourceModelVariantName](#cfn-sagemaker-inferenceexperiment-shadowmodeconfig-sourcemodelvariantname)" : String
}

YAML

  [ShadowModelVariants](#cfn-sagemaker-inferenceexperiment-shadowmodeconfig-shadowmodelvariants): 
    - ShadowModelVariantConfig
  [SourceModelVariantName](#cfn-sagemaker-inferenceexperiment-shadowmodeconfig-sourcemodelvariantname): String

Properties
ShadowModelVariants 
List of shadow variant configurations.
Required: Yes
Type: List of ShadowModelVariantConfig
Maximum: 1
Update requires: No interruption
SourceModelVariantName 
 The name of the production variant, which takes all the inference requests.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])?
Update requires: No interruption

AWS::SageMaker::InferenceExperiment ShadowModelVariantConfig
The name and sampling percentage of a shadow variant.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[SamplingPercentage](#cfn-sagemaker-inferenceexperiment-shadowmodelvariantconfig-samplingpercentage)" : Integer,
  "[ShadowModelVariantName](#cfn-sagemaker-inferenceexperiment-shadowmodelvariantconfig-shadowmodelvariantname)" : String
}

YAML

  [SamplingPercentage](#cfn-sagemaker-inferenceexperiment-shadowmodelvariantconfig-samplingpercentage): Integer
  [ShadowModelVariantName](#cfn-sagemaker-inferenceexperiment-shadowmodelvariantconfig-shadowmodelvariantname): String

Properties
SamplingPercentage 
 The percentage of inference requests that Amazon SageMaker replicates from the production variant to the shadow variant.
Required: Yes
Type: Integer
Maximum: 100
Update requires: No interruption
ShadowModelVariantName 
The name of the shadow variant.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])?
Update requires: No interruption

AWS::SageMaker::Model RepositoryAuthConfig
Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field of the ImageConfig object that you passed to a call to CreateModel and the private Docker registry where the model image is hosted requires authentication.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[RepositoryCredentialsProviderArn](#cfn-sagemaker-model-containerdefinition-imageconfig-repositoryauthconfig-repositorycredentialsproviderarn)" : String
}

YAML

  [RepositoryCredentialsProviderArn](#cfn-sagemaker-model-containerdefinition-imageconfig-repositoryauthconfig-repositorycredentialsproviderarn): String

Properties
RepositoryCredentialsProviderArn 
The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see Create a Lambda function with the console in the * AWS Lambda Developer Guide.
*Required: Yes
Type: String
Minimum: 1
Maximum: 2048
Pattern: .*
Update requires: Replacement

AWS::SageMaker::Model ImageConfig
Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC).
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[RepositoryAccessMode](#cfn-sagemaker-model-containerdefinition-imageconfig-repositoryaccessmode)" : String,
  "[RepositoryAuthConfig](#cfn-sagemaker-model-containerdefinition-imageconfig-repositoryauthconfig)" : RepositoryAuthConfig
}

YAML

  [RepositoryAccessMode](#cfn-sagemaker-model-containerdefinition-imageconfig-repositoryaccessmode): String
  [RepositoryAuthConfig](#cfn-sagemaker-model-containerdefinition-imageconfig-repositoryauthconfig): 
    RepositoryAuthConfig

Properties
RepositoryAccessMode 
Set this to one of the following values:
+  Platform - The model image is hosted in Amazon ECR.
+  Vpc - The model image is hosted in a private Docker registry in your VPC.
Required: Yes
Type: String
Allowed values: Platform | Vpc
Update requires: Replacement
RepositoryAuthConfig 
(Optional) Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication.
Required: No
Type: RepositoryAuthConfig
Update requires: Replacement

AWS::SageMaker::Model MultiModelConfig
Specifies additional configuration for hosting multi-model endpoints.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ModelCacheSetting](#cfn-sagemaker-model-containerdefinition-multimodelconfig-modelcachesetting)" : String
}

YAML

  [ModelCacheSetting](#cfn-sagemaker-model-containerdefinition-multimodelconfig-modelcachesetting): String

Properties
ModelCacheSetting 
Whether to cache models for a multi-model endpoint. By default, multi-model endpoints cache models so that a model does not have to be loaded into memory each time it is invoked. Some use cases do not benefit from model caching. For example, if an endpoint hosts a large number of models that are each invoked infrequently, the endpoint might perform better if you disable model caching. To disable model caching, set the value of this parameter to Disabled.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::Model ContainerDefinition
Describes the container, as part of model definition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ContainerHostname](#cfn-sagemaker-model-containerdefinition-containerhostname)" : String,
  "[Environment](#cfn-sagemaker-model-containerdefinition-environment)" : Json,
  "[Image](#cfn-sagemaker-model-containerdefinition-image)" : String,
  "[ImageConfig](#cfn-sagemaker-model-containerdefinition-imageconfig)" : ImageConfig,
  "[InferenceSpecificationName](#cfn-sagemaker-model-containerdefinition-inferencespecificationname)" : String,
  "[Mode](#cfn-sagemaker-model-containerdefinition-mode)" : String,
  "[ModelDataUrl](#cfn-sagemaker-model-containerdefinition-modeldataurl)" : String,
  "[ModelPackageName](#cfn-sagemaker-model-containerdefinition-modelpackagename)" : String,
  "[MultiModelConfig](#cfn-sagemaker-model-containerdefinition-multimodelconfig)" : MultiModelConfig
}

YAML

  [ContainerHostname](#cfn-sagemaker-model-containerdefinition-containerhostname): String
  [Environment](#cfn-sagemaker-model-containerdefinition-environment): Json
  [Image](#cfn-sagemaker-model-containerdefinition-image): String
  [ImageConfig](#cfn-sagemaker-model-containerdefinition-imageconfig): 
    ImageConfig
  [InferenceSpecificationName](#cfn-sagemaker-model-containerdefinition-inferencespecificationname): String
  [Mode](#cfn-sagemaker-model-containerdefinition-mode): String
  [ModelDataUrl](#cfn-sagemaker-model-containerdefinition-modeldataurl): String
  [ModelPackageName](#cfn-sagemaker-model-containerdefinition-modelpackagename): String
  [MultiModelConfig](#cfn-sagemaker-model-containerdefinition-multimodelconfig): 
    MultiModelConfig

Properties
ContainerHostname 
This parameter is ignored for models that contain only a PrimaryContainer.
When a ContainerDefinition is part of an inference pipeline, the value of the parameter uniquely identifies the container for the purposes of logging and metrics. For information, see Use Logs and Metrics to Monitor an Inference Pipeline. If you don't specify a value for this parameter for a ContainerDefinition that is part of an inference pipeline, a unique name is automatically assigned based on the position of the ContainerDefinition in the pipeline. If you specify a value for the ContainerHostName for any ContainerDefinition that is part of an inference pipeline, you must specify a value for the ContainerHostName parameter of every ContainerDefinition in that pipeline.
Required: No
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
Environment 
The environment variables to set in the Docker container. Each key and value in the Environment string to string map can have length of up to 1024. We support up to 16 entries in the map.
Required: No
Type: Json
Update requires: Replacement
Image 
The path where inference code is stored. This can be either in Amazon EC2 Container Registry or in a Docker registry that is accessible from the same VPC that you configure for your endpoint. If you are using your own custom algorithm instead of an algorithm provided by SageMaker, the inference code must meet SageMaker requirements. SageMaker supports both registry/repository[:tag] and registry/repository[@digest] image path formats. For more information, see Using Your Own Algorithms with Amazon SageMaker.
The model artifacts in an Amazon S3 bucket and the Docker image for inference container in Amazon EC2 Container Registry must be in the same region as the model or endpoint you are creating.
Required: No
Type: String
Maximum: 255
Pattern: [\S]+
Update requires: Replacement
ImageConfig 
Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For information about storing containers in a private Docker registry, see Use a Private Docker Registry for Real-Time Inference Containers.
The model artifacts in an Amazon S3 bucket and the Docker image for inference container in Amazon EC2 Container Registry must be in the same region as the model or endpoint you are creating.
Required: No
Type: ImageConfig
Update requires: Replacement
InferenceSpecificationName 
The inference specification name in the model package version.
Required: No
Type: String
Update requires: Replacement
Mode 
Whether the container hosts a single model or multiple models.
Required: No
Type: String
Allowed values: MultiModel | SingleModel
Update requires: Replacement
ModelDataUrl 
The S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix). The S3 path is required for SageMaker built-in algorithms, but not if you use your own algorithms. For more information on built-in algorithms, see Common Parameters.
The model artifacts must be in an S3 bucket that is in the same region as the model or endpoint you are creating.
If you provide a value for this parameter, SageMaker uses AWS Security Token Service to download model artifacts from the S3 path you provide. AWS STS is activated in your AWS account by default. If you previously deactivated AWS STS for a region, you need to reactivate AWS STS for that region. For more information, see Activating and Deactivating AWS STS in an AWS Region in the * AWS Identity and Access Management User Guide.
If you use a built-in algorithm to create a model, SageMaker requires that you provide a S3 path to the model artifacts in ModelDataUrl.
*Required: No
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement
ModelPackageName 
The name or Amazon Resource Name (ARN) of the model package to use to create the model.
Required: No
Type: String
Minimum: 1
Maximum: 176
Pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)(\/[0-9]{1,5})?$
Update requires: Replacement
MultiModelConfig 
Specifies additional configuration for multi-model endpoints.
Required: No
Type: MultiModelConfig
Update requires: Replacement

AWS::SageMaker::Model InferenceExecutionConfig
Specifies details about how containers in a multi-container endpoint are run.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Mode](#cfn-sagemaker-model-inferenceexecutionconfig-mode)" : String
}

YAML

  [Mode](#cfn-sagemaker-model-inferenceexecutionconfig-mode): String

Properties
Mode 
How containers in a multi-container are run. The following values are valid.
+ Serial - Containers run as a serial pipeline.
+ Direct - Only the individual container that you specify is run.
Required: Yes
Type: String
Update requires: Replacement

AWS::SageMaker::Model VpcConfig
Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud and Protect Training Jobs by Using an Amazon Virtual Private Cloud. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[SecurityGroupIds](#cfn-sagemaker-model-vpcconfig-securitygroupids)" : [ String, ... ],
  "[Subnets](#cfn-sagemaker-model-vpcconfig-subnets)" : [ String, ... ]
}

YAML

  [SecurityGroupIds](#cfn-sagemaker-model-vpcconfig-securitygroupids): 
    - String
  [Subnets](#cfn-sagemaker-model-vpcconfig-subnets): 
    - String

Properties
SecurityGroupIds 
The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
Required: Yes
Type: List of String
Maximum: 5
Update requires: Replacement
Subnets 
The ID of the subnets in the VPC to which you want to connect your training job or model. For information about the availability of specific instance types, see Supported Instance Types and Availability Zones.
Required: Yes
Type: List of String
Maximum: 16
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition BatchTransformInput
The BatchTransformInput property type specifies Property description not available. for an AWS::SageMaker::ModelBiasJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DataCapturedDestinationS3Uri](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-datacaptureddestinations3uri)" : String,
  "[DatasetFormat](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-datasetformat)" : DatasetFormat,
  "[EndTimeOffset](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-endtimeoffset)" : String,
  "[FeaturesAttribute](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-featuresattribute)" : String,
  "[InferenceAttribute](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-inferenceattribute)" : String,
  "[LocalPath](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-localpath)" : String,
  "[ProbabilityAttribute](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-probabilityattribute)" : String,
  "[ProbabilityThresholdAttribute](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-probabilitythresholdattribute)" : Double,
  "[S3DataDistributionType](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-s3datadistributiontype)" : String,
  "[S3InputMode](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-s3inputmode)" : String,
  "[StartTimeOffset](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-starttimeoffset)" : String
}

YAML

  [DataCapturedDestinationS3Uri](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-datacaptureddestinations3uri): String
  [DatasetFormat](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-datasetformat): 
    DatasetFormat
  [EndTimeOffset](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-endtimeoffset): String
  [FeaturesAttribute](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-featuresattribute): String
  [InferenceAttribute](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-inferenceattribute): String
  [LocalPath](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-localpath): String
  [ProbabilityAttribute](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-probabilityattribute): String
  [ProbabilityThresholdAttribute](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-probabilitythresholdattribute): Double
  [S3DataDistributionType](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-s3datadistributiontype): String
  [S3InputMode](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-s3inputmode): String
  [StartTimeOffset](#cfn-sagemaker-modelbiasjobdefinition-batchtransforminput-starttimeoffset): String

Properties
DataCapturedDestinationS3Uri 
Property description not available.
Required: Yes
Type: String
Update requires: Replacement
DatasetFormat 
Property description not available.
Required: Yes
Type: DatasetFormat
Update requires: Replacement
EndTimeOffset 
Property description not available.
Required: No
Type: String
Update requires: Replacement
FeaturesAttribute 
Property description not available.
Required: No
Type: String
Update requires: Replacement
InferenceAttribute 
Property description not available.
Required: No
Type: String
Update requires: Replacement
LocalPath 
Property description not available.
Required: Yes
Type: String
Update requires: Replacement
ProbabilityAttribute 
Property description not available.
Required: No
Type: String
Update requires: Replacement
ProbabilityThresholdAttribute 
Property description not available.
Required: No
Type: Double
Update requires: Replacement
S3DataDistributionType 
Property description not available.
Required: No
Type: String
Update requires: Replacement
S3InputMode 
Property description not available.
Required: No
Type: String
Update requires: Replacement
StartTimeOffset 
Property description not available.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition ClusterConfig
The configuration for the cluster resources used to run the processing job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InstanceCount](#cfn-sagemaker-modelbiasjobdefinition-clusterconfig-instancecount)" : Integer,
  "[InstanceType](#cfn-sagemaker-modelbiasjobdefinition-clusterconfig-instancetype)" : String,
  "[VolumeKmsKeyId](#cfn-sagemaker-modelbiasjobdefinition-clusterconfig-volumekmskeyid)" : String,
  "[VolumeSizeInGB](#cfn-sagemaker-modelbiasjobdefinition-clusterconfig-volumesizeingb)" : Integer
}

YAML

  [InstanceCount](#cfn-sagemaker-modelbiasjobdefinition-clusterconfig-instancecount): Integer
  [InstanceType](#cfn-sagemaker-modelbiasjobdefinition-clusterconfig-instancetype): String
  [VolumeKmsKeyId](#cfn-sagemaker-modelbiasjobdefinition-clusterconfig-volumekmskeyid): String
  [VolumeSizeInGB](#cfn-sagemaker-modelbiasjobdefinition-clusterconfig-volumesizeingb): Integer

Properties
InstanceCount 
The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
Required: Yes
Type: Integer
Update requires: Replacement
InstanceType 
The ML compute instance type for the processing job.
Required: Yes
Type: String
Update requires: Replacement
VolumeKmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
Required: No
Type: String
Update requires: Replacement
VolumeSizeInGB 
The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
Required: Yes
Type: Integer
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition ConstraintsResource
The constraints resource for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Uri](#cfn-sagemaker-modelbiasjobdefinition-constraintsresource-s3uri)" : String
}

YAML

  [S3Uri](#cfn-sagemaker-modelbiasjobdefinition-constraintsresource-s3uri): String

Properties
S3Uri 
The Amazon S3 URI for the constraints resource.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition Csv
The Csv property type specifies Property description not available. for an AWS::SageMaker::ModelBiasJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Header](#cfn-sagemaker-modelbiasjobdefinition-csv-header)" : Boolean
}

YAML

  [Header](#cfn-sagemaker-modelbiasjobdefinition-csv-header): Boolean

Properties
Header 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition DatasetFormat
The DatasetFormat property type specifies Property description not available. for an AWS::SageMaker::ModelBiasJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Csv](#cfn-sagemaker-modelbiasjobdefinition-datasetformat-csv)" : Csv,
  "[Json](#cfn-sagemaker-modelbiasjobdefinition-datasetformat-json)" : Json,
  "[Parquet](#cfn-sagemaker-modelbiasjobdefinition-datasetformat-parquet)" : Boolean
}

YAML

  [Csv](#cfn-sagemaker-modelbiasjobdefinition-datasetformat-csv): 
    Csv
  [Json](#cfn-sagemaker-modelbiasjobdefinition-datasetformat-json): 
    Json
  [Parquet](#cfn-sagemaker-modelbiasjobdefinition-datasetformat-parquet): Boolean

Properties
Csv 
Property description not available.
Required: No
Type: Csv
Update requires: Replacement
Json 
Property description not available.
Required: No
Type: Json
Update requires: Replacement
Parquet 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition EndpointInput
Input object for the endpoint
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EndpointName](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-endpointname)" : String,
  "[EndTimeOffset](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-endtimeoffset)" : String,
  "[FeaturesAttribute](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-featuresattribute)" : String,
  "[InferenceAttribute](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-inferenceattribute)" : String,
  "[LocalPath](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-localpath)" : String,
  "[ProbabilityAttribute](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-probabilityattribute)" : String,
  "[ProbabilityThresholdAttribute](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-probabilitythresholdattribute)" : Double,
  "[S3DataDistributionType](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-s3datadistributiontype)" : String,
  "[S3InputMode](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-s3inputmode)" : String,
  "[StartTimeOffset](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-starttimeoffset)" : String
}

YAML

  [EndpointName](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-endpointname): String
  [EndTimeOffset](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-endtimeoffset): String
  [FeaturesAttribute](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-featuresattribute): String
  [InferenceAttribute](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-inferenceattribute): String
  [LocalPath](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-localpath): String
  [ProbabilityAttribute](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-probabilityattribute): String
  [ProbabilityThresholdAttribute](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-probabilitythresholdattribute): Double
  [S3DataDistributionType](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-s3datadistributiontype): String
  [S3InputMode](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-s3inputmode): String
  [StartTimeOffset](#cfn-sagemaker-modelbiasjobdefinition-endpointinput-starttimeoffset): String

Properties
EndpointName 
An endpoint in customer's account which has enabled DataCaptureConfig enabled.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
EndTimeOffset 
If specified, monitoring jobs substract this time from the end time. For information about using offsets for scheduling monitoring jobs, see Schedule Model Quality Monitoring Jobs.
Required: No
Type: String
Minimum: 1
Maximum: 15
Pattern: ^.?P.*
Update requires: Replacement
FeaturesAttribute 
The attributes of the input data that are the input features.
Required: No
Type: String
Update requires: Replacement
InferenceAttribute 
The attribute of the input data that represents the ground truth label.
Required: No
Type: String
Update requires: Replacement
LocalPath 
Path to the filesystem where the endpoint data is available to the container.
Required: Yes
Type: String
Maximum: 256
Pattern: .*
Update requires: Replacement
ProbabilityAttribute 
In a classification problem, the attribute that represents the class probability.
Required: No
Type: String
Update requires: Replacement
ProbabilityThresholdAttribute 
The threshold for the class probability to be evaluated as a positive result.
Required: No
Type: Double
Update requires: Replacement
S3DataDistributionType 
Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to FullyReplicated
Required: No
Type: String
Allowed values: FullyReplicated | ShardedByS3Key
Update requires: Replacement
S3InputMode 
Whether the Pipe or File is used as the input mode for transferring data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
Required: No
Type: String
Allowed values: File | Pipe
Update requires: Replacement
StartTimeOffset 
If specified, monitoring jobs substract this time from the start time. For information about using offsets for scheduling monitoring jobs, see Schedule Model Quality Monitoring Jobs.
Required: No
Type: String
Minimum: 1
Maximum: 15
Pattern: ^.?P.*
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition Json
The Json property type specifies Property description not available. for an AWS::SageMaker::ModelBiasJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Line](#cfn-sagemaker-modelbiasjobdefinition-json-line)" : Boolean
}

YAML

  [Line](#cfn-sagemaker-modelbiasjobdefinition-json-line): Boolean

Properties
Line 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition ModelBiasAppSpecification
Docker container image configuration object for the model bias job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ConfigUri](#cfn-sagemaker-modelbiasjobdefinition-modelbiasappspecification-configuri)" : String,
  "[Environment](#cfn-sagemaker-modelbiasjobdefinition-modelbiasappspecification-environment)" : {Key : Value, ...},
  "[ImageUri](#cfn-sagemaker-modelbiasjobdefinition-modelbiasappspecification-imageuri)" : String
}

YAML

  [ConfigUri](#cfn-sagemaker-modelbiasjobdefinition-modelbiasappspecification-configuri): String
  [Environment](#cfn-sagemaker-modelbiasjobdefinition-modelbiasappspecification-environment): 
    Key : Value
  [ImageUri](#cfn-sagemaker-modelbiasjobdefinition-modelbiasappspecification-imageuri): String

Properties
ConfigUri 
JSON formatted S3 file that defines bias parameters. For more information on this JSON configuration file, see Configure bias parameters.
Required: Yes
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement
Environment 
Sets the environment variables in the Docker container.
Required: No
Type: Map of String
Update requires: Replacement
ImageUri 
The container image to be run by the model bias job.
Required: Yes
Type: String
Maximum: 255
Pattern: .*
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition ModelBiasBaselineConfig
The configuration for a baseline model bias job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[BaseliningJobName](#cfn-sagemaker-modelbiasjobdefinition-modelbiasbaselineconfig-baseliningjobname)" : String,
  "[ConstraintsResource](#cfn-sagemaker-modelbiasjobdefinition-modelbiasbaselineconfig-constraintsresource)" : ConstraintsResource
}

YAML

  [BaseliningJobName](#cfn-sagemaker-modelbiasjobdefinition-modelbiasbaselineconfig-baseliningjobname): String
  [ConstraintsResource](#cfn-sagemaker-modelbiasjobdefinition-modelbiasbaselineconfig-constraintsresource): 
    ConstraintsResource

Properties
BaseliningJobName 
The name of the baseline model bias job.
Required: No
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
ConstraintsResource 
The constraints resource for a monitoring job.
Required: No
Type: ConstraintsResource
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition ModelBiasJobInput
Inputs for the model bias job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[BatchTransformInput](#cfn-sagemaker-modelbiasjobdefinition-modelbiasjobinput-batchtransforminput)" : BatchTransformInput,
  "[EndpointInput](#cfn-sagemaker-modelbiasjobdefinition-modelbiasjobinput-endpointinput)" : EndpointInput,
  "[GroundTruthS3Input](#cfn-sagemaker-modelbiasjobdefinition-modelbiasjobinput-groundtruths3input)" : MonitoringGroundTruthS3Input
}

YAML

  [BatchTransformInput](#cfn-sagemaker-modelbiasjobdefinition-modelbiasjobinput-batchtransforminput): 
    BatchTransformInput
  [EndpointInput](#cfn-sagemaker-modelbiasjobdefinition-modelbiasjobinput-endpointinput): 
    EndpointInput
  [GroundTruthS3Input](#cfn-sagemaker-modelbiasjobdefinition-modelbiasjobinput-groundtruths3input): 
    MonitoringGroundTruthS3Input

Properties
BatchTransformInput 
Property description not available.
Required: No
Type: BatchTransformInput
Update requires: Replacement
EndpointInput 
Input object for the endpoint
Required: No
Type: EndpointInput
Update requires: Replacement
GroundTruthS3Input 
Location of ground truth labels to use in model bias job.
Required: Yes
Type: MonitoringGroundTruthS3Input
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition MonitoringGroundTruthS3Input
The ground truth labels for the dataset used for the monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Uri](#cfn-sagemaker-modelbiasjobdefinition-monitoringgroundtruths3input-s3uri)" : String
}

YAML

  [S3Uri](#cfn-sagemaker-modelbiasjobdefinition-monitoringgroundtruths3input-s3uri): String

Properties
S3Uri 
The address of the Amazon S3 location of the ground truth labels.
Required: Yes
Type: String
Maximum: 512
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition MonitoringOutput
The output object for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Output](#cfn-sagemaker-modelbiasjobdefinition-monitoringoutput-s3output)" : S3Output
}

YAML

  [S3Output](#cfn-sagemaker-modelbiasjobdefinition-monitoringoutput-s3output): 
    S3Output

Properties
S3Output 
The Amazon S3 storage location where the results of a monitoring job are saved.
Required: Yes
Type: S3Output
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition MonitoringOutputConfig
The output configuration for monitoring jobs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[KmsKeyId](#cfn-sagemaker-modelbiasjobdefinition-monitoringoutputconfig-kmskeyid)" : String,
  "[MonitoringOutputs](#cfn-sagemaker-modelbiasjobdefinition-monitoringoutputconfig-monitoringoutputs)" : [ MonitoringOutput, ... ]
}

YAML

  [KmsKeyId](#cfn-sagemaker-modelbiasjobdefinition-monitoringoutputconfig-kmskeyid): String
  [MonitoringOutputs](#cfn-sagemaker-modelbiasjobdefinition-monitoringoutputconfig-monitoringoutputs): 
    - MonitoringOutput

Properties
KmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: Replacement
MonitoringOutputs 
Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
Required: Yes
Type: List of MonitoringOutput
Maximum: 1
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition MonitoringResources
Identifies the resources to deploy for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ClusterConfig](#cfn-sagemaker-modelbiasjobdefinition-monitoringresources-clusterconfig)" : ClusterConfig
}

YAML

  [ClusterConfig](#cfn-sagemaker-modelbiasjobdefinition-monitoringresources-clusterconfig): 
    ClusterConfig

Properties
ClusterConfig 
The configuration for the cluster resources used to run the processing job.
Required: Yes
Type: ClusterConfig
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition NetworkConfig
Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EnableInterContainerTrafficEncryption](#cfn-sagemaker-modelbiasjobdefinition-networkconfig-enableintercontainertrafficencryption)" : Boolean,
  "[EnableNetworkIsolation](#cfn-sagemaker-modelbiasjobdefinition-networkconfig-enablenetworkisolation)" : Boolean,
  "[VpcConfig](#cfn-sagemaker-modelbiasjobdefinition-networkconfig-vpcconfig)" : VpcConfig
}

YAML

  [EnableInterContainerTrafficEncryption](#cfn-sagemaker-modelbiasjobdefinition-networkconfig-enableintercontainertrafficencryption): Boolean
  [EnableNetworkIsolation](#cfn-sagemaker-modelbiasjobdefinition-networkconfig-enablenetworkisolation): Boolean
  [VpcConfig](#cfn-sagemaker-modelbiasjobdefinition-networkconfig-vpcconfig): 
    VpcConfig

Properties
EnableInterContainerTrafficEncryption 
Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
Required: No
Type: Boolean
Update requires: Replacement
EnableNetworkIsolation 
Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
Required: No
Type: Boolean
Update requires: Replacement
VpcConfig 
Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
Required: No
Type: VpcConfig
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition S3Output
The Amazon S3 storage location where the results of a monitoring job are saved.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[LocalPath](#cfn-sagemaker-modelbiasjobdefinition-s3output-localpath)" : String,
  "[S3UploadMode](#cfn-sagemaker-modelbiasjobdefinition-s3output-s3uploadmode)" : String,
  "[S3Uri](#cfn-sagemaker-modelbiasjobdefinition-s3output-s3uri)" : String
}

YAML

  [LocalPath](#cfn-sagemaker-modelbiasjobdefinition-s3output-localpath): String
  [S3UploadMode](#cfn-sagemaker-modelbiasjobdefinition-s3output-s3uploadmode): String
  [S3Uri](#cfn-sagemaker-modelbiasjobdefinition-s3output-s3uri): String

Properties
LocalPath 
The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
Required: Yes
Type: String
Update requires: Replacement
S3UploadMode 
Whether to upload the results of the monitoring job continuously or after the job completes.
Required: No
Type: String
Update requires: Replacement
S3Uri 
A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
Required: Yes
Type: String
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition StoppingCondition
Specifies a limit to how long a model training job or model compilation job can run. It also specifies how long a managed spot training job has to complete. When the job reaches the time limit, SageMaker ends the training or compilation job. Use this API to cap model training costs.
To stop a training job, SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. 
The training algorithms provided by SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with CreateModel.
Note
The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MaxRuntimeInSeconds](#cfn-sagemaker-modelbiasjobdefinition-stoppingcondition-maxruntimeinseconds)" : Integer
}

YAML

  [MaxRuntimeInSeconds](#cfn-sagemaker-modelbiasjobdefinition-stoppingcondition-maxruntimeinseconds): Integer

Properties
MaxRuntimeInSeconds 
The maximum length of time, in seconds, that a training or compilation job can run before it is stopped.
For compilation jobs, if the job does not complete during this time, a TimeOut error is generated. We recommend starting with 900 seconds and increasing as necessary based on your model.
For all other jobs, if the job does not complete during this time, SageMaker ends the job. When RetryStrategy is specified in the job request, MaxRuntimeInSeconds specifies the maximum time for all of the attempts in total, not each individual attempt. The default value is 1 day. The maximum value is 28 days.
The maximum time that a TrainingJob can run in total, including any time spent publishing metrics or archiving and uploading models after it has been stopped, is 30 days.
Required: Yes
Type: Integer
Minimum: 1
Update requires: Replacement

AWS::SageMaker::ModelBiasJobDefinition VpcConfig
Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud and Protect Training Jobs by Using an Amazon Virtual Private Cloud. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[SecurityGroupIds](#cfn-sagemaker-modelbiasjobdefinition-vpcconfig-securitygroupids)" : [ String, ... ],
  "[Subnets](#cfn-sagemaker-modelbiasjobdefinition-vpcconfig-subnets)" : [ String, ... ]
}

YAML

  [SecurityGroupIds](#cfn-sagemaker-modelbiasjobdefinition-vpcconfig-securitygroupids): 
    - String
  [Subnets](#cfn-sagemaker-modelbiasjobdefinition-vpcconfig-subnets): 
    - String

Properties
SecurityGroupIds 
The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
Required: Yes
Type: List of String
Maximum: 5
Update requires: Replacement
Subnets 
The ID of the subnets in the VPC to which you want to connect your training job or model. For information about the availability of specific instance types, see Supported Instance Types and Availability Zones.
Required: Yes
Type: List of String
Maximum: 16
Update requires: Replacement

AWS::SageMaker::ModelCard AdditionalInformation
Additional information about the model.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CaveatsAndRecommendations](#cfn-sagemaker-modelcard-additionalinformation-caveatsandrecommendations)" : String,
  "[CustomDetails](#cfn-sagemaker-modelcard-additionalinformation-customdetails)" : {Key : Value, ...},
  "[EthicalConsiderations](#cfn-sagemaker-modelcard-additionalinformation-ethicalconsiderations)" : String
}

YAML

  [CaveatsAndRecommendations](#cfn-sagemaker-modelcard-additionalinformation-caveatsandrecommendations): String
  [CustomDetails](#cfn-sagemaker-modelcard-additionalinformation-customdetails): 
    Key : Value
  [EthicalConsiderations](#cfn-sagemaker-modelcard-additionalinformation-ethicalconsiderations): String

Properties
CaveatsAndRecommendations 
Caveats and recommendations for those who might use this model in their applications.
Required: No
Type: String
Update requires: No interruption
CustomDetails 
Any additional information to document about the model.
Required: No
Type: Map of String
Update requires: No interruption
EthicalConsiderations 
Any ethical considerations documented by the model card author.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::ModelCard BusinessDetails
Information about how the model supports business goals.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[BusinessProblem](#cfn-sagemaker-modelcard-businessdetails-businessproblem)" : String,
  "[BusinessStakeholders](#cfn-sagemaker-modelcard-businessdetails-businessstakeholders)" : String,
  "[LineOfBusiness](#cfn-sagemaker-modelcard-businessdetails-lineofbusiness)" : String
}

YAML

  [BusinessProblem](#cfn-sagemaker-modelcard-businessdetails-businessproblem): String
  [BusinessStakeholders](#cfn-sagemaker-modelcard-businessdetails-businessstakeholders): String
  [LineOfBusiness](#cfn-sagemaker-modelcard-businessdetails-lineofbusiness): String

Properties
BusinessProblem 
The specific business problem that the model is trying to solve.
Required: No
Type: String
Update requires: No interruption
BusinessStakeholders 
The relevant stakeholders for the model.
Required: No
Type: String
Update requires: No interruption
LineOfBusiness 
The broader business need that the model is serving.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::ModelCard Content
The content of the model card. It follows the model card json schema.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[AdditionalInformation](#cfn-sagemaker-modelcard-content-additionalinformation)" : AdditionalInformation,
  "[BusinessDetails](#cfn-sagemaker-modelcard-content-businessdetails)" : BusinessDetails,
  "[EvaluationDetails](#cfn-sagemaker-modelcard-content-evaluationdetails)" : [ EvaluationDetail, ... ],
  "[IntendedUses](#cfn-sagemaker-modelcard-content-intendeduses)" : IntendedUses,
  "[ModelOverview](#cfn-sagemaker-modelcard-content-modeloverview)" : ModelOverview,
  "[TrainingDetails](#cfn-sagemaker-modelcard-content-trainingdetails)" : TrainingDetails
}

YAML

  [AdditionalInformation](#cfn-sagemaker-modelcard-content-additionalinformation): 
    AdditionalInformation
  [BusinessDetails](#cfn-sagemaker-modelcard-content-businessdetails): 
    BusinessDetails
  [EvaluationDetails](#cfn-sagemaker-modelcard-content-evaluationdetails): 
    - EvaluationDetail
  [IntendedUses](#cfn-sagemaker-modelcard-content-intendeduses): 
    IntendedUses
  [ModelOverview](#cfn-sagemaker-modelcard-content-modeloverview): 
    ModelOverview
  [TrainingDetails](#cfn-sagemaker-modelcard-content-trainingdetails): 
    TrainingDetails

Properties
AdditionalInformation 
Additional information about the model.
Required: No
Type: AdditionalInformation
Update requires: No interruption
BusinessDetails 
Information about how the model supports business goals.
Required: No
Type: BusinessDetails
Update requires: No interruption
EvaluationDetails 
An overview about the model's evaluation.
Required: No
Type: List of EvaluationDetail
Update requires: No interruption
IntendedUses 
The intended usage of the model.
Required: No
Type: IntendedUses
Update requires: No interruption
ModelOverview 
An overview about the model
Required: No
Type: ModelOverview
Update requires: No interruption
TrainingDetails 
An overview about model training.
Required: No
Type: TrainingDetails
Update requires: No interruption

AWS::SageMaker::ModelCard EvaluationDetail
The evaluation details of the model.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Datasets](#cfn-sagemaker-modelcard-evaluationdetail-datasets)" : [ String, ... ],
  "[EvaluationJobArn](#cfn-sagemaker-modelcard-evaluationdetail-evaluationjobarn)" : String,
  "[EvaluationObservation](#cfn-sagemaker-modelcard-evaluationdetail-evaluationobservation)" : String,
  "[Metadata](#cfn-sagemaker-modelcard-evaluationdetail-metadata)" : {Key : Value, ...},
  "[MetricGroups](#cfn-sagemaker-modelcard-evaluationdetail-metricgroups)" : [ MetricGroup, ... ],
  "[Name](#cfn-sagemaker-modelcard-evaluationdetail-name)" : String
}

YAML

  [Datasets](#cfn-sagemaker-modelcard-evaluationdetail-datasets): 
    - String
  [EvaluationJobArn](#cfn-sagemaker-modelcard-evaluationdetail-evaluationjobarn): String
  [EvaluationObservation](#cfn-sagemaker-modelcard-evaluationdetail-evaluationobservation): String
  [Metadata](#cfn-sagemaker-modelcard-evaluationdetail-metadata): 
    Key : Value
  [MetricGroups](#cfn-sagemaker-modelcard-evaluationdetail-metricgroups): 
    - MetricGroup
  [Name](#cfn-sagemaker-modelcard-evaluationdetail-name): String

Properties
Datasets 
The location of the datasets used to evaluate the model.
Required: No
Type: List of String
Update requires: No interruption
EvaluationJobArn 
The Amazon Resource Name (ARN) of the evaluation job.
Required: No
Type: String
Update requires: No interruption
EvaluationObservation 
Any observations made during the model evaluation.
Required: No
Type: String
Update requires: No interruption
Metadata 
Additional attributes associated with the evaluation results.
Required: No
Type: Map of String
Update requires: No interruption
MetricGroups 
An evaluation Metric Group object.
Required: No
Type: List of MetricGroup
Update requires: No interruption
Name 
The evaluation job name.
Required: Yes
Type: String
Update requires: No interruption

AWS::SageMaker::ModelCard Function
Function details.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Condition](#cfn-sagemaker-modelcard-function-condition)" : String,
  "[Facet](#cfn-sagemaker-modelcard-function-facet)" : String,
  "[Function](#cfn-sagemaker-modelcard-function-function)" : String
}

YAML

  [Condition](#cfn-sagemaker-modelcard-function-condition): String
  [Facet](#cfn-sagemaker-modelcard-function-facet): String
  [Function](#cfn-sagemaker-modelcard-function-function): String

Properties
Condition 
An optional description of any conditions of your objective function metric.
Required: No
Type: String
Update requires: No interruption
Facet 
The metric of the model's objective function. For example, loss or rmse. The following list shows examples of the values that you can specify for the metric:
+ ACCURACY
+ AUC
+ LOSS
+ MAE
+ RMSE
Required: No
Type: String
Update requires: No interruption
Function 
The optimization direction of the model's objective function. You must specify one of the following values:
+ Maximize
+ Minimize
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::ModelCard InferenceEnvironment
An overview of a model's inference environment.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ContainerImage](#cfn-sagemaker-modelcard-inferenceenvironment-containerimage)" : [ String, ... ]
}

YAML

  [ContainerImage](#cfn-sagemaker-modelcard-inferenceenvironment-containerimage): 
    - String

Properties
ContainerImage 
The container used to run the inference environment.
Required: No
Type: List of String
Update requires: No interruption

AWS::SageMaker::ModelCard IntendedUses
The intended uses of a model.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ExplanationsForRiskRating](#cfn-sagemaker-modelcard-intendeduses-explanationsforriskrating)" : String,
  "[FactorsAffectingModelEfficiency](#cfn-sagemaker-modelcard-intendeduses-factorsaffectingmodelefficiency)" : String,
  "[IntendedUses](#cfn-sagemaker-modelcard-intendeduses-intendeduses)" : String,
  "[PurposeOfModel](#cfn-sagemaker-modelcard-intendeduses-purposeofmodel)" : String,
  "[RiskRating](#cfn-sagemaker-modelcard-intendeduses-riskrating)" : String
}

YAML

  [ExplanationsForRiskRating](#cfn-sagemaker-modelcard-intendeduses-explanationsforriskrating): String
  [FactorsAffectingModelEfficiency](#cfn-sagemaker-modelcard-intendeduses-factorsaffectingmodelefficiency): String
  [IntendedUses](#cfn-sagemaker-modelcard-intendeduses-intendeduses): String
  [PurposeOfModel](#cfn-sagemaker-modelcard-intendeduses-purposeofmodel): String
  [RiskRating](#cfn-sagemaker-modelcard-intendeduses-riskrating): String

Properties
ExplanationsForRiskRating 
An explanation of why your organization categorizes the model with its risk rating.
Required: No
Type: String
Update requires: No interruption
FactorsAffectingModelEfficiency 
Factors affecting model efficacy.
Required: No
Type: String
Update requires: No interruption
IntendedUses 
The intended use cases for the model.
Required: No
Type: String
Update requires: No interruption
PurposeOfModel 
The general purpose of the model.
Required: No
Type: String
Update requires: No interruption
RiskRating 
Your organization's risk rating. You can specify one the following values as the risk rating:
+ High
+ Medium
+ Low
+ Unknown
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::ModelCard MetricDataItems
Metric data. The type determines the data types that you specify for value, XAxisName and YAxisName. For information about specifying values for metrics, see model card JSON schema.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Name](#cfn-sagemaker-modelcard-metricdataitems-name)" : String,
  "[Notes](#cfn-sagemaker-modelcard-metricdataitems-notes)" : String,
  "[Type](#cfn-sagemaker-modelcard-metricdataitems-type)" : String,
  "[Value](#cfn-sagemaker-modelcard-metricdataitems-value)" : Json,
  "[XAxisName](#cfn-sagemaker-modelcard-metricdataitems-xaxisname)" : [ String, ... ],
  "[YAxisName](#cfn-sagemaker-modelcard-metricdataitems-yaxisname)" : [ String, ... ]
}

YAML

  [Name](#cfn-sagemaker-modelcard-metricdataitems-name): String
  [Notes](#cfn-sagemaker-modelcard-metricdataitems-notes): String
  [Type](#cfn-sagemaker-modelcard-metricdataitems-type): String
  [Value](#cfn-sagemaker-modelcard-metricdataitems-value): Json
  [XAxisName](#cfn-sagemaker-modelcard-metricdataitems-xaxisname): 
    - String
  [YAxisName](#cfn-sagemaker-modelcard-metricdataitems-yaxisname): 
    - String

Properties
Name 
The names of the metrics.
Required: Yes
Type: String
Update requires: No interruption
Notes 
Any notes to add to the metric.
Required: No
Type: String
Update requires: No interruption
Type 
You must specify one of the following data types:
+ Bar Chart – bar_char
+ Boolean – boolean
+ Linear Graph – linear_graph
+ Matrix – matrix
+ Number – number
+ String – string
Required: Yes
Type: String
Update requires: No interruption
Value 
The datatype of the metric. The metric's value must be compatible with the metric's type.
Required: Yes
Type: Json
Update requires: No interruption
XAxisName 
The name of the x axis.
Required: No
Type: List of String
Update requires: No interruption
YAxisName 
The name of the y axis.
Required: No
Type: List of String
Update requires: No interruption

AWS::SageMaker::ModelCard MetricGroup
A group of metric data that you use to initialize a metric group object.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MetricData](#cfn-sagemaker-modelcard-metricgroup-metricdata)" : [ MetricDataItems, ... ],
  "[Name](#cfn-sagemaker-modelcard-metricgroup-name)" : String
}

YAML

  [MetricData](#cfn-sagemaker-modelcard-metricgroup-metricdata): 
    - MetricDataItems
  [Name](#cfn-sagemaker-modelcard-metricgroup-name): String

Properties
MetricData 
A list of metric objects. The MetricDataItems list can have one of the following values:
+ bar_chart_metric
+ matrix_metric
+ simple_metric
+ linear_graph_metric
For more information about the metric schema, see the definition section of the model card JSON schema.
Required: Yes
Type: List of MetricDataItems
Update requires: No interruption
Name 
The metric group name.
Required: Yes
Type: String
Update requires: No interruption

AWS::SageMaker::ModelCard ModelOverview
An overview about the model.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[AlgorithmType](#cfn-sagemaker-modelcard-modeloverview-algorithmtype)" : String,
  "[InferenceEnvironment](#cfn-sagemaker-modelcard-modeloverview-inferenceenvironment)" : InferenceEnvironment,
  "[ModelArtifact](#cfn-sagemaker-modelcard-modeloverview-modelartifact)" : [ String, ... ],
  "[ModelCreator](#cfn-sagemaker-modelcard-modeloverview-modelcreator)" : String,
  "[ModelDescription](#cfn-sagemaker-modelcard-modeloverview-modeldescription)" : String,
  "[ModelId](#cfn-sagemaker-modelcard-modeloverview-modelid)" : String,
  "[ModelName](#cfn-sagemaker-modelcard-modeloverview-modelname)" : String,
  "[ModelOwner](#cfn-sagemaker-modelcard-modeloverview-modelowner)" : String,
  "[ModelVersion](#cfn-sagemaker-modelcard-modeloverview-modelversion)" : Double,
  "[ProblemType](#cfn-sagemaker-modelcard-modeloverview-problemtype)" : String
}

YAML

  [AlgorithmType](#cfn-sagemaker-modelcard-modeloverview-algorithmtype): String
  [InferenceEnvironment](#cfn-sagemaker-modelcard-modeloverview-inferenceenvironment): 
    InferenceEnvironment
  [ModelArtifact](#cfn-sagemaker-modelcard-modeloverview-modelartifact): 
    - String
  [ModelCreator](#cfn-sagemaker-modelcard-modeloverview-modelcreator): String
  [ModelDescription](#cfn-sagemaker-modelcard-modeloverview-modeldescription): String
  [ModelId](#cfn-sagemaker-modelcard-modeloverview-modelid): String
  [ModelName](#cfn-sagemaker-modelcard-modeloverview-modelname): String
  [ModelOwner](#cfn-sagemaker-modelcard-modeloverview-modelowner): String
  [ModelVersion](#cfn-sagemaker-modelcard-modeloverview-modelversion): Double
  [ProblemType](#cfn-sagemaker-modelcard-modeloverview-problemtype): String

Properties
AlgorithmType 
The algorithm used to solve the problem.
Required: No
Type: String
Update requires: No interruption
InferenceEnvironment 
An overview about model inference.
Required: No
Type: InferenceEnvironment
Update requires: No interruption
ModelArtifact 
The location of the model artifact.
Required: No
Type: List of String
Update requires: No interruption
ModelCreator 
The creator of the model.
Required: No
Type: String
Update requires: No interruption
ModelDescription 
A description of the model.
Required: No
Type: String
Update requires: No interruption
ModelId 
The SageMaker Model ARN or non-SageMaker Model ID.
Required: No
Type: String
Update requires: No interruption
ModelName 
The name of the model.
Required: No
Type: String
Update requires: No interruption
ModelOwner 
The owner of the model.
Required: No
Type: String
Update requires: No interruption
ModelVersion 
The version of the model.
Required: No
Type: Double
Update requires: No interruption
ProblemType 
The problem being solved with the model.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::ModelCard ObjectiveFunction
The function that is optimized during model training.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Function](#cfn-sagemaker-modelcard-objectivefunction-function)" : Function,
  "[Notes](#cfn-sagemaker-modelcard-objectivefunction-notes)" : String
}

YAML

  [Function](#cfn-sagemaker-modelcard-objectivefunction-function): 
    Function
  [Notes](#cfn-sagemaker-modelcard-objectivefunction-notes): String

Properties
Function 
A function object that details optimization direction, metric, and additional descriptions.
Required: No
Type: Function
Update requires: No interruption
Notes 
Notes about the object function, including other considerations for possible objective functions.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::ModelCard SecurityConfig
The security configuration used to protect model card data.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[KmsKeyId](#cfn-sagemaker-modelcard-securityconfig-kmskeyid)" : String
}

YAML

  [KmsKeyId](#cfn-sagemaker-modelcard-securityconfig-kmskeyid): String

Properties
KmsKeyId 
A AWS Key Management Service key ID used to encrypt a model card.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::ModelCard TrainingDetails
The training details of the model
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ObjectiveFunction](#cfn-sagemaker-modelcard-trainingdetails-objectivefunction)" : ObjectiveFunction,
  "[TrainingJobDetails](#cfn-sagemaker-modelcard-trainingdetails-trainingjobdetails)" : TrainingJobDetails,
  "[TrainingObservations](#cfn-sagemaker-modelcard-trainingdetails-trainingobservations)" : String
}

YAML

  [ObjectiveFunction](#cfn-sagemaker-modelcard-trainingdetails-objectivefunction): 
    ObjectiveFunction
  [TrainingJobDetails](#cfn-sagemaker-modelcard-trainingdetails-trainingjobdetails): 
    TrainingJobDetails
  [TrainingObservations](#cfn-sagemaker-modelcard-trainingdetails-trainingobservations): String

Properties
ObjectiveFunction 
The function that is optimized during model training.
Required: No
Type: ObjectiveFunction
Update requires: No interruption
TrainingJobDetails 
Details about any associated training jobs.
Required: No
Type: TrainingJobDetails
Update requires: No interruption
TrainingObservations 
Any observations about training.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::ModelCard TrainingEnvironment
SageMaker training image.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ContainerImage](#cfn-sagemaker-modelcard-trainingenvironment-containerimage)" : [ String, ... ]
}

YAML

  [ContainerImage](#cfn-sagemaker-modelcard-trainingenvironment-containerimage): 
    - String

Properties
ContainerImage 
SageMaker inference image URI.
Required: No
Type: List of String
Update requires: No interruption

AWS::SageMaker::ModelCard TrainingHyperParameter
A hyper parameter that was configured in training the model.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Name](#cfn-sagemaker-modelcard-traininghyperparameter-name)" : String,
  "[Value](#cfn-sagemaker-modelcard-traininghyperparameter-value)" : String
}

YAML

  [Name](#cfn-sagemaker-modelcard-traininghyperparameter-name): String
  [Value](#cfn-sagemaker-modelcard-traininghyperparameter-value): String

Properties
Name 
The name of the hyper parameter.
Required: Yes
Type: String
Update requires: No interruption
Value 
The value specified for the hyper parameter.
Required: Yes
Type: String
Update requires: No interruption

AWS::SageMaker::ModelCard TrainingJobDetails
The overview of a training job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[HyperParameters](#cfn-sagemaker-modelcard-trainingjobdetails-hyperparameters)" : [ TrainingHyperParameter, ... ],
  "[TrainingArn](#cfn-sagemaker-modelcard-trainingjobdetails-trainingarn)" : String,
  "[TrainingDatasets](#cfn-sagemaker-modelcard-trainingjobdetails-trainingdatasets)" : [ String, ... ],
  "[TrainingEnvironment](#cfn-sagemaker-modelcard-trainingjobdetails-trainingenvironment)" : TrainingEnvironment,
  "[TrainingMetrics](#cfn-sagemaker-modelcard-trainingjobdetails-trainingmetrics)" : [ TrainingMetric, ... ],
  "[UserProvidedHyperParameters](#cfn-sagemaker-modelcard-trainingjobdetails-userprovidedhyperparameters)" : [ TrainingHyperParameter, ... ],
  "[UserProvidedTrainingMetrics](#cfn-sagemaker-modelcard-trainingjobdetails-userprovidedtrainingmetrics)" : [ TrainingMetric, ... ]
}

YAML

  [HyperParameters](#cfn-sagemaker-modelcard-trainingjobdetails-hyperparameters): 
    - TrainingHyperParameter
  [TrainingArn](#cfn-sagemaker-modelcard-trainingjobdetails-trainingarn): String
  [TrainingDatasets](#cfn-sagemaker-modelcard-trainingjobdetails-trainingdatasets): 
    - String
  [TrainingEnvironment](#cfn-sagemaker-modelcard-trainingjobdetails-trainingenvironment): 
    TrainingEnvironment
  [TrainingMetrics](#cfn-sagemaker-modelcard-trainingjobdetails-trainingmetrics): 
    - TrainingMetric
  [UserProvidedHyperParameters](#cfn-sagemaker-modelcard-trainingjobdetails-userprovidedhyperparameters): 
    - TrainingHyperParameter
  [UserProvidedTrainingMetrics](#cfn-sagemaker-modelcard-trainingjobdetails-userprovidedtrainingmetrics): 
    - TrainingMetric

Properties
HyperParameters 
The hyper parameters used in the training job.
Required: No
Type: List of TrainingHyperParameter
Update requires: No interruption
TrainingArn 
The SageMaker training job Amazon Resource Name (ARN)
Required: No
Type: String
Update requires: No interruption
TrainingDatasets 
The location of the datasets used to train the model.
Required: No
Type: List of String
Update requires: No interruption
TrainingEnvironment 
The SageMaker training job image URI.
Required: No
Type: TrainingEnvironment
Update requires: No interruption
TrainingMetrics 
The SageMaker training job results.
Required: No
Type: List of TrainingMetric
Update requires: No interruption
UserProvidedHyperParameters 
Additional hyper parameters that you've specified when training the model.
Required: No
Type: List of TrainingHyperParameter
Update requires: No interruption
UserProvidedTrainingMetrics 
Custom training job results.
Required: No
Type: List of TrainingMetric
Update requires: No interruption

AWS::SageMaker::ModelCard TrainingMetric
A result from a SageMaker training job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Name](#cfn-sagemaker-modelcard-trainingmetric-name)" : String,
  "[Notes](#cfn-sagemaker-modelcard-trainingmetric-notes)" : String,
  "[Value](#cfn-sagemaker-modelcard-trainingmetric-value)" : Double
}

YAML

  [Name](#cfn-sagemaker-modelcard-trainingmetric-name): String
  [Notes](#cfn-sagemaker-modelcard-trainingmetric-notes): String
  [Value](#cfn-sagemaker-modelcard-trainingmetric-value): Double

Properties
Name 
The name of the result from the SageMaker training job.
Required: Yes
Type: String
Update requires: No interruption
Notes 
Any additional notes describing the result of the training job.
Required: No
Type: String
Update requires: No interruption
Value 
The value of a result from the SageMaker training job.
Required: Yes
Type: Double
Update requires: No interruption

AWS::SageMaker::ModelCard UserContext
Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DomainId](#cfn-sagemaker-modelcard-usercontext-domainid)" : String,
  "[UserProfileArn](#cfn-sagemaker-modelcard-usercontext-userprofilearn)" : String,
  "[UserProfileName](#cfn-sagemaker-modelcard-usercontext-userprofilename)" : String
}

YAML

  [DomainId](#cfn-sagemaker-modelcard-usercontext-domainid): String
  [UserProfileArn](#cfn-sagemaker-modelcard-usercontext-userprofilearn): String
  [UserProfileName](#cfn-sagemaker-modelcard-usercontext-userprofilename): String

Properties
DomainId 
The domain associated with the user.
Required: No
Type: String
Update requires: No interruption
UserProfileArn 
The Amazon Resource Name (ARN) of the user's profile.
Required: No
Type: String
Update requires: No interruption
UserProfileName 
The name of the user's profile.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::ModelExplainabilityJobDefinition BatchTransformInput
The BatchTransformInput property type specifies Property description not available. for an AWS::SageMaker::ModelExplainabilityJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DataCapturedDestinationS3Uri](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-datacaptureddestinations3uri)" : String,
  "[DatasetFormat](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-datasetformat)" : DatasetFormat,
  "[FeaturesAttribute](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-featuresattribute)" : String,
  "[InferenceAttribute](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-inferenceattribute)" : String,
  "[LocalPath](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-localpath)" : String,
  "[ProbabilityAttribute](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-probabilityattribute)" : String,
  "[S3DataDistributionType](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-s3datadistributiontype)" : String,
  "[S3InputMode](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-s3inputmode)" : String
}

YAML

  [DataCapturedDestinationS3Uri](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-datacaptureddestinations3uri): String
  [DatasetFormat](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-datasetformat): 
    DatasetFormat
  [FeaturesAttribute](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-featuresattribute): String
  [InferenceAttribute](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-inferenceattribute): String
  [LocalPath](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-localpath): String
  [ProbabilityAttribute](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-probabilityattribute): String
  [S3DataDistributionType](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-s3datadistributiontype): String
  [S3InputMode](#cfn-sagemaker-modelexplainabilityjobdefinition-batchtransforminput-s3inputmode): String

Properties
DataCapturedDestinationS3Uri 
Property description not available.
Required: Yes
Type: String
Update requires: Replacement
DatasetFormat 
Property description not available.
Required: Yes
Type: DatasetFormat
Update requires: Replacement
FeaturesAttribute 
Property description not available.
Required: No
Type: String
Update requires: Replacement
InferenceAttribute 
Property description not available.
Required: No
Type: String
Update requires: Replacement
LocalPath 
Property description not available.
Required: Yes
Type: String
Update requires: Replacement
ProbabilityAttribute 
Property description not available.
Required: No
Type: String
Update requires: Replacement
S3DataDistributionType 
Property description not available.
Required: No
Type: String
Update requires: Replacement
S3InputMode 
Property description not available.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition ClusterConfig
The configuration for the cluster resources used to run the processing job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InstanceCount](#cfn-sagemaker-modelexplainabilityjobdefinition-clusterconfig-instancecount)" : Integer,
  "[InstanceType](#cfn-sagemaker-modelexplainabilityjobdefinition-clusterconfig-instancetype)" : String,
  "[VolumeKmsKeyId](#cfn-sagemaker-modelexplainabilityjobdefinition-clusterconfig-volumekmskeyid)" : String,
  "[VolumeSizeInGB](#cfn-sagemaker-modelexplainabilityjobdefinition-clusterconfig-volumesizeingb)" : Integer
}

YAML

  [InstanceCount](#cfn-sagemaker-modelexplainabilityjobdefinition-clusterconfig-instancecount): Integer
  [InstanceType](#cfn-sagemaker-modelexplainabilityjobdefinition-clusterconfig-instancetype): String
  [VolumeKmsKeyId](#cfn-sagemaker-modelexplainabilityjobdefinition-clusterconfig-volumekmskeyid): String
  [VolumeSizeInGB](#cfn-sagemaker-modelexplainabilityjobdefinition-clusterconfig-volumesizeingb): Integer

Properties
InstanceCount 
The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
Required: Yes
Type: Integer
Update requires: Replacement
InstanceType 
The ML compute instance type for the processing job.
Required: Yes
Type: String
Update requires: Replacement
VolumeKmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
Required: No
Type: String
Update requires: Replacement
VolumeSizeInGB 
The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
Required: Yes
Type: Integer
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition ConstraintsResource
Input object for the endpoint
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Uri](#cfn-sagemaker-modelexplainabilityjobdefinition-constraintsresource-s3uri)" : String
}

YAML

  [S3Uri](#cfn-sagemaker-modelexplainabilityjobdefinition-constraintsresource-s3uri): String

Properties
S3Uri 
The Amazon S3 URI for the constraints resource.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition Csv
The Csv property type specifies Property description not available. for an AWS::SageMaker::ModelExplainabilityJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Header](#cfn-sagemaker-modelexplainabilityjobdefinition-csv-header)" : Boolean
}

YAML

  [Header](#cfn-sagemaker-modelexplainabilityjobdefinition-csv-header): Boolean

Properties
Header 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition DatasetFormat
The DatasetFormat property type specifies Property description not available. for an AWS::SageMaker::ModelExplainabilityJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Csv](#cfn-sagemaker-modelexplainabilityjobdefinition-datasetformat-csv)" : Csv,
  "[Json](#cfn-sagemaker-modelexplainabilityjobdefinition-datasetformat-json)" : Json,
  "[Parquet](#cfn-sagemaker-modelexplainabilityjobdefinition-datasetformat-parquet)" : Boolean
}

YAML

  [Csv](#cfn-sagemaker-modelexplainabilityjobdefinition-datasetformat-csv): 
    Csv
  [Json](#cfn-sagemaker-modelexplainabilityjobdefinition-datasetformat-json): 
    Json
  [Parquet](#cfn-sagemaker-modelexplainabilityjobdefinition-datasetformat-parquet): Boolean

Properties
Csv 
Property description not available.
Required: No
Type: Csv
Update requires: Replacement
Json 
Property description not available.
Required: No
Type: Json
Update requires: Replacement
Parquet 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition EndpointInput
Input object for the endpoint
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EndpointName](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-endpointname)" : String,
  "[FeaturesAttribute](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-featuresattribute)" : String,
  "[InferenceAttribute](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-inferenceattribute)" : String,
  "[LocalPath](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-localpath)" : String,
  "[ProbabilityAttribute](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-probabilityattribute)" : String,
  "[S3DataDistributionType](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-s3datadistributiontype)" : String,
  "[S3InputMode](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-s3inputmode)" : String
}

YAML

  [EndpointName](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-endpointname): String
  [FeaturesAttribute](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-featuresattribute): String
  [InferenceAttribute](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-inferenceattribute): String
  [LocalPath](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-localpath): String
  [ProbabilityAttribute](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-probabilityattribute): String
  [S3DataDistributionType](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-s3datadistributiontype): String
  [S3InputMode](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointinput-s3inputmode): String

Properties
EndpointName 
An endpoint in customer's account which has enabled DataCaptureConfig enabled.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
FeaturesAttribute 
The attributes of the input data that are the input features.
Required: No
Type: String
Update requires: Replacement
InferenceAttribute 
The attribute of the input data that represents the ground truth label.
Required: No
Type: String
Update requires: Replacement
LocalPath 
Path to the filesystem where the endpoint data is available to the container.
Required: Yes
Type: String
Maximum: 256
Pattern: .*
Update requires: Replacement
ProbabilityAttribute 
In a classification problem, the attribute that represents the class probability.
Required: No
Type: String
Update requires: Replacement
S3DataDistributionType 
Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to FullyReplicated
Required: No
Type: String
Allowed values: FullyReplicated | ShardedByS3Key
Update requires: Replacement
S3InputMode 
Whether the Pipe or File is used as the input mode for transferring data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
Required: No
Type: String
Allowed values: File | Pipe
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition Json
The Json property type specifies Property description not available. for an AWS::SageMaker::ModelExplainabilityJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Line](#cfn-sagemaker-modelexplainabilityjobdefinition-json-line)" : Boolean
}

YAML

  [Line](#cfn-sagemaker-modelexplainabilityjobdefinition-json-line): Boolean

Properties
Line 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition ModelExplainabilityAppSpecification
Docker container image configuration object for the model explainability job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ConfigUri](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityappspecification-configuri)" : String,
  "[Environment](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityappspecification-environment)" : {Key : Value, ...},
  "[ImageUri](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityappspecification-imageuri)" : String
}

YAML

  [ConfigUri](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityappspecification-configuri): String
  [Environment](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityappspecification-environment): 
    Key : Value
  [ImageUri](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityappspecification-imageuri): String

Properties
ConfigUri 
JSON formatted S3 file that defines explainability parameters. For more information on this JSON configuration file, see Configure model explainability parameters.
Required: Yes
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement
Environment 
Sets the environment variables in the Docker container.
Required: No
Type: Map of String
Update requires: Replacement
ImageUri 
The container image to be run by the model explainability job.
Required: Yes
Type: String
Maximum: 255
Pattern: .*
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition ModelExplainabilityBaselineConfig
The configuration for a baseline model explainability job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[BaseliningJobName](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilitybaselineconfig-baseliningjobname)" : String,
  "[ConstraintsResource](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilitybaselineconfig-constraintsresource)" : ConstraintsResource
}

YAML

  [BaseliningJobName](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilitybaselineconfig-baseliningjobname): String
  [ConstraintsResource](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilitybaselineconfig-constraintsresource): 
    ConstraintsResource

Properties
BaseliningJobName 
The name of the baseline model explainability job.
Required: No
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
ConstraintsResource 
The constraints resource for a model explainability job.
Required: No
Type: ConstraintsResource
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition ModelExplainabilityJobInput
Inputs for the model explainability job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[BatchTransformInput](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityjobinput-batchtransforminput)" : BatchTransformInput,
  "[EndpointInput](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityjobinput-endpointinput)" : EndpointInput
}

YAML

  [BatchTransformInput](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityjobinput-batchtransforminput): 
    BatchTransformInput
  [EndpointInput](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityjobinput-endpointinput): 
    EndpointInput

Properties
BatchTransformInput 
Property description not available.
Required: No
Type: BatchTransformInput
Update requires: Replacement
EndpointInput 
Property description not available.
Required: No
Type: EndpointInput
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition MonitoringOutput
The output object for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Output](#cfn-sagemaker-modelexplainabilityjobdefinition-monitoringoutput-s3output)" : S3Output
}

YAML

  [S3Output](#cfn-sagemaker-modelexplainabilityjobdefinition-monitoringoutput-s3output): 
    S3Output

Properties
S3Output 
The Amazon S3 storage location where the results of a monitoring job are saved.
Required: Yes
Type: S3Output
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition MonitoringOutputConfig
The output configuration for monitoring jobs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[KmsKeyId](#cfn-sagemaker-modelexplainabilityjobdefinition-monitoringoutputconfig-kmskeyid)" : String,
  "[MonitoringOutputs](#cfn-sagemaker-modelexplainabilityjobdefinition-monitoringoutputconfig-monitoringoutputs)" : [ MonitoringOutput, ... ]
}

YAML

  [KmsKeyId](#cfn-sagemaker-modelexplainabilityjobdefinition-monitoringoutputconfig-kmskeyid): String
  [MonitoringOutputs](#cfn-sagemaker-modelexplainabilityjobdefinition-monitoringoutputconfig-monitoringoutputs): 
    - MonitoringOutput

Properties
KmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: Replacement
MonitoringOutputs 
Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
Required: Yes
Type: List of MonitoringOutput
Maximum: 1
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition MonitoringResources
Identifies the resources to deploy for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ClusterConfig](#cfn-sagemaker-modelexplainabilityjobdefinition-monitoringresources-clusterconfig)" : ClusterConfig
}

YAML

  [ClusterConfig](#cfn-sagemaker-modelexplainabilityjobdefinition-monitoringresources-clusterconfig): 
    ClusterConfig

Properties
ClusterConfig 
The configuration for the cluster resources used to run the processing job.
Required: Yes
Type: ClusterConfig
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition NetworkConfig
Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EnableInterContainerTrafficEncryption](#cfn-sagemaker-modelexplainabilityjobdefinition-networkconfig-enableintercontainertrafficencryption)" : Boolean,
  "[EnableNetworkIsolation](#cfn-sagemaker-modelexplainabilityjobdefinition-networkconfig-enablenetworkisolation)" : Boolean,
  "[VpcConfig](#cfn-sagemaker-modelexplainabilityjobdefinition-networkconfig-vpcconfig)" : VpcConfig
}

YAML

  [EnableInterContainerTrafficEncryption](#cfn-sagemaker-modelexplainabilityjobdefinition-networkconfig-enableintercontainertrafficencryption): Boolean
  [EnableNetworkIsolation](#cfn-sagemaker-modelexplainabilityjobdefinition-networkconfig-enablenetworkisolation): Boolean
  [VpcConfig](#cfn-sagemaker-modelexplainabilityjobdefinition-networkconfig-vpcconfig): 
    VpcConfig

Properties
EnableInterContainerTrafficEncryption 
Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
Required: No
Type: Boolean
Update requires: Replacement
EnableNetworkIsolation 
Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
Required: No
Type: Boolean
Update requires: Replacement
VpcConfig 
Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
Required: No
Type: VpcConfig
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition S3Output
The Amazon S3 storage location where the results of a monitoring job are saved.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[LocalPath](#cfn-sagemaker-modelexplainabilityjobdefinition-s3output-localpath)" : String,
  "[S3UploadMode](#cfn-sagemaker-modelexplainabilityjobdefinition-s3output-s3uploadmode)" : String,
  "[S3Uri](#cfn-sagemaker-modelexplainabilityjobdefinition-s3output-s3uri)" : String
}

YAML

  [LocalPath](#cfn-sagemaker-modelexplainabilityjobdefinition-s3output-localpath): String
  [S3UploadMode](#cfn-sagemaker-modelexplainabilityjobdefinition-s3output-s3uploadmode): String
  [S3Uri](#cfn-sagemaker-modelexplainabilityjobdefinition-s3output-s3uri): String

Properties
LocalPath 
The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
Required: Yes
Type: String
Update requires: Replacement
S3UploadMode 
Whether to upload the results of the monitoring job continuously or after the job completes.
Required: No
Type: String
Update requires: Replacement
S3Uri 
A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
Required: Yes
Type: String
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition StoppingCondition
Specifies a limit to how long a model training job or model compilation job can run. It also specifies how long a managed spot training job has to complete. When the job reaches the time limit, SageMaker ends the training or compilation job. Use this API to cap model training costs.
To stop a training job, SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. 
The training algorithms provided by SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with CreateModel.
Note
The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MaxRuntimeInSeconds](#cfn-sagemaker-modelexplainabilityjobdefinition-stoppingcondition-maxruntimeinseconds)" : Integer
}

YAML

  [MaxRuntimeInSeconds](#cfn-sagemaker-modelexplainabilityjobdefinition-stoppingcondition-maxruntimeinseconds): Integer

Properties
MaxRuntimeInSeconds 
The maximum length of time, in seconds, that a training or compilation job can run before it is stopped.
For compilation jobs, if the job does not complete during this time, a TimeOut error is generated. We recommend starting with 900 seconds and increasing as necessary based on your model.
For all other jobs, if the job does not complete during this time, SageMaker ends the job. When RetryStrategy is specified in the job request, MaxRuntimeInSeconds specifies the maximum time for all of the attempts in total, not each individual attempt. The default value is 1 day. The maximum value is 28 days.
The maximum time that a TrainingJob can run in total, including any time spent publishing metrics or archiving and uploading models after it has been stopped, is 30 days.
Required: Yes
Type: Integer
Minimum: 1
Update requires: Replacement

AWS::SageMaker::ModelExplainabilityJobDefinition VpcConfig
Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud and Protect Training Jobs by Using an Amazon Virtual Private Cloud. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[SecurityGroupIds](#cfn-sagemaker-modelexplainabilityjobdefinition-vpcconfig-securitygroupids)" : [ String, ... ],
  "[Subnets](#cfn-sagemaker-modelexplainabilityjobdefinition-vpcconfig-subnets)" : [ String, ... ]
}

YAML

  [SecurityGroupIds](#cfn-sagemaker-modelexplainabilityjobdefinition-vpcconfig-securitygroupids): 
    - String
  [Subnets](#cfn-sagemaker-modelexplainabilityjobdefinition-vpcconfig-subnets): 
    - String

Properties
SecurityGroupIds 
The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
Required: Yes
Type: List of String
Maximum: 5
Update requires: Replacement
Subnets 
The ID of the subnets in the VPC to which you want to connect your training job or model. For information about the availability of specific instance types, see Supported Instance Types and Availability Zones.
Required: Yes
Type: List of String
Maximum: 16
Update requires: Replacement

AWS::SageMaker::ModelPackage AdditionalInferenceSpecificationDefinition
A structure of additional Inference Specification. Additional Inference Specification specifies details about inference jobs that can be run with models based on this model package
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Containers](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-containers)" : [ ModelPackageContainerDefinition, ... ],
  "[Description](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-description)" : String,
  "[Name](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-name)" : String,
  "[SupportedContentTypes](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-supportedcontenttypes)" : [ String, ... ],
  "[SupportedRealtimeInferenceInstanceTypes](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-supportedrealtimeinferenceinstancetypes)" : [ String, ... ],
  "[SupportedResponseMIMETypes](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-supportedresponsemimetypes)" : [ String, ... ],
  "[SupportedTransformInstanceTypes](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-supportedtransforminstancetypes)" : [ String, ... ]
}

YAML

  [Containers](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-containers): 
    - ModelPackageContainerDefinition
  [Description](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-description): String
  [Name](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-name): String
  [SupportedContentTypes](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-supportedcontenttypes): 
    - String
  [SupportedRealtimeInferenceInstanceTypes](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-supportedrealtimeinferenceinstancetypes): 
    - String
  [SupportedResponseMIMETypes](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-supportedresponsemimetypes): 
    - String
  [SupportedTransformInstanceTypes](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition-supportedtransforminstancetypes): 
    - String

Properties
Containers 
The Amazon ECR registry path of the Docker image that contains the inference code.
Required: Yes
Type: List of ModelPackageContainerDefinition
Maximum: 15
Update requires: No interruption
Description 
A description of the additional Inference specification
Required: No
Type: String
Maximum: 1024
Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
Update requires: No interruption
Name 
A unique name to identify the additional inference specification. The name must be unique within the list of your additional inference specifications for a particular model package.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: No interruption
SupportedContentTypes 
The supported MIME types for the input data.
Required: No
Type: List of String
Update requires: No interruption
SupportedRealtimeInferenceInstanceTypes 
A list of the instance types that are used to generate inferences in real-time.
Required: No
Type: List of String
Update requires: No interruption
SupportedResponseMIMETypes 
The supported MIME types for the output data.
Required: No
Type: List of String
Update requires: No interruption
SupportedTransformInstanceTypes 
A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
Required: No
Type: List of String
Update requires: No interruption

AWS::SageMaker::ModelPackage Bias
Contains bias metrics for a model.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[PostTrainingReport](#cfn-sagemaker-modelpackage-bias-posttrainingreport)" : MetricsSource,
  "[PreTrainingReport](#cfn-sagemaker-modelpackage-bias-pretrainingreport)" : MetricsSource,
  "[Report](#cfn-sagemaker-modelpackage-bias-report)" : MetricsSource
}

YAML

  [PostTrainingReport](#cfn-sagemaker-modelpackage-bias-posttrainingreport): 
    MetricsSource
  [PreTrainingReport](#cfn-sagemaker-modelpackage-bias-pretrainingreport): 
    MetricsSource
  [Report](#cfn-sagemaker-modelpackage-bias-report): 
    MetricsSource

Properties
PostTrainingReport 
The post-training bias report for a model.
Required: No
Type: MetricsSource
Update requires: Replacement
PreTrainingReport 
The pre-training bias report for a model.
Required: No
Type: MetricsSource
Update requires: Replacement
Report 
The bias report for a model
Required: No
Type: MetricsSource
Update requires: Replacement

AWS::SageMaker::ModelPackage DataSource
Describes the location of the channel data.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3DataSource](#cfn-sagemaker-modelpackage-datasource-s3datasource)" : S3DataSource
}

YAML

  [S3DataSource](#cfn-sagemaker-modelpackage-datasource-s3datasource): 
    S3DataSource

Properties
S3DataSource 
The S3 location of the data source that is associated with a channel.
Required: Yes
Type: S3DataSource
Update requires: Replacement

AWS::SageMaker::ModelPackage DriftCheckBaselines
Represents the drift check baselines that can be used when the model monitor is set using the model package. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Bias](#cfn-sagemaker-modelpackage-driftcheckbaselines-bias)" : DriftCheckBias,
  "[Explainability](#cfn-sagemaker-modelpackage-driftcheckbaselines-explainability)" : DriftCheckExplainability,
  "[ModelDataQuality](#cfn-sagemaker-modelpackage-driftcheckbaselines-modeldataquality)" : DriftCheckModelDataQuality,
  "[ModelQuality](#cfn-sagemaker-modelpackage-driftcheckbaselines-modelquality)" : DriftCheckModelQuality
}

YAML

  [Bias](#cfn-sagemaker-modelpackage-driftcheckbaselines-bias): 
    DriftCheckBias
  [Explainability](#cfn-sagemaker-modelpackage-driftcheckbaselines-explainability): 
    DriftCheckExplainability
  [ModelDataQuality](#cfn-sagemaker-modelpackage-driftcheckbaselines-modeldataquality): 
    DriftCheckModelDataQuality
  [ModelQuality](#cfn-sagemaker-modelpackage-driftcheckbaselines-modelquality): 
    DriftCheckModelQuality

Properties
Bias 
Represents the drift check bias baselines that can be used when the model monitor is set using the model package.
Required: No
Type: DriftCheckBias
Update requires: Replacement
Explainability 
Represents the drift check explainability baselines that can be used when the model monitor is set using the model package.
Required: No
Type: DriftCheckExplainability
Update requires: Replacement
ModelDataQuality 
Represents the drift check model data quality baselines that can be used when the model monitor is set using the model package.
Required: No
Type: DriftCheckModelDataQuality
Update requires: Replacement
ModelQuality 
Represents the drift check model quality baselines that can be used when the model monitor is set using the model package.
Required: No
Type: DriftCheckModelQuality
Update requires: Replacement

AWS::SageMaker::ModelPackage DriftCheckBias
Represents the drift check bias baselines that can be used when the model monitor is set using the model package.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ConfigFile](#cfn-sagemaker-modelpackage-driftcheckbias-configfile)" : FileSource,
  "[PostTrainingConstraints](#cfn-sagemaker-modelpackage-driftcheckbias-posttrainingconstraints)" : MetricsSource,
  "[PreTrainingConstraints](#cfn-sagemaker-modelpackage-driftcheckbias-pretrainingconstraints)" : MetricsSource
}

YAML

  [ConfigFile](#cfn-sagemaker-modelpackage-driftcheckbias-configfile): 
    FileSource
  [PostTrainingConstraints](#cfn-sagemaker-modelpackage-driftcheckbias-posttrainingconstraints): 
    MetricsSource
  [PreTrainingConstraints](#cfn-sagemaker-modelpackage-driftcheckbias-pretrainingconstraints): 
    MetricsSource

Properties
ConfigFile 
The bias config file for a model.
Required: No
Type: FileSource
Update requires: Replacement
PostTrainingConstraints 
The post-training constraints.
Required: No
Type: MetricsSource
Update requires: Replacement
PreTrainingConstraints 
The pre-training constraints.
Required: No
Type: MetricsSource
Update requires: Replacement

AWS::SageMaker::ModelPackage DriftCheckExplainability
Represents the drift check explainability baselines that can be used when the model monitor is set using the model package. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ConfigFile](#cfn-sagemaker-modelpackage-driftcheckexplainability-configfile)" : FileSource,
  "[Constraints](#cfn-sagemaker-modelpackage-driftcheckexplainability-constraints)" : MetricsSource
}

YAML

  [ConfigFile](#cfn-sagemaker-modelpackage-driftcheckexplainability-configfile): 
    FileSource
  [Constraints](#cfn-sagemaker-modelpackage-driftcheckexplainability-constraints): 
    MetricsSource

Properties
ConfigFile 
The explainability config file for the model.
Required: No
Type: FileSource
Update requires: Replacement
Constraints 
The drift check explainability constraints.
Required: No
Type: MetricsSource
Update requires: Replacement

AWS::SageMaker::ModelPackage DriftCheckModelDataQuality
Represents the drift check data quality baselines that can be used when the model monitor is set using the model package. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Constraints](#cfn-sagemaker-modelpackage-driftcheckmodeldataquality-constraints)" : MetricsSource,
  "[Statistics](#cfn-sagemaker-modelpackage-driftcheckmodeldataquality-statistics)" : MetricsSource
}

YAML

  [Constraints](#cfn-sagemaker-modelpackage-driftcheckmodeldataquality-constraints): 
    MetricsSource
  [Statistics](#cfn-sagemaker-modelpackage-driftcheckmodeldataquality-statistics): 
    MetricsSource

Properties
Constraints 
The drift check model data quality constraints.
Required: No
Type: MetricsSource
Update requires: Replacement
Statistics 
The drift check model data quality statistics.
Required: No
Type: MetricsSource
Update requires: Replacement

AWS::SageMaker::ModelPackage DriftCheckModelQuality
Represents the drift check model quality baselines that can be used when the model monitor is set using the model package. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Constraints](#cfn-sagemaker-modelpackage-driftcheckmodelquality-constraints)" : MetricsSource,
  "[Statistics](#cfn-sagemaker-modelpackage-driftcheckmodelquality-statistics)" : MetricsSource
}

YAML

  [Constraints](#cfn-sagemaker-modelpackage-driftcheckmodelquality-constraints): 
    MetricsSource
  [Statistics](#cfn-sagemaker-modelpackage-driftcheckmodelquality-statistics): 
    MetricsSource

Properties
Constraints 
The drift check model quality constraints.
Required: No
Type: MetricsSource
Update requires: Replacement
Statistics 
The drift check model quality statistics.
Required: No
Type: MetricsSource
Update requires: Replacement

AWS::SageMaker::ModelPackage Explainability
Contains explainability metrics for a model.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Report](#cfn-sagemaker-modelpackage-explainability-report)" : MetricsSource
}

YAML

  [Report](#cfn-sagemaker-modelpackage-explainability-report): 
    MetricsSource

Properties
Report 
The explainability report for a model.
Required: No
Type: MetricsSource
Update requires: Replacement

AWS::SageMaker::ModelPackage FileSource
Contains details regarding the file source.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ContentDigest](#cfn-sagemaker-modelpackage-filesource-contentdigest)" : String,
  "[ContentType](#cfn-sagemaker-modelpackage-filesource-contenttype)" : String,
  "[S3Uri](#cfn-sagemaker-modelpackage-filesource-s3uri)" : String
}

YAML

  [ContentDigest](#cfn-sagemaker-modelpackage-filesource-contentdigest): String
  [ContentType](#cfn-sagemaker-modelpackage-filesource-contenttype): String
  [S3Uri](#cfn-sagemaker-modelpackage-filesource-s3uri): String

Properties
ContentDigest 
The digest of the file source.
Required: No
Type: String
Maximum: 72
Pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
Update requires: Replacement
ContentType 
The type of content stored in the file source.
Required: No
Type: String
Maximum: 256
Pattern: .*
Update requires: Replacement
S3Uri 
The Amazon S3 URI for the file source.
Required: Yes
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement

AWS::SageMaker::ModelPackage InferenceSpecification
Defines how to perform inference generation after a training job is run.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Containers](#cfn-sagemaker-modelpackage-inferencespecification-containers)" : [ ModelPackageContainerDefinition, ... ],
  "[SupportedContentTypes](#cfn-sagemaker-modelpackage-inferencespecification-supportedcontenttypes)" : [ String, ... ],
  "[SupportedRealtimeInferenceInstanceTypes](#cfn-sagemaker-modelpackage-inferencespecification-supportedrealtimeinferenceinstancetypes)" : [ String, ... ],
  "[SupportedResponseMIMETypes](#cfn-sagemaker-modelpackage-inferencespecification-supportedresponsemimetypes)" : [ String, ... ],
  "[SupportedTransformInstanceTypes](#cfn-sagemaker-modelpackage-inferencespecification-supportedtransforminstancetypes)" : [ String, ... ]
}

YAML

  [Containers](#cfn-sagemaker-modelpackage-inferencespecification-containers): 
    - ModelPackageContainerDefinition
  [SupportedContentTypes](#cfn-sagemaker-modelpackage-inferencespecification-supportedcontenttypes): 
    - String
  [SupportedRealtimeInferenceInstanceTypes](#cfn-sagemaker-modelpackage-inferencespecification-supportedrealtimeinferenceinstancetypes): 
    - String
  [SupportedResponseMIMETypes](#cfn-sagemaker-modelpackage-inferencespecification-supportedresponsemimetypes): 
    - String
  [SupportedTransformInstanceTypes](#cfn-sagemaker-modelpackage-inferencespecification-supportedtransforminstancetypes): 
    - String

Properties
Containers 
The Amazon ECR registry path of the Docker image that contains the inference code.
Required: Yes
Type: List of ModelPackageContainerDefinition
Maximum: 15
Update requires: Replacement
SupportedContentTypes 
The supported MIME types for the input data.
Required: Yes
Type: List of String
Update requires: Replacement
SupportedRealtimeInferenceInstanceTypes 
A list of the instance types that are used to generate inferences in real-time.
This parameter is required for unversioned models, and optional for versioned models.
Required: No
Type: List of String
Update requires: Replacement
SupportedResponseMIMETypes 
The supported MIME types for the output data.
Required: Yes
Type: List of String
Update requires: Replacement
SupportedTransformInstanceTypes 
A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
This parameter is required for unversioned models, and optional for versioned models.
Required: No
Type: List of String
Update requires: Replacement

AWS::SageMaker::ModelPackage MetadataProperties
Metadata properties of the tracking entity, trial, or trial component.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CommitId](#cfn-sagemaker-modelpackage-metadataproperties-commitid)" : String,
  "[GeneratedBy](#cfn-sagemaker-modelpackage-metadataproperties-generatedby)" : String,
  "[ProjectId](#cfn-sagemaker-modelpackage-metadataproperties-projectid)" : String,
  "[Repository](#cfn-sagemaker-modelpackage-metadataproperties-repository)" : String
}

YAML

  [CommitId](#cfn-sagemaker-modelpackage-metadataproperties-commitid): String
  [GeneratedBy](#cfn-sagemaker-modelpackage-metadataproperties-generatedby): String
  [ProjectId](#cfn-sagemaker-modelpackage-metadataproperties-projectid): String
  [Repository](#cfn-sagemaker-modelpackage-metadataproperties-repository): String

Properties
CommitId 
The commit ID.
Required: No
Type: String
Maximum: 1024
Pattern: .*
Update requires: Replacement
GeneratedBy 
The entity this entity was generated by.
Required: No
Type: String
Maximum: 1024
Pattern: .*
Update requires: Replacement
ProjectId 
The project ID.
Required: No
Type: String
Maximum: 1024
Pattern: .*
Update requires: Replacement
Repository 
The repository.
Required: No
Type: String
Maximum: 1024
Pattern: .*
Update requires: Replacement

AWS::SageMaker::ModelPackage MetricsSource
Details about the metrics source.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ContentDigest](#cfn-sagemaker-modelpackage-metricssource-contentdigest)" : String,
  "[ContentType](#cfn-sagemaker-modelpackage-metricssource-contenttype)" : String,
  "[S3Uri](#cfn-sagemaker-modelpackage-metricssource-s3uri)" : String
}

YAML

  [ContentDigest](#cfn-sagemaker-modelpackage-metricssource-contentdigest): String
  [ContentType](#cfn-sagemaker-modelpackage-metricssource-contenttype): String
  [S3Uri](#cfn-sagemaker-modelpackage-metricssource-s3uri): String

Properties
ContentDigest 
The hash key used for the metrics source.
Required: No
Type: String
Maximum: 72
Pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
Update requires: Replacement
ContentType 
The metric source content type.
Required: Yes
Type: String
Maximum: 256
Pattern: .*
Update requires: Replacement
S3Uri 
The S3 URI for the metrics source.
Required: Yes
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement

AWS::SageMaker::ModelPackage ModelDataQuality
Data quality constraints and statistics for a model.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Constraints](#cfn-sagemaker-modelpackage-modeldataquality-constraints)" : MetricsSource,
  "[Statistics](#cfn-sagemaker-modelpackage-modeldataquality-statistics)" : MetricsSource
}

YAML

  [Constraints](#cfn-sagemaker-modelpackage-modeldataquality-constraints): 
    MetricsSource
  [Statistics](#cfn-sagemaker-modelpackage-modeldataquality-statistics): 
    MetricsSource

Properties
Constraints 
Data quality constraints for a model.
Required: No
Type: MetricsSource
Update requires: Replacement
Statistics 
Data quality statistics for a model.
Required: No
Type: MetricsSource
Update requires: Replacement

AWS::SageMaker::ModelPackage ModelInput
Input object for the model.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DataInputConfig](#cfn-sagemaker-modelpackage-modelinput-datainputconfig)" : String
}

YAML

  [DataInputConfig](#cfn-sagemaker-modelpackage-modelinput-datainputconfig): String

Properties
DataInputConfig 
The input configuration object for the model.
Required: Yes
Type: String
Minimum: 1
Maximum: 1024
Pattern: [\S\s]+
Update requires: Some interruptions

AWS::SageMaker::ModelPackage ModelMetrics
Contains metrics captured from a model.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Bias](#cfn-sagemaker-modelpackage-modelmetrics-bias)" : Bias,
  "[Explainability](#cfn-sagemaker-modelpackage-modelmetrics-explainability)" : Explainability,
  "[ModelDataQuality](#cfn-sagemaker-modelpackage-modelmetrics-modeldataquality)" : ModelDataQuality,
  "[ModelQuality](#cfn-sagemaker-modelpackage-modelmetrics-modelquality)" : ModelQuality
}

YAML

  [Bias](#cfn-sagemaker-modelpackage-modelmetrics-bias): 
    Bias
  [Explainability](#cfn-sagemaker-modelpackage-modelmetrics-explainability): 
    Explainability
  [ModelDataQuality](#cfn-sagemaker-modelpackage-modelmetrics-modeldataquality): 
    ModelDataQuality
  [ModelQuality](#cfn-sagemaker-modelpackage-modelmetrics-modelquality): 
    ModelQuality

Properties
Bias 
Metrics that measure bais in a model.
Required: No
Type: Bias
Update requires: Replacement
Explainability 
Metrics that help explain a model.
Required: No
Type: Explainability
Update requires: Replacement
ModelDataQuality 
Metrics that measure the quality of the input data for a model.
Required: No
Type: ModelDataQuality
Update requires: Replacement
ModelQuality 
Metrics that measure the quality of a model.
Required: No
Type: ModelQuality
Update requires: Replacement

AWS::SageMaker::ModelPackage ModelPackageContainerDefinition
Describes the Docker container for the model package.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ContainerHostname](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-containerhostname)" : String,
  "[Environment](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-environment)" : {Key : Value, ...},
  "[Framework](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-framework)" : String,
  "[FrameworkVersion](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-frameworkversion)" : String,
  "[Image](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-image)" : String,
  "[ImageDigest](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-imagedigest)" : String,
  "[ModelDataUrl](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-modeldataurl)" : String,
  "[ModelInput](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-modelinput)" : ModelInput,
  "[NearestModelName](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-nearestmodelname)" : String,
  "[ProductId](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-productid)" : String
}

YAML

  [ContainerHostname](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-containerhostname): String
  [Environment](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-environment): 
    Key : Value
  [Framework](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-framework): String
  [FrameworkVersion](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-frameworkversion): String
  [Image](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-image): String
  [ImageDigest](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-imagedigest): String
  [ModelDataUrl](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-modeldataurl): String
  [ModelInput](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-modelinput): 
    ModelInput
  [NearestModelName](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-nearestmodelname): String
  [ProductId](#cfn-sagemaker-modelpackage-modelpackagecontainerdefinition-productid): String

Properties
ContainerHostname 
The DNS host name for the Docker container.
Required: No
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Some interruptions
Environment 
The environment variables to set in the Docker container. Each key and value in the Environment string to string map can have length of up to 1024. We support up to 16 entries in the map.
Required: No
Type: Map of String
Update requires: Some interruptions
Framework 
The machine learning framework of the model package container image.
Required: No
Type: String
Update requires: Some interruptions
FrameworkVersion 
The framework version of the Model Package Container Image.
Required: No
Type: String
Minimum: 3
Maximum: 10
Pattern: [0-9]\.[A-Za-z0-9.-]+
Update requires: Some interruptions
Image 
The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
If you are using your own custom algorithm instead of an algorithm provided by SageMaker, the inference code must meet SageMaker requirements. SageMaker supports both registry/repository[:tag] and registry/repository[@digest] image path formats. For more information, see Using Your Own Algorithms with Amazon SageMaker.
Required: Yes
Type: String
Maximum: 255
Pattern: [\S]+
Update requires: Some interruptions
ImageDigest 
An MD5 hash of the training algorithm that identifies the Docker image used for training.
Required: No
Type: String
Maximum: 72
Pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
Update requires: Some interruptions
ModelDataUrl 
The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).
The model artifacts must be in an S3 bucket that is in the same region as the model package.
Required: No
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Some interruptions
ModelInput 
A structure with Model Input details.
Required: No
Type: ModelInput
Update requires: Some interruptions
NearestModelName 
The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model. You can find a list of benchmarked models by calling ListModelMetadata.
Required: No
Type: String
Update requires: Some interruptions
ProductId 
The AWS Marketplace product ID of the model package.
Required: No
Type: String
Maximum: 256
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
Update requires: Some interruptions

AWS::SageMaker::ModelPackage ModelPackageStatusDetails
Specifies the validation and image scan statuses of the model package.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ImageScanStatuses](#cfn-sagemaker-modelpackage-modelpackagestatusdetails-imagescanstatuses)" : [ ModelPackageStatusItem, ... ],
  "[ValidationStatuses](#cfn-sagemaker-modelpackage-modelpackagestatusdetails-validationstatuses)" : [ ModelPackageStatusItem, ... ]
}

YAML

  [ImageScanStatuses](#cfn-sagemaker-modelpackage-modelpackagestatusdetails-imagescanstatuses): 
    - ModelPackageStatusItem
  [ValidationStatuses](#cfn-sagemaker-modelpackage-modelpackagestatusdetails-validationstatuses): 
    - ModelPackageStatusItem

Properties
ImageScanStatuses 
The status of the scan of the Docker image container for the model package.
Required: No
Type: List of ModelPackageStatusItem
Update requires: No interruption
ValidationStatuses 
The validation status of the model package.
Required: Yes
Type: List of ModelPackageStatusItem
Update requires: No interruption

AWS::SageMaker::ModelPackage ModelPackageStatusItem
Represents the overall status of a model package.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[FailureReason](#cfn-sagemaker-modelpackage-modelpackagestatusitem-failurereason)" : String,
  "[Name](#cfn-sagemaker-modelpackage-modelpackagestatusitem-name)" : String,
  "[Status](#cfn-sagemaker-modelpackage-modelpackagestatusitem-status)" : String
}

YAML

  [FailureReason](#cfn-sagemaker-modelpackage-modelpackagestatusitem-failurereason): String
  [Name](#cfn-sagemaker-modelpackage-modelpackagestatusitem-name): String
  [Status](#cfn-sagemaker-modelpackage-modelpackagestatusitem-status): String

Properties
FailureReason 
if the overall status is Failed, the reason for the failure.
Required: No
Type: String
Update requires: No interruption
Name 
The name of the model package for which the overall status is being reported.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: No interruption
Status 
The current status.
Required: Yes
Type: String
Allowed values: Completed | Failed | InProgress | NotStarted
Update requires: No interruption

AWS::SageMaker::ModelPackage ModelQuality
Model quality statistics and constraints.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Constraints](#cfn-sagemaker-modelpackage-modelquality-constraints)" : MetricsSource,
  "[Statistics](#cfn-sagemaker-modelpackage-modelquality-statistics)" : MetricsSource
}

YAML

  [Constraints](#cfn-sagemaker-modelpackage-modelquality-constraints): 
    MetricsSource
  [Statistics](#cfn-sagemaker-modelpackage-modelquality-statistics): 
    MetricsSource

Properties
Constraints 
Model quality constraints.
Required: No
Type: MetricsSource
Update requires: Replacement
Statistics 
Model quality statistics.
Required: No
Type: MetricsSource
Update requires: Replacement

AWS::SageMaker::ModelPackage S3DataSource
Describes the S3 data source.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3DataType](#cfn-sagemaker-modelpackage-s3datasource-s3datatype)" : String,
  "[S3Uri](#cfn-sagemaker-modelpackage-s3datasource-s3uri)" : String
}

YAML

  [S3DataType](#cfn-sagemaker-modelpackage-s3datasource-s3datatype): String
  [S3Uri](#cfn-sagemaker-modelpackage-s3datasource-s3uri): String

Properties
S3DataType 
If you choose S3Prefix, S3Uri identifies a key name prefix. SageMaker uses all objects that match the specified key name prefix for model training.
If you choose ManifestFile, S3Uri identifies an object that is a manifest file containing a list of object keys that you want SageMaker to use for model training.
If you choose AugmentedManifestFile, S3Uri identifies an object that is an augmented manifest file in JSON lines format. This file contains the data you want to use for model training. AugmentedManifestFile can only be used if the Channel's input mode is Pipe.
Required: Yes
Type: String
Allowed values: AugmentedManifestFile | ManifestFile | S3Prefix
Update requires: Replacement
S3Uri 
Depending on the value specified for the S3DataType, identifies either a key name prefix or a manifest. For example:
+  A key name prefix might look like this: s3://bucketname/exampleprefix 
+  A manifest might look like this: s3://bucketname/example.manifest 
A manifest is an S3 object which is a JSON file consisting of an array of elements. The first element is a prefix which is followed by one or more suffixes. SageMaker appends the suffix elements to the prefix to get a full set of S3Uri. Note that the prefix must be a valid non-empty S3Uri that precludes users from specifying a manifest whose individual S3Uri is sourced from different S3 buckets.
The following code example shows a valid manifest format: 
[ {"prefix": "s3://customer_bucket/some/prefix/"}, 
"relative/path/to/custdata-1", 
"relative/path/custdata-2", 
... 
"relative/path/custdata-N" 
] 
This JSON is equivalent to the following S3Uri list:
s3://customer_bucket/some/prefix/relative/path/to/custdata-1 
s3://customer_bucket/some/prefix/relative/path/custdata-2 
... 
s3://customer_bucket/some/prefix/relative/path/custdata-N 
The complete set of S3Uri in this manifest is the input data for the channel for this data source. The object that each S3Uri points to must be readable by the IAM role that SageMaker uses to perform tasks on your behalf. 
Required: Yes
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement

AWS::SageMaker::ModelPackage SourceAlgorithm
Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[AlgorithmName](#cfn-sagemaker-modelpackage-sourcealgorithm-algorithmname)" : String,
  "[ModelDataUrl](#cfn-sagemaker-modelpackage-sourcealgorithm-modeldataurl)" : String
}

YAML

  [AlgorithmName](#cfn-sagemaker-modelpackage-sourcealgorithm-algorithmname): String
  [ModelDataUrl](#cfn-sagemaker-modelpackage-sourcealgorithm-modeldataurl): String

Properties
AlgorithmName 
The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
Required: Yes
Type: String
Minimum: 1
Maximum: 170
Pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$
Update requires: Replacement
ModelDataUrl 
The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).
The model artifacts must be in an S3 bucket that is in the same region as the algorithm.
Required: No
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement

AWS::SageMaker::ModelPackage SourceAlgorithmSpecification
A list of algorithms that were used to create a model package.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[SourceAlgorithms](#cfn-sagemaker-modelpackage-sourcealgorithmspecification-sourcealgorithms)" : [ SourceAlgorithm, ... ]
}

YAML

  [SourceAlgorithms](#cfn-sagemaker-modelpackage-sourcealgorithmspecification-sourcealgorithms): 
    - SourceAlgorithm

Properties
SourceAlgorithms 
A list of the algorithms that were used to create a model package.
Required: Yes
Type: List of SourceAlgorithm
Maximum: 1
Update requires: Replacement

AWS::SageMaker::ModelPackage TransformInput
Describes the input source of a transform job and the way the transform job consumes it.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CompressionType](#cfn-sagemaker-modelpackage-transforminput-compressiontype)" : String,
  "[ContentType](#cfn-sagemaker-modelpackage-transforminput-contenttype)" : String,
  "[DataSource](#cfn-sagemaker-modelpackage-transforminput-datasource)" : DataSource,
  "[SplitType](#cfn-sagemaker-modelpackage-transforminput-splittype)" : String
}

YAML

  [CompressionType](#cfn-sagemaker-modelpackage-transforminput-compressiontype): String
  [ContentType](#cfn-sagemaker-modelpackage-transforminput-contenttype): String
  [DataSource](#cfn-sagemaker-modelpackage-transforminput-datasource): 
    DataSource
  [SplitType](#cfn-sagemaker-modelpackage-transforminput-splittype): String

Properties
CompressionType 
If your transform data is compressed, specify the compression type. Amazon SageMaker automatically decompresses the data for the transform job accordingly. The default value is None.
Required: No
Type: String
Allowed values: Gzip | None
Update requires: Replacement
ContentType 
The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.
Required: No
Type: String
Maximum: 256
Pattern: .*
Update requires: Replacement
DataSource 
Describes the location of the channel data, which is, the S3 location of the input data that the model can consume.
Required: Yes
Type: DataSource
Update requires: Replacement
SplitType 
The method to use to split the transform job's data files into smaller batches. Splitting is necessary when the total size of each object is too large to fit in a single request. You can also use data splitting to improve performance by processing multiple concurrent mini-batches. The default value for SplitType is None, which indicates that input data files are not split, and request payloads contain the entire contents of an input object. Set the value of this parameter to Line to split records on a newline character boundary. SplitType also supports a number of record-oriented binary data formats. Currently, the supported record formats are:
+ RecordIO
+ TFRecord
When splitting is enabled, the size of a mini-batch depends on the values of the BatchStrategy and MaxPayloadInMB parameters. When the value of BatchStrategy is MultiRecord, Amazon SageMaker sends the maximum number of records in each request, up to the MaxPayloadInMB limit. If the value of BatchStrategy is SingleRecord, Amazon SageMaker sends individual records in each request.
Some data formats represent a record as a binary payload wrapped with extra padding bytes. When splitting is applied to a binary data format, padding is removed if the value of BatchStrategy is set to SingleRecord. Padding is not removed if the value of BatchStrategy is set to MultiRecord.
For more information about RecordIO, see Create a Dataset Using RecordIO in the MXNet documentation. For more information about TFRecord, see Consuming TFRecord data in the TensorFlow documentation.
Required: No
Type: String
Allowed values: Line | None | RecordIO | TFRecord
Update requires: Replacement

AWS::SageMaker::ModelPackage TransformJobDefinition
Defines the input needed to run a transform job using the inference specification specified in the algorithm.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[BatchStrategy](#cfn-sagemaker-modelpackage-transformjobdefinition-batchstrategy)" : String,
  "[Environment](#cfn-sagemaker-modelpackage-transformjobdefinition-environment)" : {Key : Value, ...},
  "[MaxConcurrentTransforms](#cfn-sagemaker-modelpackage-transformjobdefinition-maxconcurrenttransforms)" : Integer,
  "[MaxPayloadInMB](#cfn-sagemaker-modelpackage-transformjobdefinition-maxpayloadinmb)" : Integer,
  "[TransformInput](#cfn-sagemaker-modelpackage-transformjobdefinition-transforminput)" : TransformInput,
  "[TransformOutput](#cfn-sagemaker-modelpackage-transformjobdefinition-transformoutput)" : TransformOutput,
  "[TransformResources](#cfn-sagemaker-modelpackage-transformjobdefinition-transformresources)" : TransformResources
}

YAML

  [BatchStrategy](#cfn-sagemaker-modelpackage-transformjobdefinition-batchstrategy): String
  [Environment](#cfn-sagemaker-modelpackage-transformjobdefinition-environment): 
    Key : Value
  [MaxConcurrentTransforms](#cfn-sagemaker-modelpackage-transformjobdefinition-maxconcurrenttransforms): Integer
  [MaxPayloadInMB](#cfn-sagemaker-modelpackage-transformjobdefinition-maxpayloadinmb): Integer
  [TransformInput](#cfn-sagemaker-modelpackage-transformjobdefinition-transforminput): 
    TransformInput
  [TransformOutput](#cfn-sagemaker-modelpackage-transformjobdefinition-transformoutput): 
    TransformOutput
  [TransformResources](#cfn-sagemaker-modelpackage-transformjobdefinition-transformresources): 
    TransformResources

Properties
BatchStrategy 
A string that determines the number of records included in a single mini-batch.
SingleRecord means only one record is used per mini-batch. MultiRecord means a mini-batch is set to contain as many records that can fit within the MaxPayloadInMB limit.
Required: No
Type: String
Allowed values: MultiRecord | SingleRecord
Update requires: Replacement
Environment 
The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.
Required: No
Type: Map of String
Update requires: Replacement
MaxConcurrentTransforms 
The maximum number of parallel requests that can be sent to each instance in a transform job. The default value is 1.
Required: No
Type: Integer
Minimum: 0
Update requires: Replacement
MaxPayloadInMB 
The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata).
Required: No
Type: Integer
Minimum: 0
Update requires: Replacement
TransformInput 
A description of the input source and the way the transform job consumes it.
Required: Yes
Type: TransformInput
Update requires: Replacement
TransformOutput 
Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.
Required: Yes
Type: TransformOutput
Update requires: Replacement
TransformResources 
Identifies the ML compute instances for the transform job.
Required: Yes
Type: TransformResources
Update requires: Replacement

AWS::SageMaker::ModelPackage TransformOutput
Describes the results of a transform job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Accept](#cfn-sagemaker-modelpackage-transformoutput-accept)" : String,
  "[AssembleWith](#cfn-sagemaker-modelpackage-transformoutput-assemblewith)" : String,
  "[KmsKeyId](#cfn-sagemaker-modelpackage-transformoutput-kmskeyid)" : String,
  "[S3OutputPath](#cfn-sagemaker-modelpackage-transformoutput-s3outputpath)" : String
}

YAML

  [Accept](#cfn-sagemaker-modelpackage-transformoutput-accept): String
  [AssembleWith](#cfn-sagemaker-modelpackage-transformoutput-assemblewith): String
  [KmsKeyId](#cfn-sagemaker-modelpackage-transformoutput-kmskeyid): String
  [S3OutputPath](#cfn-sagemaker-modelpackage-transformoutput-s3outputpath): String

Properties
Accept 
The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
Required: No
Type: String
Maximum: 256
Pattern: .*
Update requires: Replacement
AssembleWith 
Defines how to assemble the results of the transform job as a single S3 object. Choose a format that is most convenient to you. To concatenate the results in binary format, specify None. To add a newline character at the end of every transformed record, specify Line.
Required: No
Type: String
Allowed values: Line | None
Update requires: Replacement
KmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. The KmsKeyId can be any of the following formats:
+ Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab 
+ Key ARN: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab 
+ Alias name: alias/ExampleAlias 
+ Alias name ARN: arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias 
If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account. For more information, see KMS-Managed Encryption Keys in the Amazon Simple Storage Service Developer Guide.
The KMS key policy must grant permission to the IAM role that you specify in your CreateModel request. For more information, see Using Key Policies in AWS KMS in the * AWS Key Management Service Developer Guide.
*Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: Replacement
S3OutputPath 
The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job. For example, s3://bucket-name/key-name-prefix.
For every S3 object used as input for the transform job, batch transform stores the transformed data with an .out suffix in a corresponding subfolder in the location in the output prefix. For example, for the input data stored at s3://bucket-name/input-name-prefix/dataset01/data.csv, batch transform stores the transformed data at s3://bucket-name/output-name-prefix/input-name-prefix/data.csv.out. Batch transform doesn't upload partially processed objects. For an input S3 object that contains multiple records, it creates an .out file only if the transform job succeeds on the entire file. When the input contains multiple S3 objects, the batch transform job processes the listed S3 objects and uploads only the output for successfully processed objects. If any object fails in the transform job batch transform marks the job as failed to prompt investigation.
Required: Yes
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement

AWS::SageMaker::ModelPackage TransformResources
Describes the resources, including ML instance types and ML instance count, to use for transform job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InstanceCount](#cfn-sagemaker-modelpackage-transformresources-instancecount)" : Integer,
  "[InstanceType](#cfn-sagemaker-modelpackage-transformresources-instancetype)" : String,
  "[VolumeKmsKeyId](#cfn-sagemaker-modelpackage-transformresources-volumekmskeyid)" : String
}

YAML

  [InstanceCount](#cfn-sagemaker-modelpackage-transformresources-instancecount): Integer
  [InstanceType](#cfn-sagemaker-modelpackage-transformresources-instancetype): String
  [VolumeKmsKeyId](#cfn-sagemaker-modelpackage-transformresources-volumekmskeyid): String

Properties
InstanceCount 
The number of ML compute instances to use in the transform job. The default value is 1, and the maximum is 100. For distributed transform jobs, specify a value greater than 1.
Required: Yes
Type: Integer
Minimum: 1
Update requires: Replacement
InstanceType 
The ML compute instance type for the transform job. If you are using built-in algorithms to transform moderately sized datasets, we recommend using ml.m4.xlarge or ml.m5.largeinstance types.
Required: Yes
Type: String
Allowed values: ml.c4.2xlarge | ml.c4.4xlarge | ml.c4.8xlarge | ml.c4.xlarge | ml.c5.18xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.m4.10xlarge | ml.m4.16xlarge | ml.m4.2xlarge | ml.m4.4xlarge | ml.m4.xlarge | ml.m5.12xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.large | ml.m5.xlarge | ml.p2.16xlarge | ml.p2.8xlarge | ml.p2.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge
Update requires: Replacement
VolumeKmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt model data on the storage volume attached to the ML compute instance(s) that run the batch transform job.
Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can't request a VolumeKmsKeyId when using an instance type with local storage.
For a list of instance types that support local instance storage, see Instance Store Volumes.
For more information about local instance storage encryption, see SSD Instance Store Volumes.
 The VolumeKmsKeyId can be any of the following formats:
+ Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab 
+ Key ARN: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab 
+ Alias name: alias/ExampleAlias 
+ Alias name ARN: arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: Replacement

AWS::SageMaker::ModelPackage UserContext
Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DomainId](#cfn-sagemaker-modelpackage-usercontext-domainid)" : String,
  "[UserProfileArn](#cfn-sagemaker-modelpackage-usercontext-userprofilearn)" : String,
  "[UserProfileName](#cfn-sagemaker-modelpackage-usercontext-userprofilename)" : String
}

YAML

  [DomainId](#cfn-sagemaker-modelpackage-usercontext-domainid): String
  [UserProfileArn](#cfn-sagemaker-modelpackage-usercontext-userprofilearn): String
  [UserProfileName](#cfn-sagemaker-modelpackage-usercontext-userprofilename): String

Properties
DomainId 
The domain associated with the user.
Required: No
Type: String
Update requires: No interruption
UserProfileArn 
The Amazon Resource Name (ARN) of the user's profile.
Required: No
Type: String
Update requires: No interruption
UserProfileName 
The name of the user's profile.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::ModelPackage ValidationProfile
Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package.
The data provided in the validation profile is made available to your buyers on AWS Marketplace.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ProfileName](#cfn-sagemaker-modelpackage-validationprofile-profilename)" : String,
  "[TransformJobDefinition](#cfn-sagemaker-modelpackage-validationprofile-transformjobdefinition)" : TransformJobDefinition
}

YAML

  [ProfileName](#cfn-sagemaker-modelpackage-validationprofile-profilename): String
  [TransformJobDefinition](#cfn-sagemaker-modelpackage-validationprofile-transformjobdefinition): 
    TransformJobDefinition

Properties
ProfileName 
The name of the profile for the model package.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: Replacement
TransformJobDefinition 
The TransformJobDefinition object that describes the transform job used for the validation of the model package.
Required: Yes
Type: TransformJobDefinition
Update requires: Replacement

AWS::SageMaker::ModelPackage ValidationSpecification
Specifies batch transform jobs that SageMaker runs to validate your model package.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ValidationProfiles](#cfn-sagemaker-modelpackage-validationspecification-validationprofiles)" : [ ValidationProfile, ... ],
  "[ValidationRole](#cfn-sagemaker-modelpackage-validationspecification-validationrole)" : String
}

YAML

  [ValidationProfiles](#cfn-sagemaker-modelpackage-validationspecification-validationprofiles): 
    - ValidationProfile
  [ValidationRole](#cfn-sagemaker-modelpackage-validationspecification-validationrole): String

Properties
ValidationProfiles 
An array of ModelPackageValidationProfile objects, each of which specifies a batch transform job that SageMaker runs to validate your model package.
Required: Yes
Type: List of ValidationProfile
Maximum: 1
Update requires: Replacement
ValidationRole 
The IAM roles to be used for the validation of the model package.
Required: Yes
Type: String
Minimum: 20
Maximum: 2048
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition BatchTransformInput
The BatchTransformInput property type specifies Property description not available. for an AWS::SageMaker::ModelQualityJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DataCapturedDestinationS3Uri](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-datacaptureddestinations3uri)" : String,
  "[DatasetFormat](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-datasetformat)" : DatasetFormat,
  "[EndTimeOffset](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-endtimeoffset)" : String,
  "[InferenceAttribute](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-inferenceattribute)" : String,
  "[LocalPath](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-localpath)" : String,
  "[ProbabilityAttribute](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-probabilityattribute)" : String,
  "[ProbabilityThresholdAttribute](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-probabilitythresholdattribute)" : Double,
  "[S3DataDistributionType](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-s3datadistributiontype)" : String,
  "[S3InputMode](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-s3inputmode)" : String,
  "[StartTimeOffset](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-starttimeoffset)" : String
}

YAML

  [DataCapturedDestinationS3Uri](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-datacaptureddestinations3uri): String
  [DatasetFormat](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-datasetformat): 
    DatasetFormat
  [EndTimeOffset](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-endtimeoffset): String
  [InferenceAttribute](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-inferenceattribute): String
  [LocalPath](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-localpath): String
  [ProbabilityAttribute](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-probabilityattribute): String
  [ProbabilityThresholdAttribute](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-probabilitythresholdattribute): Double
  [S3DataDistributionType](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-s3datadistributiontype): String
  [S3InputMode](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-s3inputmode): String
  [StartTimeOffset](#cfn-sagemaker-modelqualityjobdefinition-batchtransforminput-starttimeoffset): String

Properties
DataCapturedDestinationS3Uri 
Property description not available.
Required: Yes
Type: String
Update requires: Replacement
DatasetFormat 
Property description not available.
Required: Yes
Type: DatasetFormat
Update requires: Replacement
EndTimeOffset 
Property description not available.
Required: No
Type: String
Update requires: Replacement
InferenceAttribute 
Property description not available.
Required: No
Type: String
Update requires: Replacement
LocalPath 
Property description not available.
Required: Yes
Type: String
Update requires: Replacement
ProbabilityAttribute 
Property description not available.
Required: No
Type: String
Update requires: Replacement
ProbabilityThresholdAttribute 
Property description not available.
Required: No
Type: Double
Update requires: Replacement
S3DataDistributionType 
Property description not available.
Required: No
Type: String
Update requires: Replacement
S3InputMode 
Property description not available.
Required: No
Type: String
Update requires: Replacement
StartTimeOffset 
Property description not available.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition ClusterConfig
The configuration for the cluster of resources used to run the processing job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InstanceCount](#cfn-sagemaker-modelqualityjobdefinition-clusterconfig-instancecount)" : Integer,
  "[InstanceType](#cfn-sagemaker-modelqualityjobdefinition-clusterconfig-instancetype)" : String,
  "[VolumeKmsKeyId](#cfn-sagemaker-modelqualityjobdefinition-clusterconfig-volumekmskeyid)" : String,
  "[VolumeSizeInGB](#cfn-sagemaker-modelqualityjobdefinition-clusterconfig-volumesizeingb)" : Integer
}

YAML

  [InstanceCount](#cfn-sagemaker-modelqualityjobdefinition-clusterconfig-instancecount): Integer
  [InstanceType](#cfn-sagemaker-modelqualityjobdefinition-clusterconfig-instancetype): String
  [VolumeKmsKeyId](#cfn-sagemaker-modelqualityjobdefinition-clusterconfig-volumekmskeyid): String
  [VolumeSizeInGB](#cfn-sagemaker-modelqualityjobdefinition-clusterconfig-volumesizeingb): Integer

Properties
InstanceCount 
The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
Required: Yes
Type: Integer
Update requires: Replacement
InstanceType 
The ML compute instance type for the processing job.
Required: Yes
Type: String
Update requires: Replacement
VolumeKmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
Required: No
Type: String
Update requires: Replacement
VolumeSizeInGB 
The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
Required: Yes
Type: Integer
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition ConstraintsResource
The constraints resource for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Uri](#cfn-sagemaker-modelqualityjobdefinition-constraintsresource-s3uri)" : String
}

YAML

  [S3Uri](#cfn-sagemaker-modelqualityjobdefinition-constraintsresource-s3uri): String

Properties
S3Uri 
The Amazon S3 URI for the constraints resource.
Required: No
Type: String
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition Csv
The Csv property type specifies Property description not available. for an AWS::SageMaker::ModelQualityJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Header](#cfn-sagemaker-modelqualityjobdefinition-csv-header)" : Boolean
}

YAML

  [Header](#cfn-sagemaker-modelqualityjobdefinition-csv-header): Boolean

Properties
Header 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition DatasetFormat
The DatasetFormat property type specifies Property description not available. for an AWS::SageMaker::ModelQualityJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Csv](#cfn-sagemaker-modelqualityjobdefinition-datasetformat-csv)" : Csv,
  "[Json](#cfn-sagemaker-modelqualityjobdefinition-datasetformat-json)" : Json,
  "[Parquet](#cfn-sagemaker-modelqualityjobdefinition-datasetformat-parquet)" : Boolean
}

YAML

  [Csv](#cfn-sagemaker-modelqualityjobdefinition-datasetformat-csv): 
    Csv
  [Json](#cfn-sagemaker-modelqualityjobdefinition-datasetformat-json): 
    Json
  [Parquet](#cfn-sagemaker-modelqualityjobdefinition-datasetformat-parquet): Boolean

Properties
Csv 
Property description not available.
Required: No
Type: Csv
Update requires: Replacement
Json 
Property description not available.
Required: No
Type: Json
Update requires: Replacement
Parquet 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition EndpointInput
Input object for the endpoint
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EndpointName](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-endpointname)" : String,
  "[EndTimeOffset](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-endtimeoffset)" : String,
  "[InferenceAttribute](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-inferenceattribute)" : String,
  "[LocalPath](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-localpath)" : String,
  "[ProbabilityAttribute](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-probabilityattribute)" : String,
  "[ProbabilityThresholdAttribute](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-probabilitythresholdattribute)" : Double,
  "[S3DataDistributionType](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-s3datadistributiontype)" : String,
  "[S3InputMode](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-s3inputmode)" : String,
  "[StartTimeOffset](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-starttimeoffset)" : String
}

YAML

  [EndpointName](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-endpointname): String
  [EndTimeOffset](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-endtimeoffset): String
  [InferenceAttribute](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-inferenceattribute): String
  [LocalPath](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-localpath): String
  [ProbabilityAttribute](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-probabilityattribute): String
  [ProbabilityThresholdAttribute](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-probabilitythresholdattribute): Double
  [S3DataDistributionType](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-s3datadistributiontype): String
  [S3InputMode](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-s3inputmode): String
  [StartTimeOffset](#cfn-sagemaker-modelqualityjobdefinition-endpointinput-starttimeoffset): String

Properties
EndpointName 
An endpoint in customer's account which has enabled DataCaptureConfig enabled.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
EndTimeOffset 
If specified, monitoring jobs substract this time from the end time. For information about using offsets for scheduling monitoring jobs, see Schedule Model Quality Monitoring Jobs.
Required: No
Type: String
Minimum: 1
Maximum: 15
Pattern: ^.?P.*
Update requires: Replacement
InferenceAttribute 
The attribute of the input data that represents the ground truth label.
Required: No
Type: String
Update requires: Replacement
LocalPath 
Path to the filesystem where the endpoint data is available to the container.
Required: Yes
Type: String
Maximum: 256
Pattern: .*
Update requires: Replacement
ProbabilityAttribute 
In a classification problem, the attribute that represents the class probability.
Required: No
Type: String
Update requires: Replacement
ProbabilityThresholdAttribute 
The threshold for the class probability to be evaluated as a positive result.
Required: No
Type: Double
Update requires: Replacement
S3DataDistributionType 
Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to FullyReplicated
Required: No
Type: String
Allowed values: FullyReplicated | ShardedByS3Key
Update requires: Replacement
S3InputMode 
Whether the Pipe or File is used as the input mode for transferring data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
Required: No
Type: String
Allowed values: File | Pipe
Update requires: Replacement
StartTimeOffset 
If specified, monitoring jobs substract this time from the start time. For information about using offsets for scheduling monitoring jobs, see Schedule Model Quality Monitoring Jobs.
Required: No
Type: String
Minimum: 1
Maximum: 15
Pattern: ^.?P.*
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition Json
The Json property type specifies Property description not available. for an AWS::SageMaker::ModelQualityJobDefinition.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Line](#cfn-sagemaker-modelqualityjobdefinition-json-line)" : Boolean
}

YAML

  [Line](#cfn-sagemaker-modelqualityjobdefinition-json-line): Boolean

Properties
Line 
Property description not available.
Required: No
Type: Boolean
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition ModelQualityAppSpecification
Container image configuration object for the monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ContainerArguments](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-containerarguments)" : [ String, ... ],
  "[ContainerEntrypoint](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-containerentrypoint)" : [ String, ... ],
  "[Environment](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-environment)" : {Key : Value, ...},
  "[ImageUri](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-imageuri)" : String,
  "[PostAnalyticsProcessorSourceUri](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-postanalyticsprocessorsourceuri)" : String,
  "[ProblemType](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-problemtype)" : String,
  "[RecordPreprocessorSourceUri](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-recordpreprocessorsourceuri)" : String
}

YAML

  [ContainerArguments](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-containerarguments): 
    - String
  [ContainerEntrypoint](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-containerentrypoint): 
    - String
  [Environment](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-environment): 
    Key : Value
  [ImageUri](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-imageuri): String
  [PostAnalyticsProcessorSourceUri](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-postanalyticsprocessorsourceuri): String
  [ProblemType](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-problemtype): String
  [RecordPreprocessorSourceUri](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification-recordpreprocessorsourceuri): String

Properties
ContainerArguments 
An array of arguments for the container used to run the monitoring job.
Required: No
Type: List of String
Maximum: 50
Update requires: Replacement
ContainerEntrypoint 
Specifies the entrypoint for a container that the monitoring job runs.
Required: No
Type: List of String
Maximum: 100
Update requires: Replacement
Environment 
Sets the environment variables in the container that the monitoring job runs.
Required: No
Type: Map of String
Update requires: Replacement
ImageUri 
The address of the container image that the monitoring job runs.
Required: Yes
Type: String
Maximum: 255
Pattern: .*
Update requires: Replacement
PostAnalyticsProcessorSourceUri 
An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
Required: No
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement
ProblemType 
The machine learning problem type of the model that the monitoring job monitors.
Required: Yes
Type: String
Allowed values: BinaryClassification | MulticlassClassification | Regression
Update requires: Replacement
RecordPreprocessorSourceUri 
An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers.
Required: No
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition ModelQualityBaselineConfig
Configuration for monitoring constraints and monitoring statistics. These baseline resources are compared against the results of the current job from the series of jobs scheduled to collect data periodically.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[BaseliningJobName](#cfn-sagemaker-modelqualityjobdefinition-modelqualitybaselineconfig-baseliningjobname)" : String,
  "[ConstraintsResource](#cfn-sagemaker-modelqualityjobdefinition-modelqualitybaselineconfig-constraintsresource)" : ConstraintsResource
}

YAML

  [BaseliningJobName](#cfn-sagemaker-modelqualityjobdefinition-modelqualitybaselineconfig-baseliningjobname): String
  [ConstraintsResource](#cfn-sagemaker-modelqualityjobdefinition-modelqualitybaselineconfig-constraintsresource): 
    ConstraintsResource

Properties
BaseliningJobName 
The name of the job that performs baselining for the monitoring job.
Required: No
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
ConstraintsResource 
The constraints resource for a monitoring job.
Required: No
Type: ConstraintsResource
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition ModelQualityJobInput
The input for the model quality monitoring job. Currently endponts are supported for input for model quality monitoring jobs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[BatchTransformInput](#cfn-sagemaker-modelqualityjobdefinition-modelqualityjobinput-batchtransforminput)" : BatchTransformInput,
  "[EndpointInput](#cfn-sagemaker-modelqualityjobdefinition-modelqualityjobinput-endpointinput)" : EndpointInput,
  "[GroundTruthS3Input](#cfn-sagemaker-modelqualityjobdefinition-modelqualityjobinput-groundtruths3input)" : MonitoringGroundTruthS3Input
}

YAML

  [BatchTransformInput](#cfn-sagemaker-modelqualityjobdefinition-modelqualityjobinput-batchtransforminput): 
    BatchTransformInput
  [EndpointInput](#cfn-sagemaker-modelqualityjobdefinition-modelqualityjobinput-endpointinput): 
    EndpointInput
  [GroundTruthS3Input](#cfn-sagemaker-modelqualityjobdefinition-modelqualityjobinput-groundtruths3input): 
    MonitoringGroundTruthS3Input

Properties
BatchTransformInput 
Property description not available.
Required: No
Type: BatchTransformInput
Update requires: Replacement
EndpointInput 
Input object for the endpoint
Required: No
Type: EndpointInput
Update requires: Replacement
GroundTruthS3Input 
The ground truth label provided for the model.
Required: Yes
Type: MonitoringGroundTruthS3Input
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition MonitoringGroundTruthS3Input
The ground truth labels for the dataset used for the monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Uri](#cfn-sagemaker-modelqualityjobdefinition-monitoringgroundtruths3input-s3uri)" : String
}

YAML

  [S3Uri](#cfn-sagemaker-modelqualityjobdefinition-monitoringgroundtruths3input-s3uri): String

Properties
S3Uri 
The address of the Amazon S3 location of the ground truth labels.
Required: Yes
Type: String
Maximum: 512
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition MonitoringOutput
The output object for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Output](#cfn-sagemaker-modelqualityjobdefinition-monitoringoutput-s3output)" : S3Output
}

YAML

  [S3Output](#cfn-sagemaker-modelqualityjobdefinition-monitoringoutput-s3output): 
    S3Output

Properties
S3Output 
The Amazon S3 storage location where the results of a monitoring job are saved.
Required: Yes
Type: S3Output
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition MonitoringOutputConfig
The output configuration for monitoring jobs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[KmsKeyId](#cfn-sagemaker-modelqualityjobdefinition-monitoringoutputconfig-kmskeyid)" : String,
  "[MonitoringOutputs](#cfn-sagemaker-modelqualityjobdefinition-monitoringoutputconfig-monitoringoutputs)" : [ MonitoringOutput, ... ]
}

YAML

  [KmsKeyId](#cfn-sagemaker-modelqualityjobdefinition-monitoringoutputconfig-kmskeyid): String
  [MonitoringOutputs](#cfn-sagemaker-modelqualityjobdefinition-monitoringoutputconfig-monitoringoutputs): 
    - MonitoringOutput

Properties
KmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: Replacement
MonitoringOutputs 
Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
Required: Yes
Type: List of MonitoringOutput
Maximum: 1
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition MonitoringResources
Identifies the resources to deploy for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ClusterConfig](#cfn-sagemaker-modelqualityjobdefinition-monitoringresources-clusterconfig)" : ClusterConfig
}

YAML

  [ClusterConfig](#cfn-sagemaker-modelqualityjobdefinition-monitoringresources-clusterconfig): 
    ClusterConfig

Properties
ClusterConfig 
The configuration for the cluster resources used to run the processing job.
Required: Yes
Type: ClusterConfig
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition NetworkConfig
Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EnableInterContainerTrafficEncryption](#cfn-sagemaker-modelqualityjobdefinition-networkconfig-enableintercontainertrafficencryption)" : Boolean,
  "[EnableNetworkIsolation](#cfn-sagemaker-modelqualityjobdefinition-networkconfig-enablenetworkisolation)" : Boolean,
  "[VpcConfig](#cfn-sagemaker-modelqualityjobdefinition-networkconfig-vpcconfig)" : VpcConfig
}

YAML

  [EnableInterContainerTrafficEncryption](#cfn-sagemaker-modelqualityjobdefinition-networkconfig-enableintercontainertrafficencryption): Boolean
  [EnableNetworkIsolation](#cfn-sagemaker-modelqualityjobdefinition-networkconfig-enablenetworkisolation): Boolean
  [VpcConfig](#cfn-sagemaker-modelqualityjobdefinition-networkconfig-vpcconfig): 
    VpcConfig

Properties
EnableInterContainerTrafficEncryption 
Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
Required: No
Type: Boolean
Update requires: Replacement
EnableNetworkIsolation 
Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
Required: No
Type: Boolean
Update requires: Replacement
VpcConfig 
Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
Required: No
Type: VpcConfig
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition S3Output
The Amazon S3 storage location where the results of a monitoring job are saved.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[LocalPath](#cfn-sagemaker-modelqualityjobdefinition-s3output-localpath)" : String,
  "[S3UploadMode](#cfn-sagemaker-modelqualityjobdefinition-s3output-s3uploadmode)" : String,
  "[S3Uri](#cfn-sagemaker-modelqualityjobdefinition-s3output-s3uri)" : String
}

YAML

  [LocalPath](#cfn-sagemaker-modelqualityjobdefinition-s3output-localpath): String
  [S3UploadMode](#cfn-sagemaker-modelqualityjobdefinition-s3output-s3uploadmode): String
  [S3Uri](#cfn-sagemaker-modelqualityjobdefinition-s3output-s3uri): String

Properties
LocalPath 
The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
Required: Yes
Type: String
Update requires: Replacement
S3UploadMode 
Whether to upload the results of the monitoring job continuously or after the job completes.
Required: No
Type: String
Update requires: Replacement
S3Uri 
A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
Required: Yes
Type: String
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition StoppingCondition
Specifies a limit to how long a model training job or model compilation job can run. It also specifies how long a managed spot training job has to complete. When the job reaches the time limit, SageMaker ends the training or compilation job. Use this API to cap model training costs.
To stop a training job, SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. 
The training algorithms provided by SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with CreateModel.
Note
The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MaxRuntimeInSeconds](#cfn-sagemaker-modelqualityjobdefinition-stoppingcondition-maxruntimeinseconds)" : Integer
}

YAML

  [MaxRuntimeInSeconds](#cfn-sagemaker-modelqualityjobdefinition-stoppingcondition-maxruntimeinseconds): Integer

Properties
MaxRuntimeInSeconds 
The maximum length of time, in seconds, that a training or compilation job can run before it is stopped.
For compilation jobs, if the job does not complete during this time, a TimeOut error is generated. We recommend starting with 900 seconds and increasing as necessary based on your model.
For all other jobs, if the job does not complete during this time, SageMaker ends the job. When RetryStrategy is specified in the job request, MaxRuntimeInSeconds specifies the maximum time for all of the attempts in total, not each individual attempt. The default value is 1 day. The maximum value is 28 days.
The maximum time that a TrainingJob can run in total, including any time spent publishing metrics or archiving and uploading models after it has been stopped, is 30 days.
Required: Yes
Type: Integer
Minimum: 1
Update requires: Replacement

AWS::SageMaker::ModelQualityJobDefinition VpcConfig
Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud and Protect Training Jobs by Using an Amazon Virtual Private Cloud. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[SecurityGroupIds](#cfn-sagemaker-modelqualityjobdefinition-vpcconfig-securitygroupids)" : [ String, ... ],
  "[Subnets](#cfn-sagemaker-modelqualityjobdefinition-vpcconfig-subnets)" : [ String, ... ]
}

YAML

  [SecurityGroupIds](#cfn-sagemaker-modelqualityjobdefinition-vpcconfig-securitygroupids): 
    - String
  [Subnets](#cfn-sagemaker-modelqualityjobdefinition-vpcconfig-subnets): 
    - String

Properties
SecurityGroupIds 
The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
Required: Yes
Type: List of String
Maximum: 5
Update requires: Replacement
Subnets 
The ID of the subnets in the VPC to which you want to connect your training job or model. For information about the availability of specific instance types, see Supported Instance Types and Availability Zones.
Required: Yes
Type: List of String
Maximum: 16
Update requires: Replacement

AWS::SageMaker::MonitoringSchedule BaselineConfig
Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ConstraintsResource](#cfn-sagemaker-monitoringschedule-baselineconfig-constraintsresource)" : ConstraintsResource,
  "[StatisticsResource](#cfn-sagemaker-monitoringschedule-baselineconfig-statisticsresource)" : StatisticsResource
}

YAML

  [ConstraintsResource](#cfn-sagemaker-monitoringschedule-baselineconfig-constraintsresource): 
    ConstraintsResource
  [StatisticsResource](#cfn-sagemaker-monitoringschedule-baselineconfig-statisticsresource): 
    StatisticsResource

Properties
ConstraintsResource 
The Amazon S3 URI for the constraints resource.
Required: No
Type: ConstraintsResource
Update requires: No interruption
StatisticsResource 
The baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
Required: No
Type: StatisticsResource
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule BatchTransformInput
The BatchTransformInput property type specifies Property description not available. for an AWS::SageMaker::MonitoringSchedule.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DataCapturedDestinationS3Uri](#cfn-sagemaker-monitoringschedule-batchtransforminput-datacaptureddestinations3uri)" : String,
  "[DatasetFormat](#cfn-sagemaker-monitoringschedule-batchtransforminput-datasetformat)" : DatasetFormat,
  "[LocalPath](#cfn-sagemaker-monitoringschedule-batchtransforminput-localpath)" : String,
  "[S3DataDistributionType](#cfn-sagemaker-monitoringschedule-batchtransforminput-s3datadistributiontype)" : String,
  "[S3InputMode](#cfn-sagemaker-monitoringschedule-batchtransforminput-s3inputmode)" : String
}

YAML

  [DataCapturedDestinationS3Uri](#cfn-sagemaker-monitoringschedule-batchtransforminput-datacaptureddestinations3uri): String
  [DatasetFormat](#cfn-sagemaker-monitoringschedule-batchtransforminput-datasetformat): 
    DatasetFormat
  [LocalPath](#cfn-sagemaker-monitoringschedule-batchtransforminput-localpath): String
  [S3DataDistributionType](#cfn-sagemaker-monitoringschedule-batchtransforminput-s3datadistributiontype): String
  [S3InputMode](#cfn-sagemaker-monitoringschedule-batchtransforminput-s3inputmode): String

Properties
DataCapturedDestinationS3Uri 
Property description not available.
Required: Yes
Type: String
Update requires: No interruption
DatasetFormat 
Property description not available.
Required: Yes
Type: DatasetFormat
Update requires: No interruption
LocalPath 
Property description not available.
Required: Yes
Type: String
Update requires: No interruption
S3DataDistributionType 
Property description not available.
Required: No
Type: String
Update requires: No interruption
S3InputMode 
Property description not available.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule ClusterConfig
Configuration for the cluster used to run model monitoring jobs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InstanceCount](#cfn-sagemaker-monitoringschedule-clusterconfig-instancecount)" : Integer,
  "[InstanceType](#cfn-sagemaker-monitoringschedule-clusterconfig-instancetype)" : String,
  "[VolumeKmsKeyId](#cfn-sagemaker-monitoringschedule-clusterconfig-volumekmskeyid)" : String,
  "[VolumeSizeInGB](#cfn-sagemaker-monitoringschedule-clusterconfig-volumesizeingb)" : Integer
}

YAML

  [InstanceCount](#cfn-sagemaker-monitoringschedule-clusterconfig-instancecount): Integer
  [InstanceType](#cfn-sagemaker-monitoringschedule-clusterconfig-instancetype): String
  [VolumeKmsKeyId](#cfn-sagemaker-monitoringschedule-clusterconfig-volumekmskeyid): String
  [VolumeSizeInGB](#cfn-sagemaker-monitoringschedule-clusterconfig-volumesizeingb): Integer

Properties
InstanceCount 
The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
Required: Yes
Type: Integer
Update requires: No interruption
InstanceType 
The ML compute instance type for the processing job.
Required: Yes
Type: String
Update requires: No interruption
VolumeKmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
Required: No
Type: String
Update requires: No interruption
VolumeSizeInGB 
The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
Required: Yes
Type: Integer
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule ConstraintsResource
The Amazon S3 URI for the constraints resource.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Uri](#cfn-sagemaker-monitoringschedule-constraintsresource-s3uri)" : String
}

YAML

  [S3Uri](#cfn-sagemaker-monitoringschedule-constraintsresource-s3uri): String

Properties
S3Uri 
The Amazon S3 URI for the constraints resource.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule Csv
The Csv property type specifies Property description not available. for an AWS::SageMaker::MonitoringSchedule.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Header](#cfn-sagemaker-monitoringschedule-csv-header)" : Boolean
}

YAML

  [Header](#cfn-sagemaker-monitoringschedule-csv-header): Boolean

Properties
Header 
Property description not available.
Required: No
Type: Boolean
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule DatasetFormat
The DatasetFormat property type specifies Property description not available. for an AWS::SageMaker::MonitoringSchedule.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Csv](#cfn-sagemaker-monitoringschedule-datasetformat-csv)" : Csv,
  "[Json](#cfn-sagemaker-monitoringschedule-datasetformat-json)" : Json,
  "[Parquet](#cfn-sagemaker-monitoringschedule-datasetformat-parquet)" : Boolean
}

YAML

  [Csv](#cfn-sagemaker-monitoringschedule-datasetformat-csv): 
    Csv
  [Json](#cfn-sagemaker-monitoringschedule-datasetformat-json): 
    Json
  [Parquet](#cfn-sagemaker-monitoringschedule-datasetformat-parquet): Boolean

Properties
Csv 
Property description not available.
Required: No
Type: Csv
Update requires: No interruption
Json 
Property description not available.
Required: No
Type: Json
Update requires: No interruption
Parquet 
Property description not available.
Required: No
Type: Boolean
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule EndpointInput
Input object for the endpoint
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EndpointName](#cfn-sagemaker-monitoringschedule-endpointinput-endpointname)" : String,
  "[LocalPath](#cfn-sagemaker-monitoringschedule-endpointinput-localpath)" : String,
  "[S3DataDistributionType](#cfn-sagemaker-monitoringschedule-endpointinput-s3datadistributiontype)" : String,
  "[S3InputMode](#cfn-sagemaker-monitoringschedule-endpointinput-s3inputmode)" : String
}

YAML

  [EndpointName](#cfn-sagemaker-monitoringschedule-endpointinput-endpointname): String
  [LocalPath](#cfn-sagemaker-monitoringschedule-endpointinput-localpath): String
  [S3DataDistributionType](#cfn-sagemaker-monitoringschedule-endpointinput-s3datadistributiontype): String
  [S3InputMode](#cfn-sagemaker-monitoringschedule-endpointinput-s3inputmode): String

Properties
EndpointName 
An endpoint in customer's account which has enabled DataCaptureConfig enabled.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: No interruption
LocalPath 
Path to the filesystem where the endpoint data is available to the container.
Required: Yes
Type: String
Maximum: 256
Pattern: .*
Update requires: No interruption
S3DataDistributionType 
Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to FullyReplicated
Required: No
Type: String
Allowed values: FullyReplicated | ShardedByS3Key
Update requires: No interruption
S3InputMode 
Whether the Pipe or File is used as the input mode for transferring data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
Required: No
Type: String
Allowed values: File | Pipe
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule Json
The Json property type specifies Property description not available. for an AWS::SageMaker::MonitoringSchedule.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Line](#cfn-sagemaker-monitoringschedule-json-line)" : Boolean
}

YAML

  [Line](#cfn-sagemaker-monitoringschedule-json-line): Boolean

Properties
Line 
Property description not available.
Required: No
Type: Boolean
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule MonitoringAppSpecification
Container image configuration object for the monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ContainerArguments](#cfn-sagemaker-monitoringschedule-monitoringappspecification-containerarguments)" : [ String, ... ],
  "[ContainerEntrypoint](#cfn-sagemaker-monitoringschedule-monitoringappspecification-containerentrypoint)" : [ String, ... ],
  "[ImageUri](#cfn-sagemaker-monitoringschedule-monitoringappspecification-imageuri)" : String,
  "[PostAnalyticsProcessorSourceUri](#cfn-sagemaker-monitoringschedule-monitoringappspecification-postanalyticsprocessorsourceuri)" : String,
  "[RecordPreprocessorSourceUri](#cfn-sagemaker-monitoringschedule-monitoringappspecification-recordpreprocessorsourceuri)" : String
}

YAML

  [ContainerArguments](#cfn-sagemaker-monitoringschedule-monitoringappspecification-containerarguments): 
    - String
  [ContainerEntrypoint](#cfn-sagemaker-monitoringschedule-monitoringappspecification-containerentrypoint): 
    - String
  [ImageUri](#cfn-sagemaker-monitoringschedule-monitoringappspecification-imageuri): String
  [PostAnalyticsProcessorSourceUri](#cfn-sagemaker-monitoringschedule-monitoringappspecification-postanalyticsprocessorsourceuri): String
  [RecordPreprocessorSourceUri](#cfn-sagemaker-monitoringschedule-monitoringappspecification-recordpreprocessorsourceuri): String

Properties
ContainerArguments 
An array of arguments for the container used to run the monitoring job.
Required: No
Type: List of String
Maximum: 50
Update requires: No interruption
ContainerEntrypoint 
Specifies the entrypoint for a container used to run the monitoring job.
Required: No
Type: List of String
Maximum: 100
Update requires: No interruption
ImageUri 
The container image to be run by the monitoring job.
Required: Yes
Type: String
Maximum: 255
Pattern: .*
Update requires: No interruption
PostAnalyticsProcessorSourceUri 
An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
Required: No
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: No interruption
RecordPreprocessorSourceUri 
An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers.
Required: No
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule MonitoringExecutionSummary
Summary of information about the last monitoring job to run.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CreationTime](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-creationtime)" : String,
  "[EndpointName](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-endpointname)" : String,
  "[FailureReason](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-failurereason)" : String,
  "[LastModifiedTime](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-lastmodifiedtime)" : String,
  "[MonitoringExecutionStatus](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-monitoringexecutionstatus)" : String,
  "[MonitoringScheduleName](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-monitoringschedulename)" : String,
  "[ProcessingJobArn](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-processingjobarn)" : String,
  "[ScheduledTime](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-scheduledtime)" : String
}

YAML

  [CreationTime](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-creationtime): String
  [EndpointName](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-endpointname): String
  [FailureReason](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-failurereason): String
  [LastModifiedTime](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-lastmodifiedtime): String
  [MonitoringExecutionStatus](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-monitoringexecutionstatus): String
  [MonitoringScheduleName](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-monitoringschedulename): String
  [ProcessingJobArn](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-processingjobarn): String
  [ScheduledTime](#cfn-sagemaker-monitoringschedule-monitoringexecutionsummary-scheduledtime): String

Properties
CreationTime 
The time at which the monitoring job was created.
Required: Yes
Type: String
Update requires: No interruption
EndpointName 
The name of the endpoint used to run the monitoring job.
Required: No
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: No interruption
FailureReason 
Contains the reason a monitoring job failed, if it failed.
Required: No
Type: String
Maximum: 1024
Update requires: No interruption
LastModifiedTime 
A timestamp that indicates the last time the monitoring job was modified.
Required: Yes
Type: String
Update requires: No interruption
MonitoringExecutionStatus 
The status of the monitoring job.
Required: Yes
Type: String
Allowed values: Completed | CompletedWithViolations | Failed | InProgress | Pending | Stopped | Stopping
Update requires: No interruption
MonitoringScheduleName 
The name of the monitoring schedule.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: No interruption
ProcessingJobArn 
The Amazon Resource Name (ARN) of the monitoring job.
Required: No
Type: String
Maximum: 256
Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:processing-job/.*
Update requires: No interruption
ScheduledTime 
The time the monitoring job was scheduled.
Required: Yes
Type: String
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule MonitoringInput
The inputs for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[BatchTransformInput](#cfn-sagemaker-monitoringschedule-monitoringinput-batchtransforminput)" : BatchTransformInput,
  "[EndpointInput](#cfn-sagemaker-monitoringschedule-monitoringinput-endpointinput)" : EndpointInput
}

YAML

  [BatchTransformInput](#cfn-sagemaker-monitoringschedule-monitoringinput-batchtransforminput): 
    BatchTransformInput
  [EndpointInput](#cfn-sagemaker-monitoringschedule-monitoringinput-endpointinput): 
    EndpointInput

Properties
BatchTransformInput 
Property description not available.
Required: No
Type: BatchTransformInput
Update requires: No interruption
EndpointInput 
The endpoint for a monitoring job.
Required: No
Type: EndpointInput
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule MonitoringJobDefinition
Defines the monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[BaselineConfig](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-baselineconfig)" : BaselineConfig,
  "[Environment](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-environment)" : {Key : Value, ...},
  "[MonitoringAppSpecification](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-monitoringappspecification)" : MonitoringAppSpecification,
  "[MonitoringInputs](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-monitoringinputs)" : [ MonitoringInput, ... ],
  "[MonitoringOutputConfig](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-monitoringoutputconfig)" : MonitoringOutputConfig,
  "[MonitoringResources](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-monitoringresources)" : MonitoringResources,
  "[NetworkConfig](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-networkconfig)" : NetworkConfig,
  "[RoleArn](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-rolearn)" : String,
  "[StoppingCondition](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-stoppingcondition)" : StoppingCondition
}

YAML

  [BaselineConfig](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-baselineconfig): 
    BaselineConfig
  [Environment](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-environment): 
    Key : Value
  [MonitoringAppSpecification](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-monitoringappspecification): 
    MonitoringAppSpecification
  [MonitoringInputs](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-monitoringinputs): 
    - MonitoringInput
  [MonitoringOutputConfig](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-monitoringoutputconfig): 
    MonitoringOutputConfig
  [MonitoringResources](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-monitoringresources): 
    MonitoringResources
  [NetworkConfig](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-networkconfig): 
    NetworkConfig
  [RoleArn](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-rolearn): String
  [StoppingCondition](#cfn-sagemaker-monitoringschedule-monitoringjobdefinition-stoppingcondition): 
    StoppingCondition

Properties
BaselineConfig 
Baseline configuration used to validate that the data conforms to the specified constraints and statistics
Required: No
Type: BaselineConfig
Update requires: No interruption
Environment 
Sets the environment variables in the Docker container.
Required: No
Type: Map of String
Update requires: No interruption
MonitoringAppSpecification 
Configures the monitoring job to run a specified Docker container image.
Required: Yes
Type: MonitoringAppSpecification
Update requires: No interruption
MonitoringInputs 
The array of inputs for the monitoring job. Currently we support monitoring an Amazon SageMaker Endpoint.
Required: Yes
Type: List of MonitoringInput
Maximum: 1
Update requires: No interruption
MonitoringOutputConfig 
The array of outputs from the monitoring job to be uploaded to Amazon Simple Storage Service (Amazon S3).
Required: Yes
Type: MonitoringOutputConfig
Update requires: No interruption
MonitoringResources 
Identifies the resources, ML compute instances, and ML storage volumes to deploy for a monitoring job. In distributed processing, you specify more than one instance.
Required: Yes
Type: MonitoringResources
Update requires: No interruption
NetworkConfig 
Specifies networking options for an monitoring job.
Required: No
Type: NetworkConfig
Update requires: No interruption
RoleArn 
The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
Required: Yes
Type: String
Minimum: 20
Maximum: 2048
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Update requires: No interruption
StoppingCondition 
Specifies a time limit for how long the monitoring job is allowed to run.
Required: No
Type: StoppingCondition
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule MonitoringOutput
The output object for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Output](#cfn-sagemaker-monitoringschedule-monitoringoutput-s3output)" : S3Output
}

YAML

  [S3Output](#cfn-sagemaker-monitoringschedule-monitoringoutput-s3output): 
    S3Output

Properties
S3Output 
The Amazon S3 storage location where the results of a monitoring job are saved.
Required: Yes
Type: S3Output
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule MonitoringOutputConfig
The output configuration for monitoring jobs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[KmsKeyId](#cfn-sagemaker-monitoringschedule-monitoringoutputconfig-kmskeyid)" : String,
  "[MonitoringOutputs](#cfn-sagemaker-monitoringschedule-monitoringoutputconfig-monitoringoutputs)" : [ MonitoringOutput, ... ]
}

YAML

  [KmsKeyId](#cfn-sagemaker-monitoringschedule-monitoringoutputconfig-kmskeyid): String
  [MonitoringOutputs](#cfn-sagemaker-monitoringschedule-monitoringoutputconfig-monitoringoutputs): 
    - MonitoringOutput

Properties
KmsKeyId 
The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: No interruption
MonitoringOutputs 
Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
Required: Yes
Type: List of MonitoringOutput
Maximum: 1
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule MonitoringResources
Identifies the resources to deploy for a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ClusterConfig](#cfn-sagemaker-monitoringschedule-monitoringresources-clusterconfig)" : ClusterConfig
}

YAML

  [ClusterConfig](#cfn-sagemaker-monitoringschedule-monitoringresources-clusterconfig): 
    ClusterConfig

Properties
ClusterConfig 
The configuration for the cluster resources used to run the processing job.
Required: Yes
Type: ClusterConfig
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule MonitoringScheduleConfig
Configures the monitoring schedule and defines the monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MonitoringJobDefinition](#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig-monitoringjobdefinition)" : MonitoringJobDefinition,
  "[MonitoringJobDefinitionName](#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig-monitoringjobdefinitionname)" : String,
  "[MonitoringType](#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig-monitoringtype)" : String,
  "[ScheduleConfig](#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig-scheduleconfig)" : ScheduleConfig
}

YAML

  [MonitoringJobDefinition](#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig-monitoringjobdefinition): 
    MonitoringJobDefinition
  [MonitoringJobDefinitionName](#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig-monitoringjobdefinitionname): String
  [MonitoringType](#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig-monitoringtype): String
  [ScheduleConfig](#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig-scheduleconfig): 
    ScheduleConfig

Properties
MonitoringJobDefinition 
Defines the monitoring job.
Required: No
Type: MonitoringJobDefinition
Update requires: No interruption
MonitoringJobDefinitionName 
The name of the monitoring job definition to schedule.
Required: No
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
Update requires: No interruption
MonitoringType 
The type of the monitoring job definition to schedule.
Required: No
Type: String
Allowed values: DataQuality | ModelBias | ModelExplainability | ModelQuality
Update requires: No interruption
ScheduleConfig 
Configures the monitoring schedule.
Required: No
Type: ScheduleConfig
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule NetworkConfig
Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[EnableInterContainerTrafficEncryption](#cfn-sagemaker-monitoringschedule-networkconfig-enableintercontainertrafficencryption)" : Boolean,
  "[EnableNetworkIsolation](#cfn-sagemaker-monitoringschedule-networkconfig-enablenetworkisolation)" : Boolean,
  "[VpcConfig](#cfn-sagemaker-monitoringschedule-networkconfig-vpcconfig)" : VpcConfig
}

YAML

  [EnableInterContainerTrafficEncryption](#cfn-sagemaker-monitoringschedule-networkconfig-enableintercontainertrafficencryption): Boolean
  [EnableNetworkIsolation](#cfn-sagemaker-monitoringschedule-networkconfig-enablenetworkisolation): Boolean
  [VpcConfig](#cfn-sagemaker-monitoringschedule-networkconfig-vpcconfig): 
    VpcConfig

Properties
EnableInterContainerTrafficEncryption 
Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
Required: No
Type: Boolean
Update requires: No interruption
EnableNetworkIsolation 
Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
Required: No
Type: Boolean
Update requires: No interruption
VpcConfig 
Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud and Protect Training Jobs by Using an Amazon Virtual Private Cloud.
Required: No
Type: VpcConfig
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule S3Output
Information about where and how you want to store the results of a monitoring job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[LocalPath](#cfn-sagemaker-monitoringschedule-s3output-localpath)" : String,
  "[S3UploadMode](#cfn-sagemaker-monitoringschedule-s3output-s3uploadmode)" : String,
  "[S3Uri](#cfn-sagemaker-monitoringschedule-s3output-s3uri)" : String
}

YAML

  [LocalPath](#cfn-sagemaker-monitoringschedule-s3output-localpath): String
  [S3UploadMode](#cfn-sagemaker-monitoringschedule-s3output-s3uploadmode): String
  [S3Uri](#cfn-sagemaker-monitoringschedule-s3output-s3uri): String

Properties
LocalPath 
The local path to the S3 storage location where SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
Required: Yes
Type: String
Update requires: No interruption
S3UploadMode 
Whether to upload the results of the monitoring job continuously or after the job completes.
Required: No
Type: String
Update requires: No interruption
S3Uri 
A URI that identifies the S3 storage location where SageMaker saves the results of a monitoring job.
Required: Yes
Type: String
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule ScheduleConfig
Configuration details about the monitoring schedule.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ScheduleExpression](#cfn-sagemaker-monitoringschedule-scheduleconfig-scheduleexpression)" : String
}

YAML

  [ScheduleExpression](#cfn-sagemaker-monitoringschedule-scheduleconfig-scheduleexpression): String

Properties
ScheduleExpression 
A cron expression that describes details about the monitoring schedule.
Currently the only supported cron expressions are:
+ If you want to set the job to start every hour, please use the following:
Hourly: cron(0 * ? * * *) 
+ If you want to start the job daily:
cron(0 [00-23] ? * * *) 
For example, the following are valid cron expressions:
+ Daily at noon UTC: cron(0 12 ? * * *) 
+ Daily at midnight UTC: cron(0 0 ? * * *) 
To support running every 6, 12 hours, the following are also supported:
cron(0 [00-23]/[01-24] ? * * *)
For example, the following are valid cron expressions:
+ Every 12 hours, starting at 5pm UTC: cron(0 17/12 ? * * *) 
+ Every two hours starting at midnight: cron(0 0/2 ? * * *) 
+ Even though the cron expression is set to start at 5PM UTC, note that there could be a delay of 0-20 minutes from the actual requested time to run the execution. 
+ We recommend that if you would like a daily schedule, you do not provide this parameter. Amazon SageMaker will pick a time for running every day.
Required: Yes
Type: String
Minimum: 1
Maximum: 256
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule StatisticsResource
The baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[S3Uri](#cfn-sagemaker-monitoringschedule-statisticsresource-s3uri)" : String
}

YAML

  [S3Uri](#cfn-sagemaker-monitoringschedule-statisticsresource-s3uri): String

Properties
S3Uri 
The S3 URI for the statistics resource.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule StoppingCondition
Specifies a limit to how long a model training job or model compilation job can run. It also specifies how long a managed spot training job has to complete. When the job reaches the time limit, SageMaker ends the training or compilation job. Use this API to cap model training costs.
To stop a training job, SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. 
The training algorithms provided by SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with CreateModel.
Note
The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MaxRuntimeInSeconds](#cfn-sagemaker-monitoringschedule-stoppingcondition-maxruntimeinseconds)" : Integer
}

YAML

  [MaxRuntimeInSeconds](#cfn-sagemaker-monitoringschedule-stoppingcondition-maxruntimeinseconds): Integer

Properties
MaxRuntimeInSeconds 
The maximum length of time, in seconds, that a training or compilation job can run before it is stopped.
For compilation jobs, if the job does not complete during this time, a TimeOut error is generated. We recommend starting with 900 seconds and increasing as necessary based on your model.
For all other jobs, if the job does not complete during this time, SageMaker ends the job. When RetryStrategy is specified in the job request, MaxRuntimeInSeconds specifies the maximum time for all of the attempts in total, not each individual attempt. The default value is 1 day. The maximum value is 28 days.
The maximum time that a TrainingJob can run in total, including any time spent publishing metrics or archiving and uploading models after it has been stopped, is 30 days.
Required: Yes
Type: Integer
Minimum: 1
Update requires: No interruption

AWS::SageMaker::MonitoringSchedule VpcConfig
Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud and Protect Training Jobs by Using an Amazon Virtual Private Cloud. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[SecurityGroupIds](#cfn-sagemaker-monitoringschedule-vpcconfig-securitygroupids)" : [ String, ... ],
  "[Subnets](#cfn-sagemaker-monitoringschedule-vpcconfig-subnets)" : [ String, ... ]
}

YAML

  [SecurityGroupIds](#cfn-sagemaker-monitoringschedule-vpcconfig-securitygroupids): 
    - String
  [Subnets](#cfn-sagemaker-monitoringschedule-vpcconfig-subnets): 
    - String

Properties
SecurityGroupIds 
The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
Required: Yes
Type: List of String
Maximum: 5
Update requires: No interruption
Subnets 
The ID of the subnets in the VPC to which you want to connect your training job or model. For information about the availability of specific instance types, see Supported Instance Types and Availability Zones.
Required: Yes
Type: List of String
Maximum: 16
Update requires: No interruption

AWS::SageMaker::NotebookInstance InstanceMetadataServiceConfiguration
Information on the IMDS configuration of the notebook instance
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MinimumInstanceMetadataServiceVersion](#cfn-sagemaker-notebookinstance-instancemetadataserviceconfiguration-minimuminstancemetadataserviceversion)" : String
}

YAML

  [MinimumInstanceMetadataServiceVersion](#cfn-sagemaker-notebookinstance-instancemetadataserviceconfiguration-minimuminstancemetadataserviceversion): String

Properties
MinimumInstanceMetadataServiceVersion 
Indicates the minimum IMDS version that the notebook instance supports. When passed as part of CreateNotebookInstance, if no value is selected, then it defaults to IMDSv1. This means that both IMDSv1 and IMDSv2 are supported. If passed as part of UpdateNotebookInstance, there is no default.
Required: Yes
Type: String
Maximum: 1
Pattern: 1|2
Update requires: No interruption

AWS::SageMaker::NotebookInstanceLifecycleConfig NotebookInstanceLifecycleHook
Specifies the notebook instance lifecycle configuration script. Each lifecycle configuration script has a limit of 16384 characters.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Content](#cfn-sagemaker-notebookinstancelifecycleconfig-notebookinstancelifecyclehook-content)" : String
}

YAML

  [Content](#cfn-sagemaker-notebookinstancelifecycleconfig-notebookinstancelifecyclehook-content): String

Properties
Content 
A base64-encoded string that contains a shell script for a notebook instance lifecycle configuration.
Required: No
Type: String
Minimum: 1
Maximum: 16384
Pattern: [\S\s]+
Update requires: No interruption

AWS::SageMaker::Pipeline ParallelismConfiguration
Configuration that controls the parallelism of the pipeline. By default, the parallelism configuration specified applies to all executions of the pipeline unless overridden.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[MaxParallelExecutionSteps](#cfn-sagemaker-pipeline-parallelismconfiguration-maxparallelexecutionsteps)" : Integer
}

YAML

  [MaxParallelExecutionSteps](#cfn-sagemaker-pipeline-parallelismconfiguration-maxparallelexecutionsteps): Integer

Properties
MaxParallelExecutionSteps 
The max number of steps that can be executed in parallel.
Required: Yes
Type: Integer
Minimum: 1
Update requires: No interruption

AWS::SageMaker::Pipeline PipelineDefinition
The PipelineDefinition property type specifies Property description not available. for an AWS::SageMaker::Pipeline.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[PipelineDefinitionBody](#cfn-sagemaker-pipeline-pipelinedefinition-pipelinedefinitionbody)" : String,
  "[PipelineDefinitionS3Location](#cfn-sagemaker-pipeline-pipelinedefinition-pipelinedefinitions3location)" : S3Location
}

YAML

  [PipelineDefinitionBody](#cfn-sagemaker-pipeline-pipelinedefinition-pipelinedefinitionbody): String
  [PipelineDefinitionS3Location](#cfn-sagemaker-pipeline-pipelinedefinition-pipelinedefinitions3location): 
    S3Location

Properties
PipelineDefinitionBody 
Property description not available.
Required: No
Type: String
Update requires: No interruption
PipelineDefinitionS3Location 
Property description not available.
Required: No
Type: S3Location
Update requires: No interruption

AWS::SageMaker::Pipeline S3Location
The S3Location property type specifies Property description not available. for an AWS::SageMaker::Pipeline.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Bucket](#cfn-sagemaker-pipeline-s3location-bucket)" : String,
  "[ETag](#cfn-sagemaker-pipeline-s3location-etag)" : String,
  "[Key](#cfn-sagemaker-pipeline-s3location-key)" : String,
  "[Version](#cfn-sagemaker-pipeline-s3location-version)" : String
}

YAML

  [Bucket](#cfn-sagemaker-pipeline-s3location-bucket): String
  [ETag](#cfn-sagemaker-pipeline-s3location-etag): String
  [Key](#cfn-sagemaker-pipeline-s3location-key): String
  [Version](#cfn-sagemaker-pipeline-s3location-version): String

Properties
Bucket 
Property description not available.
Required: Yes
Type: String
Update requires: No interruption
ETag 
Property description not available.
Required: No
Type: String
Update requires: No interruption
Key 
Property description not available.
Required: Yes
Type: String
Update requires: No interruption
Version 
Property description not available.
Required: No
Type: String
Update requires: No interruption

AWS::SageMaker::Project ProvisioningParameter
A key value pair used when you provision a project as a service catalog product. For information, see What is AWS Service Catalog.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Key](#cfn-sagemaker-project-provisioningparameter-key)" : String,
  "[Value](#cfn-sagemaker-project-provisioningparameter-value)" : String
}

YAML

  [Key](#cfn-sagemaker-project-provisioningparameter-key): String
  [Value](#cfn-sagemaker-project-provisioningparameter-value): String

Properties
Key 
The key that identifies a provisioning parameter.
Required: Yes
Type: String
Minimum: 1
Maximum: 1000
Pattern: .*
Update requires: Replacement
Value 
The value of the provisioning parameter.
Required: Yes
Type: String
Maximum: 4096
Pattern: .*
Update requires: Replacement

AWS::SageMaker::Project ServiceCatalogProvisionedProductDetails
Details of a provisioned service catalog product. For information about service catalog, see What is AWS Service Catalog.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ProvisionedProductId](#cfn-sagemaker-project-servicecatalogprovisionedproductdetails-provisionedproductid)" : String,
  "[ProvisionedProductStatusMessage](#cfn-sagemaker-project-servicecatalogprovisionedproductdetails-provisionedproductstatusmessage)" : String
}

YAML

  [ProvisionedProductId](#cfn-sagemaker-project-servicecatalogprovisionedproductdetails-provisionedproductid): String
  [ProvisionedProductStatusMessage](#cfn-sagemaker-project-servicecatalogprovisionedproductdetails-provisionedproductstatusmessage): String

Properties
ProvisionedProductId 
The ID of the provisioned product.
Required: No
Type: String
Minimum: 1
Maximum: 100
Pattern: ^[a-zA-Z0-9_\-]*
Update requires: No interruption
ProvisionedProductStatusMessage 
The current status of the product.
+  AVAILABLE - Stable state, ready to perform any operation. The most recent operation succeeded and completed.
+  UNDER_CHANGE - Transitive state. Operations performed might not have valid results. Wait for an AVAILABLE status before performing operations.
+  TAINTED - Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version.
+  ERROR - An unexpected error occurred. The provisioned product exists but the stack is not running. For example, CloudFormation received a parameter value that was not valid and could not launch the stack.
+  PLAN_IN_PROGRESS - Transitive state. The plan operations were performed to provision a new product, but resources have not yet been created. After reviewing the list of resources to be created, execute the plan. Wait for an AVAILABLE status before performing operations.
Required: No
Type: String
Pattern: .*
Update requires: No interruption

AWS::SageMaker::Project ServiceCatalogProvisioningDetails
Details that you specify to provision a service catalog product. For information about service catalog, see What is AWS Service Catalog.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[PathId](#cfn-sagemaker-project-servicecatalogprovisioningdetails-pathid)" : String,
  "[ProductId](#cfn-sagemaker-project-servicecatalogprovisioningdetails-productid)" : String,
  "[ProvisioningArtifactId](#cfn-sagemaker-project-servicecatalogprovisioningdetails-provisioningartifactid)" : String,
  "[ProvisioningParameters](#cfn-sagemaker-project-servicecatalogprovisioningdetails-provisioningparameters)" : [ ProvisioningParameter, ... ]
}

YAML

  [PathId](#cfn-sagemaker-project-servicecatalogprovisioningdetails-pathid): String
  [ProductId](#cfn-sagemaker-project-servicecatalogprovisioningdetails-productid): String
  [ProvisioningArtifactId](#cfn-sagemaker-project-servicecatalogprovisioningdetails-provisioningartifactid): String
  [ProvisioningParameters](#cfn-sagemaker-project-servicecatalogprovisioningdetails-provisioningparameters): 
    - ProvisioningParameter

Properties
PathId 
The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path.
Required: No
Type: String
Minimum: 1
Maximum: 100
Pattern: ^[a-zA-Z0-9_\-]*
Update requires: Replacement
ProductId 
The ID of the product to provision.
Required: Yes
Type: String
Minimum: 1
Maximum: 100
Pattern: ^[a-zA-Z0-9_\-]*
Update requires: Replacement
ProvisioningArtifactId 
The ID of the provisioning artifact.
Required: No
Type: String
Minimum: 1
Maximum: 100
Pattern: ^[a-zA-Z0-9_\-]*
Update requires: Replacement
ProvisioningParameters 
A list of key value pairs that you specify when you provision a product.
Required: No
Type: List of ProvisioningParameter
Update requires: Replacement

AWS::SageMaker::Space CustomImage
A custom SageMaker image. For more information, see Bring your own SageMaker image.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[AppImageConfigName](#cfn-sagemaker-space-customimage-appimageconfigname)" : String,
  "[ImageName](#cfn-sagemaker-space-customimage-imagename)" : String,
  "[ImageVersionNumber](#cfn-sagemaker-space-customimage-imageversionnumber)" : Integer
}

YAML

  [AppImageConfigName](#cfn-sagemaker-space-customimage-appimageconfigname): String
  [ImageName](#cfn-sagemaker-space-customimage-imagename): String
  [ImageVersionNumber](#cfn-sagemaker-space-customimage-imageversionnumber): Integer

Properties
AppImageConfigName 
The name of the AppImageConfig.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: No interruption
ImageName 
The name of the CustomImage. Must be unique to your account.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$
Update requires: No interruption
ImageVersionNumber 
The version number of the CustomImage.
Required: No
Type: Integer
Minimum: 0
Update requires: No interruption

AWS::SageMaker::Space JupyterServerAppSettings
The JupyterServer app settings.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DefaultResourceSpec](#cfn-sagemaker-space-jupyterserverappsettings-defaultresourcespec)" : ResourceSpec
}

YAML

  [DefaultResourceSpec](#cfn-sagemaker-space-jupyterserverappsettings-defaultresourcespec): 
    ResourceSpec

Properties
DefaultResourceSpec 
The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterServer app. If you use the LifecycleConfigArns parameter, then this parameter is also required.
Required: No
Type: ResourceSpec
Update requires: No interruption

AWS::SageMaker::Space KernelGatewayAppSettings
The KernelGateway app settings.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CustomImages](#cfn-sagemaker-space-kernelgatewayappsettings-customimages)" : [ CustomImage, ... ],
  "[DefaultResourceSpec](#cfn-sagemaker-space-kernelgatewayappsettings-defaultresourcespec)" : ResourceSpec
}

YAML

  [CustomImages](#cfn-sagemaker-space-kernelgatewayappsettings-customimages): 
    - CustomImage
  [DefaultResourceSpec](#cfn-sagemaker-space-kernelgatewayappsettings-defaultresourcespec): 
    ResourceSpec

Properties
CustomImages 
A list of custom SageMaker images that are configured to run as a KernelGateway app.
Required: No
Type: List of CustomImage
Maximum: 200
Update requires: No interruption
DefaultResourceSpec 
The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
The Amazon SageMaker Studio UI does not use the default instance type value set here. The default instance type set here is used when Apps are created using the AWS Command Line Interface or AWS CloudFormation and the instance type parameter value is not passed.
Required: No
Type: ResourceSpec
Update requires: No interruption

AWS::SageMaker::Space ResourceSpec
Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InstanceType](#cfn-sagemaker-space-resourcespec-instancetype)" : String,
  "[SageMakerImageArn](#cfn-sagemaker-space-resourcespec-sagemakerimagearn)" : String,
  "[SageMakerImageVersionArn](#cfn-sagemaker-space-resourcespec-sagemakerimageversionarn)" : String
}

YAML

  [InstanceType](#cfn-sagemaker-space-resourcespec-instancetype): String
  [SageMakerImageArn](#cfn-sagemaker-space-resourcespec-sagemakerimagearn): String
  [SageMakerImageVersionArn](#cfn-sagemaker-space-resourcespec-sagemakerimageversionarn): String

Properties
InstanceType 
The instance type that the image version runs on.
JupyterServer apps only support the system value.
For KernelGateway apps, the system value is translated to ml.t3.medium. KernelGateway apps also support all other values for available instance types.
Required: No
Type: String
Allowed values: ml.c5.12xlarge | ml.c5.18xlarge | ml.c5.24xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.large | ml.c5.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.g5.12xlarge | ml.g5.16xlarge | ml.g5.24xlarge | ml.g5.2xlarge | ml.g5.48xlarge | ml.g5.4xlarge | ml.g5.8xlarge | ml.g5.xlarge | ml.geospatial.interactive | ml.m5.12xlarge | ml.m5.16xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.8xlarge | ml.m5.large | ml.m5.xlarge | ml.m5d.12xlarge | ml.m5d.16xlarge | ml.m5d.24xlarge | ml.m5d.2xlarge | ml.m5d.4xlarge | ml.m5d.8xlarge | ml.m5d.large | ml.m5d.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge | ml.p3dn.24xlarge | ml.r5.12xlarge | ml.r5.16xlarge | ml.r5.24xlarge | ml.r5.2xlarge | ml.r5.4xlarge | ml.r5.8xlarge | ml.r5.large | ml.r5.xlarge | ml.t3.2xlarge | ml.t3.large | ml.t3.medium | ml.t3.micro | ml.t3.small | ml.t3.xlarge | system
Update requires: No interruption
SageMakerImageArn 
The ARN of the SageMaker image that the image version belongs to.
Required: No
Type: String
Maximum: 256
Pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$
Update requires: No interruption
SageMakerImageVersionArn 
The ARN of the image version created on the instance.
Required: No
Type: String
Maximum: 256
Pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$
Update requires: No interruption

AWS::SageMaker::Space SpaceSettings
A collection of space settings.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[JupyterServerAppSettings](#cfn-sagemaker-space-spacesettings-jupyterserverappsettings)" : JupyterServerAppSettings,
  "[KernelGatewayAppSettings](#cfn-sagemaker-space-spacesettings-kernelgatewayappsettings)" : KernelGatewayAppSettings
}

YAML

  [JupyterServerAppSettings](#cfn-sagemaker-space-spacesettings-jupyterserverappsettings): 
    JupyterServerAppSettings
  [KernelGatewayAppSettings](#cfn-sagemaker-space-spacesettings-kernelgatewayappsettings): 
    KernelGatewayAppSettings

Properties
JupyterServerAppSettings 
The JupyterServer app settings.
Required: No
Type: JupyterServerAppSettings
Update requires: No interruption
KernelGatewayAppSettings 
The KernelGateway app settings.
Required: No
Type: KernelGatewayAppSettings
Update requires: No interruption

AWS::SageMaker::UserProfile CustomImage
A custom SageMaker image. For more information, see Bring your own SageMaker image.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[AppImageConfigName](#cfn-sagemaker-userprofile-customimage-appimageconfigname)" : String,
  "[ImageName](#cfn-sagemaker-userprofile-customimage-imagename)" : String,
  "[ImageVersionNumber](#cfn-sagemaker-userprofile-customimage-imageversionnumber)" : Integer
}

YAML

  [AppImageConfigName](#cfn-sagemaker-userprofile-customimage-appimageconfigname): String
  [ImageName](#cfn-sagemaker-userprofile-customimage-imagename): String
  [ImageVersionNumber](#cfn-sagemaker-userprofile-customimage-imageversionnumber): Integer

Properties
AppImageConfigName 
The name of the AppImageConfig.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: No interruption
ImageName 
The name of the CustomImage. Must be unique to your account.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$
Update requires: No interruption
ImageVersionNumber 
The version number of the CustomImage.
Required: No
Type: Integer
Minimum: 0
Update requires: No interruption

AWS::SageMaker::UserProfile JupyterServerAppSettings
The JupyterServer app settings.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[DefaultResourceSpec](#cfn-sagemaker-userprofile-jupyterserverappsettings-defaultresourcespec)" : ResourceSpec
}

YAML

  [DefaultResourceSpec](#cfn-sagemaker-userprofile-jupyterserverappsettings-defaultresourcespec): 
    ResourceSpec

Properties
DefaultResourceSpec 
The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterServer app.
Required: No
Type: ResourceSpec
Update requires: No interruption

AWS::SageMaker::UserProfile KernelGatewayAppSettings
The KernelGateway app settings.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CustomImages](#cfn-sagemaker-userprofile-kernelgatewayappsettings-customimages)" : [ CustomImage, ... ],
  "[DefaultResourceSpec](#cfn-sagemaker-userprofile-kernelgatewayappsettings-defaultresourcespec)" : ResourceSpec
}

YAML

  [CustomImages](#cfn-sagemaker-userprofile-kernelgatewayappsettings-customimages): 
    - CustomImage
  [DefaultResourceSpec](#cfn-sagemaker-userprofile-kernelgatewayappsettings-defaultresourcespec): 
    ResourceSpec

Properties
CustomImages 
A list of custom SageMaker images that are configured to run as a KernelGateway app.
Required: No
Type: List of CustomImage
Maximum: 200
Update requires: No interruption
DefaultResourceSpec 
The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
The Amazon SageMaker Studio UI does not use the default instance type value set here. The default instance type set here is used when Apps are created using the AWS Command Line Interface or AWS CloudFormation and the instance type parameter value is not passed.
Required: No
Type: ResourceSpec
Update requires: No interruption

AWS::SageMaker::UserProfile ResourceSpec
Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[InstanceType](#cfn-sagemaker-userprofile-resourcespec-instancetype)" : String,
  "[SageMakerImageArn](#cfn-sagemaker-userprofile-resourcespec-sagemakerimagearn)" : String,
  "[SageMakerImageVersionArn](#cfn-sagemaker-userprofile-resourcespec-sagemakerimageversionarn)" : String
}

YAML

  [InstanceType](#cfn-sagemaker-userprofile-resourcespec-instancetype): String
  [SageMakerImageArn](#cfn-sagemaker-userprofile-resourcespec-sagemakerimagearn): String
  [SageMakerImageVersionArn](#cfn-sagemaker-userprofile-resourcespec-sagemakerimageversionarn): String

Properties
InstanceType 
The instance type that the image version runs on.
JupyterServer apps only support the system value.
For KernelGateway apps, the system value is translated to ml.t3.medium. KernelGateway apps also support all other values for available instance types.
Required: No
Type: String
Allowed values: ml.c5.12xlarge | ml.c5.18xlarge | ml.c5.24xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.large | ml.c5.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.g5.12xlarge | ml.g5.16xlarge | ml.g5.24xlarge | ml.g5.2xlarge | ml.g5.48xlarge | ml.g5.4xlarge | ml.g5.8xlarge | ml.g5.xlarge | ml.geospatial.interactive | ml.m5.12xlarge | ml.m5.16xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.8xlarge | ml.m5.large | ml.m5.xlarge | ml.m5d.12xlarge | ml.m5d.16xlarge | ml.m5d.24xlarge | ml.m5d.2xlarge | ml.m5d.4xlarge | ml.m5d.8xlarge | ml.m5d.large | ml.m5d.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge | ml.p3dn.24xlarge | ml.r5.12xlarge | ml.r5.16xlarge | ml.r5.24xlarge | ml.r5.2xlarge | ml.r5.4xlarge | ml.r5.8xlarge | ml.r5.large | ml.r5.xlarge | ml.t3.2xlarge | ml.t3.large | ml.t3.medium | ml.t3.micro | ml.t3.small | ml.t3.xlarge | system
Update requires: No interruption
SageMakerImageArn 
The ARN of the SageMaker image that the image version belongs to.
Required: No
Type: String
Maximum: 256
Pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$
Update requires: No interruption
SageMakerImageVersionArn 
The ARN of the image version created on the instance.
Required: No
Type: String
Maximum: 256
Pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$
Update requires: No interruption

AWS::SageMaker::UserProfile RStudioServerProAppSettings
A collection of settings that configure user interaction with the RStudioServerPro app. RStudioServerProAppSettings cannot be updated. The RStudioServerPro app must be deleted and a new one created to make any changes.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[AccessStatus](#cfn-sagemaker-userprofile-rstudioserverproappsettings-accessstatus)" : String,
  "[UserGroup](#cfn-sagemaker-userprofile-rstudioserverproappsettings-usergroup)" : String
}

YAML

  [AccessStatus](#cfn-sagemaker-userprofile-rstudioserverproappsettings-accessstatus): String
  [UserGroup](#cfn-sagemaker-userprofile-rstudioserverproappsettings-usergroup): String

Properties
AccessStatus 
Indicates whether the current user has access to the RStudioServerPro app.
Required: No
Type: String
Allowed values: DISABLED | ENABLED
Update requires: Replacement
UserGroup 
The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.
Required: No
Type: String
Allowed values: R_STUDIO_ADMIN | R_STUDIO_USER
Update requires: Replacement

AWS::SageMaker::UserProfile SharingSettings
Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[NotebookOutputOption](#cfn-sagemaker-userprofile-sharingsettings-notebookoutputoption)" : String,
  "[S3KmsKeyId](#cfn-sagemaker-userprofile-sharingsettings-s3kmskeyid)" : String,
  "[S3OutputPath](#cfn-sagemaker-userprofile-sharingsettings-s3outputpath)" : String
}

YAML

  [NotebookOutputOption](#cfn-sagemaker-userprofile-sharingsettings-notebookoutputoption): String
  [S3KmsKeyId](#cfn-sagemaker-userprofile-sharingsettings-s3kmskeyid): String
  [S3OutputPath](#cfn-sagemaker-userprofile-sharingsettings-s3outputpath): String

Properties
NotebookOutputOption 
Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
Required: No
Type: String
Allowed values: Allowed | Disabled
Update requires: No interruption
S3KmsKeyId 
When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: No interruption
S3OutputPath 
When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
Required: No
Type: String
Maximum: 1024
Pattern: ^(https|s3)://([^/]+)/?(.*)$
Update requires: No interruption

AWS::SageMaker::UserProfile UserSettings
A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
SecurityGroups is aggregated when specified in both calls. For all other settings in UserSettings, the values specified in CreateUserProfile take precedence over those specified in CreateDomain.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[ExecutionRole](#cfn-sagemaker-userprofile-usersettings-executionrole)" : String,
  "[JupyterServerAppSettings](#cfn-sagemaker-userprofile-usersettings-jupyterserverappsettings)" : JupyterServerAppSettings,
  "[KernelGatewayAppSettings](#cfn-sagemaker-userprofile-usersettings-kernelgatewayappsettings)" : KernelGatewayAppSettings,
  "[RStudioServerProAppSettings](#cfn-sagemaker-userprofile-usersettings-rstudioserverproappsettings)" : RStudioServerProAppSettings,
  "[SecurityGroups](#cfn-sagemaker-userprofile-usersettings-securitygroups)" : [ String, ... ],
  "[SharingSettings](#cfn-sagemaker-userprofile-usersettings-sharingsettings)" : SharingSettings
}

YAML

  [ExecutionRole](#cfn-sagemaker-userprofile-usersettings-executionrole): String
  [JupyterServerAppSettings](#cfn-sagemaker-userprofile-usersettings-jupyterserverappsettings): 
    JupyterServerAppSettings
  [KernelGatewayAppSettings](#cfn-sagemaker-userprofile-usersettings-kernelgatewayappsettings): 
    KernelGatewayAppSettings
  [RStudioServerProAppSettings](#cfn-sagemaker-userprofile-usersettings-rstudioserverproappsettings): 
    RStudioServerProAppSettings
  [SecurityGroups](#cfn-sagemaker-userprofile-usersettings-securitygroups): 
    - String
  [SharingSettings](#cfn-sagemaker-userprofile-usersettings-sharingsettings): 
    SharingSettings

Properties
ExecutionRole 
The execution role for the user.
Required: No
Type: String
Minimum: 20
Maximum: 2048
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Update requires: No interruption
JupyterServerAppSettings 
The Jupyter server's app settings.
Required: No
Type: JupyterServerAppSettings
Update requires: No interruption
KernelGatewayAppSettings 
The kernel gateway app settings.
Required: No
Type: KernelGatewayAppSettings
Update requires: No interruption
RStudioServerProAppSettings 
A collection of settings that configure user interaction with the RStudioServerPro app.
Required: No
Type: RStudioServerProAppSettings
Update requires: No interruption
SecurityGroups 
The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
Optional when the CreateDomain.AppNetworkAccessType parameter is set to PublicInternetOnly.
Required when the CreateDomain.AppNetworkAccessType parameter is set to VpcOnly.
Amazon SageMaker adds a security group to allow NFS traffic from SageMaker Studio. Therefore, the number of security groups that you can specify is one less than the maximum number shown.
Required: No
Type: List of String
Maximum: 5
Update requires: No interruption
SharingSettings 
Specifies options for sharing SageMaker Studio notebooks.
Required: No
Type: SharingSettings
Update requires: No interruption

AWS::SageMaker::Workteam CognitoMemberDefinition
Identifies a Amazon Cognito user group. A user group can be used in on or more work teams.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CognitoClientId](#cfn-sagemaker-workteam-cognitomemberdefinition-cognitoclientid)" : String,
  "[CognitoUserGroup](#cfn-sagemaker-workteam-cognitomemberdefinition-cognitousergroup)" : String,
  "[CognitoUserPool](#cfn-sagemaker-workteam-cognitomemberdefinition-cognitouserpool)" : String
}

YAML

  [CognitoClientId](#cfn-sagemaker-workteam-cognitomemberdefinition-cognitoclientid): String
  [CognitoUserGroup](#cfn-sagemaker-workteam-cognitomemberdefinition-cognitousergroup): String
  [CognitoUserPool](#cfn-sagemaker-workteam-cognitomemberdefinition-cognitouserpool): String

Properties
CognitoClientId 
An identifier for an application client. You must create the app client ID using Amazon Cognito.
Required: Yes
Type: String
Update requires: No interruption
CognitoUserGroup 
An identifier for a user group.
Required: Yes
Type: String
Update requires: No interruption
CognitoUserPool 
An identifier for a user pool. The user pool must be in the same region as the service that you are calling.
Required: Yes
Type: String
Update requires: Replacement

AWS::SageMaker::Workteam MemberDefinition
Defines an Amazon Cognito or your own OIDC IdP user group that is part of a work team.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[CognitoMemberDefinition](#cfn-sagemaker-workteam-memberdefinition-cognitomemberdefinition)" : CognitoMemberDefinition,
  "[OidcMemberDefinition](#cfn-sagemaker-workteam-memberdefinition-oidcmemberdefinition)" : OidcMemberDefinition
}

YAML

  [CognitoMemberDefinition](#cfn-sagemaker-workteam-memberdefinition-cognitomemberdefinition): 
    CognitoMemberDefinition
  [OidcMemberDefinition](#cfn-sagemaker-workteam-memberdefinition-oidcmemberdefinition): 
    OidcMemberDefinition

Properties
CognitoMemberDefinition 
The Amazon Cognito user group that is part of the work team.
Required: No
Type: CognitoMemberDefinition
Update requires: No interruption
OidcMemberDefinition 
A list user groups that exist in your OIDC Identity Provider (IdP). One to ten groups can be used to create a single private work team. When you add a user group to the list of Groups, you can add that user group to one or more private work teams. If you add a user group to a private work team, all workers in that user group are added to the work team.
Required: No
Type: OidcMemberDefinition
Update requires: No interruption

AWS::SageMaker::Workteam NotificationConfiguration
Configures Amazon SNS notifications of available or expiring work items for work teams.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[NotificationTopicArn](#cfn-sagemaker-workteam-notificationconfiguration-notificationtopicarn)" : String
}

YAML

  [NotificationTopicArn](#cfn-sagemaker-workteam-notificationconfiguration-notificationtopicarn): String

Properties
NotificationTopicArn 
The ARN for the Amazon SNS topic to which notifications should be published.
Required: Yes
Type: String
Pattern: arn:aws[a-z\-]*:sns:[a-z0-9\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*
Update requires: No interruption

AWS::SageMaker::Workteam OidcMemberDefinition
A list of user groups that exist in your OIDC Identity Provider (IdP). One to ten groups can be used to create a single private work team. When you add a user group to the list of Groups, you can add that user group to one or more private work teams. If you add a user group to a private work team, all workers in that user group are added to the work team.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[OidcGroups](#cfn-sagemaker-workteam-oidcmemberdefinition-oidcgroups)" : [ String, ... ]
}

YAML

  [OidcGroups](#cfn-sagemaker-workteam-oidcmemberdefinition-oidcgroups): 
    - String

Properties
OidcGroups 
Property description not available.
Required: Yes
Type: List of String
Update requires: No interruption

AWS::Scheduler::Schedule SageMakerPipelineParameter
The name and value pair of a parameter to use to start execution of a SageMaker Model Building Pipeline.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[Name](#cfn-scheduler-schedule-sagemakerpipelineparameter-name)" : String,
  "[Value](#cfn-scheduler-schedule-sagemakerpipelineparameter-value)" : String
}

YAML

  [Name](#cfn-scheduler-schedule-sagemakerpipelineparameter-name): String
  [Value](#cfn-scheduler-schedule-sagemakerpipelineparameter-value): String

Properties
Name 
Name of parameter to start execution of a SageMaker Model Building Pipeline.
Required: Yes
Type: String
Update requires: No interruption
Value 
Value of parameter to start execution of a SageMaker Model Building Pipeline.
Required: Yes
Type: String
Update requires: No interruption

AWS::Scheduler::Schedule SageMakerPipelineParameters
The templated target type for the Amazon SageMaker https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_StartPipelineExecution.html API operation.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "[PipelineParameterList](#cfn-scheduler-schedule-sagemakerpipelineparameters-pipelineparameterlist)" : [ SageMakerPipelineParameter, ... ]
}

YAML

  [PipelineParameterList](#cfn-scheduler-schedule-sagemakerpipelineparameters-pipelineparameterlist): 
    - SageMakerPipelineParameter

Properties
PipelineParameterList 
List of parameter names and values to use when executing the SageMaker Model Building Pipeline.
Required: No
Type: List of SageMakerPipelineParameter
Update requires: No interruption

AWS::SageMaker::App
Creates a running app for the specified UserProfile. This operation is automatically invoked by Amazon SageMaker Studio upon access to the associated Domain, and when new kernel configurations are selected by the user. A user may have multiple Apps active simultaneously.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::App",
  "Properties" : {
      "[AppName](#cfn-sagemaker-app-appname)" : String,
      "[AppType](#cfn-sagemaker-app-apptype)" : String,
      "[DomainId](#cfn-sagemaker-app-domainid)" : String,
      "[ResourceSpec](#cfn-sagemaker-app-resourcespec)" : ResourceSpec,
      "[Tags](#cfn-sagemaker-app-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ],
      "[UserProfileName](#cfn-sagemaker-app-userprofilename)" : String
    }
}

YAML

Type: AWS::SageMaker::App
Properties: 
  [AppName](#cfn-sagemaker-app-appname): String
  [AppType](#cfn-sagemaker-app-apptype): String
  [DomainId](#cfn-sagemaker-app-domainid): String
  [ResourceSpec](#cfn-sagemaker-app-resourcespec): 
    ResourceSpec
  [Tags](#cfn-sagemaker-app-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)
  [UserProfileName](#cfn-sagemaker-app-userprofilename): String

Properties
AppName 
The name of the app.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
AppType 
The type of app.
Allowed Values: JupyterServer | KernelGateway | RSessionGateway | RStudioServerPro | TensorBoard | Canvas
Required: Yes
Type: String
Update requires: Replacement
DomainId 
The domain ID.
Required: Yes
Type: String
Maximum: 63
Update requires: Replacement
ResourceSpec 
Specifies the ARNs of a SageMaker image and SageMaker image version, and the instance type that the version runs on.
Required: No
Type: ResourceSpec
Update requires: No interruption
Tags 
An array of key-value pairs to apply to this resource.
For more information, see Tag.
Required: No
Type: List of Tag
Update requires: Replacement
UserProfileName 
The user profile name.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the app type, app name, Domain ID, and user profile name.
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.

AppArn 
The Amazon Resource Name (ARN) of the app, such as arn:aws:sagemaker:us-west-2:account-id:app/my-app-name.

AWS::SageMaker::AppImageConfig
Creates a configuration for running a SageMaker image as a KernelGateway app. The configuration specifies the Amazon Elastic File System (EFS) storage volume on the image, and a list of the kernels in the image.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::AppImageConfig",
  "Properties" : {
      "[AppImageConfigName](#cfn-sagemaker-appimageconfig-appimageconfigname)" : String,
      "[KernelGatewayImageConfig](#cfn-sagemaker-appimageconfig-kernelgatewayimageconfig)" : KernelGatewayImageConfig,
      "[Tags](#cfn-sagemaker-appimageconfig-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::AppImageConfig
Properties: 
  [AppImageConfigName](#cfn-sagemaker-appimageconfig-appimageconfigname): String
  [KernelGatewayImageConfig](#cfn-sagemaker-appimageconfig-kernelgatewayimageconfig): 
    KernelGatewayImageConfig
  [Tags](#cfn-sagemaker-appimageconfig-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
AppImageConfigName 
The name of the AppImageConfig. Must be unique to your account.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
KernelGatewayImageConfig 
The configuration for the file system and kernels in the SageMaker image.
Required: No
Type: KernelGatewayImageConfig
Update requires: No interruption
Tags 
An array of key-value pairs to apply to this resource.
For more information, see Tag.
Required: No
Type: List of Tag
Update requires: Replacement
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the name of the AppImageConfig.
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.

AppImageConfigArn 
The Amazon Resource Name (ARN) of the AppImageConfig, such as arn:aws:sagemaker:us-west-2:account-id:app-image-config/my-app-image-config-name.

AWS::SageMaker::CodeRepository
Creates a Git repository as a resource in your SageMaker account. You can associate the repository with notebook instances so that you can use Git source control for the notebooks you create. The Git repository is a resource in your SageMaker account, so it can be associated with more than one notebook instance, and it persists independently from the lifecycle of any notebook instances it is associated with.
The repository can be hosted either in AWS CodeCommit or in any other Git repository.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::CodeRepository",
  "Properties" : {
      "[CodeRepositoryName](#cfn-sagemaker-coderepository-coderepositoryname)" : String,
      "[GitConfig](#cfn-sagemaker-coderepository-gitconfig)" : GitConfig,
      "[Tags](#cfn-sagemaker-coderepository-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::CodeRepository
Properties: 
  [CodeRepositoryName](#cfn-sagemaker-coderepository-coderepositoryname): String
  [GitConfig](#cfn-sagemaker-coderepository-gitconfig): 
    GitConfig
  [Tags](#cfn-sagemaker-coderepository-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
CodeRepositoryName 
The name of the Git repository.
Required: No
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: Replacement
GitConfig 
Configuration details for the Git repository, including the URL where it is located and the ARN of the AWS Secrets Manager secret that contains the credentials used to access the repository.
Required: Yes
Type: GitConfig
Update requires: No interruption
Tags 
List of tags for Code Repository.
Required: No
Type: List of Tag
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Amazon Resource Name (ARN) of the code repository.
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.
Fn::GetAtt returns a value for a specified attribute of this type. The following are the available attributes and sample return values. 

CodeRepositoryName 
The name of the code repository, such as myCodeRepo.

AWS::SageMaker::DataQualityJobDefinition
Creates a definition for a job that monitors data quality and drift. For information about model monitor, see Amazon SageMaker Model Monitor.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::DataQualityJobDefinition",
  "Properties" : {
      "[DataQualityAppSpecification](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification)" : DataQualityAppSpecification,
      "[DataQualityBaselineConfig](#cfn-sagemaker-dataqualityjobdefinition-dataqualitybaselineconfig)" : DataQualityBaselineConfig,
      "[DataQualityJobInput](#cfn-sagemaker-dataqualityjobdefinition-dataqualityjobinput)" : DataQualityJobInput,
      "[DataQualityJobOutputConfig](#cfn-sagemaker-dataqualityjobdefinition-dataqualityjoboutputconfig)" : MonitoringOutputConfig,
      "[EndpointName](#cfn-sagemaker-dataqualityjobdefinition-endpointname)" : String,
      "[JobDefinitionName](#cfn-sagemaker-dataqualityjobdefinition-jobdefinitionname)" : String,
      "[JobResources](#cfn-sagemaker-dataqualityjobdefinition-jobresources)" : MonitoringResources,
      "[NetworkConfig](#cfn-sagemaker-dataqualityjobdefinition-networkconfig)" : NetworkConfig,
      "[RoleArn](#cfn-sagemaker-dataqualityjobdefinition-rolearn)" : String,
      "[StoppingCondition](#cfn-sagemaker-dataqualityjobdefinition-stoppingcondition)" : StoppingCondition,
      "[Tags](#cfn-sagemaker-dataqualityjobdefinition-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::DataQualityJobDefinition
Properties: 
  [DataQualityAppSpecification](#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification): 
    DataQualityAppSpecification
  [DataQualityBaselineConfig](#cfn-sagemaker-dataqualityjobdefinition-dataqualitybaselineconfig): 
    DataQualityBaselineConfig
  [DataQualityJobInput](#cfn-sagemaker-dataqualityjobdefinition-dataqualityjobinput): 
    DataQualityJobInput
  [DataQualityJobOutputConfig](#cfn-sagemaker-dataqualityjobdefinition-dataqualityjoboutputconfig): 
    MonitoringOutputConfig
  [EndpointName](#cfn-sagemaker-dataqualityjobdefinition-endpointname): String
  [JobDefinitionName](#cfn-sagemaker-dataqualityjobdefinition-jobdefinitionname): String
  [JobResources](#cfn-sagemaker-dataqualityjobdefinition-jobresources): 
    MonitoringResources
  [NetworkConfig](#cfn-sagemaker-dataqualityjobdefinition-networkconfig): 
    NetworkConfig
  [RoleArn](#cfn-sagemaker-dataqualityjobdefinition-rolearn): String
  [StoppingCondition](#cfn-sagemaker-dataqualityjobdefinition-stoppingcondition): 
    StoppingCondition
  [Tags](#cfn-sagemaker-dataqualityjobdefinition-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
DataQualityAppSpecification 
Specifies the container that runs the monitoring job.
Required: Yes
Type: DataQualityAppSpecification
Update requires: Replacement
DataQualityBaselineConfig 
Configures the constraints and baselines for the monitoring job.
Required: No
Type: DataQualityBaselineConfig
Update requires: Replacement
DataQualityJobInput 
A list of inputs for the monitoring job. Currently endpoints are supported as monitoring inputs.
Required: Yes
Type: DataQualityJobInput
Update requires: Replacement
DataQualityJobOutputConfig 
The output configuration for monitoring jobs.
Required: Yes
Type: MonitoringOutputConfig
Update requires: Replacement
EndpointName 
Property description not available.
Required: No
Type: String
Update requires: No interruption
JobDefinitionName 
The name for the monitoring job definition.
Required: No
Type: String
Update requires: Replacement
JobResources 
Identifies the resources to deploy for a monitoring job.
Required: Yes
Type: MonitoringResources
Update requires: Replacement
NetworkConfig 
Specifies networking configuration for the monitoring job.
Required: No
Type: NetworkConfig
Update requires: Replacement
RoleArn 
The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
Required: Yes
Type: String
Update requires: Replacement
StoppingCondition 
A time limit for how long the monitoring job is allowed to run before stopping.
Required: No
Type: StoppingCondition
Update requires: Replacement
Tags 
An array of key-value pairs to apply to this resource.
For more information, see Tag.
Required: No
Type: List of Tag
Update requires: Replacement
Return values
Ref
Fn::GetAtt

CreationTime 
The time when the job definition was created.
JobDefinitionArn 
The Amazon Resource Name (ARN) of the job definition.
Examples
SageMaker DataQualityJobDefinition Example
The following example creates a Data Quality monitoring job defintion.
JSON
```
{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Description": "Basic SageMaker Hosting entities to create a data quality job definition",
   "Mappings": {
      "RegionMap": {
         "us-west-2": {
            "MyModelImage": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
         },
         "us-east-2": {
            "MyModelImage": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
         },
         "us-east-1": {
            "MyModelImage": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
         },
         "eu-west-1": {
            "MyModelImage": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
         },
         "ap-northeast-1": {
            "MyModelImage": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
         },
         "ap-northeast-2": {
            "MyModelImage": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
         },
         "ap-southeast-2": {
            "MyModelImage": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
         },
         "eu-central-1": {
            "MyModelImage": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
         }
      }
   },
   "Resources": {
      "Endpoint": {
         "Type": "AWS::SageMaker::Endpoint",
         "Properties": {
            "EndpointConfigName": {
            "Fn::GetAtt": [
              "EndpointConfigWithDataCapture",
              "EndpointConfigName"
             ]
        }
     }
  },
  "EndpointConfigWithDataCapture": {
     "Type": "AWS::SageMaker::EndpointConfig",
     "Properties": {
        "ProductionVariants": [
           {
              "InitialInstanceCount": 1,
              "InitialVariantWeight": 1,
              "InstanceType": "ml.t2.large",
              "ModelName": {
                 "Fn::GetAtt": [
                   "Model",
                   "ModelName"
                  ]

            },
              "VariantName": {
                 "Fn::GetAtt": [
                   "Model",
                   "ModelName"
                  ]

            }
           }
        ],
        "DataCaptureConfig": {
           "EnableCapture": true,
           "InitialSamplingPercentage": 100,
           "DestinationS3Uri": "s3://bucket/prefix",
           "KmsKeyId": "kmskeyid",
           "CaptureOptions": [
              {
                 "CaptureMode": "Input"
              },
              {
                 "CaptureMode": "Output"
              }
           ],
           "CaptureContentTypeHeader": {
              "CsvContentTypes": [
                 "text/csv"
              ],
              "JsonContentTypes": [
                 "appplication/json"
              ]
           }
        }
     }
  },
  "Model": {
     "Type": "AWS::SageMaker::Model",
     "Properties": {
        "PrimaryContainer": {
           "Image": { "Fn::FindInMap": [
              "RegionMap",
              {"Ref": "AWS::Region"},
              "MyModelImage"
             ]
           }
        },
        "ExecutionRoleArn": {
                 "Fn::GetAtt": [
                   "ExecutionRole",
                   "Arn"
                  ]

            }
     }
  },
  "ExecutionRole": {
     "Type": "AWS::IAM::Role",
     "Properties": {
        "AssumeRolePolicyDocument": {
           "Version": "2012-10-17",
           "Statement": [
              {
                 "Effect": "Allow",
                 "Principal": {
                    "Service": [
                       "sagemaker.amazonaws.com"
                    ]
                 },
                 "Action": [
                    "sts:AssumeRole"
                 ]
              }
           ]
        },
        "Path": "/",
        "Policies": [
           {
              "PolicyName": "root",
              "PolicyDocument": {
                 "Version": "2012-10-17",
                 "Statement": [
                    {
                       "Effect": "Allow",
                       "Action": "*",
                       "Resource": "*"
                    }
                 ]
              }
           }
        ]
     }
  },
  "JobDefinitionExecutionRole": {
     "Type": "AWS::IAM::Role",
     "Properties": {
        "AssumeRolePolicyDocument": {
           "Version": "2012-10-17",
           "Statement": [
              {
                 "Effect": "Allow",
                 "Principal": {
                    "Service": [
                       "sagemaker.amazonaws.com"
                    ]
                 },
                 "Action": [
                    "sts:AssumeRole"
                 ]
              }
           ]
        },
        "ManagedPolicyArns": [
           {
              "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
           },
           {
              "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess"
           },
           {
              "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
           }
        ]
     }
  },
  "DataQualityJobDefinition": {
     "Type": "AWS::SageMaker::DataQualityJobDefinition",
     "Properties": {
        "DataQualityAppSpecification": {
           "ImageUri": {
              "Fn::Sub": "123456789012.dkr.ecr.${AWS::Partition}.amazonaws.com/sagemaker-model-monitor-analyzer:latest"
           }
        },
        "DataQualityJobInput": {
           "EndpointInput": {
              "EndpointName": {
                 "Fn::GetAtt": [
                   "Endpoint",
                   "EndpointName"
                  ]

            },
              "LocalPath": "/opt/ml/processing/endpointdata"
           }
        },
        "DataQualityJobOutputConfig": {
           "MonitoringOutputs": [
              {
                 "S3Output": {
                    "LocalPath": "/opt/ml/processing/localpath",
                    "S3Uri": {
                       "Fn::Sub": "s3://data-quality-job-definition-${AWS::AccountId}/output"
                    }
                 }
              }
           ]
        },
        "JobResources": {
           "ClusterConfig": {
              "InstanceCount": 1,
              "InstanceType": "ml.m5.large",
              "VolumeSizeInGB": 50
           }
        },
        "RoleArn": null,
        "StoppingCondition": {
           "MaxRuntimeInSeconds": 2000
        }
     }
  }

}
}
```
YAML
```
AWSTemplateFormatVersion: '2010-09-09'
Description: Basic SageMaker Hosting entities to create a data quality job definition
Mappings: 
  RegionMap: 
    "us-west-2":
      "MyModelImage": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
    "us-east-2":
      "MyModelImage": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
    "us-east-1":
      "MyModelImage": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
    "eu-west-1":
      "MyModelImage": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
    "ap-northeast-1":
      "MyModelImage": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
    "ap-northeast-2":
      "MyModelImage": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
    "ap-southeast-2":
      "MyModelImage": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
    "eu-central-1":
      "MyModelImage": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
Resources:
  Endpoint:
    Type: "AWS::SageMaker::Endpoint"
    Properties:
      EndpointConfigName:
        !GetAtt EndpointConfigWithDataCapture.EndpointConfigName
EndpointConfigWithDataCapture:
    Type: "AWS::SageMaker::EndpointConfig"
    Properties:
      ProductionVariants:
        - InitialInstanceCount: 1
          InitialVariantWeight: 1.0
          InstanceType: ml.t2.large
          ModelName: !GetAtt Model.ModelName
          VariantName: !GetAtt Model.ModelName
      DataCaptureConfig:
        EnableCapture: true
        InitialSamplingPercentage: 100
        DestinationS3Uri: s3://bucket/prefix
        KmsKeyId: kmskeyid
        CaptureOptions:
          - CaptureMode: Input
          - CaptureMode: Output
        CaptureContentTypeHeader:
          CsvContentTypes:
            - "text/csv"
          JsonContentTypes:
            - "appplication/json"
Model:
    Type: "AWS::SageMaker::Model"
    Properties:
      PrimaryContainer:
        Image: !FindInMap [RegionMap, !Ref "AWS::Region", "MyModelImage"]
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
ExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - 
          PolicyName: "root"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: ""
                Resource: ""
JobDefinitionExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess"
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
DataQualityJobDefinition:
    Type: AWS::SageMaker::DataQualityJobDefinition
    Properties:
      DataQualityAppSpecification:
        ImageUri:
          Fn::Sub: "123456789012.dkr.ecr.${AWS::Partition}.amazonaws.com/sagemaker-model-monitor-analyzer:latest"
      DataQualityJobInput:
        EndpointInput:
          EndpointName: !GetAtt Endpoint.EndpointName
          LocalPath: "/opt/ml/processing/endpointdata"
      DataQualityJobOutputConfig:
        MonitoringOutputs:
          - S3Output:
              LocalPath: "/opt/ml/processing/localpath"
              S3Uri:
                Fn::Sub: "s3://data-quality-job-definition-${AWS::AccountId}/output"
      JobResources:
        ClusterConfig:
          InstanceCount: 1
          InstanceType: ml.m5.large
          VolumeSizeInGB: 50
      RoleArn: !GetAtt JobDefinitionExecutionRole.Arn
      StoppingCondition:
        MaxRuntimeInSeconds: 2000
```

AWS::SageMaker::Device
The AWS::SageMaker::Device resource is an Amazon SageMaker resource type that allows you to register your Devices against an existing SageMaker Edge Manager DeviceFleet. Each device must be listed individually in the CFN specification.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::Device",
  "Properties" : {
      "[Device](#cfn-sagemaker-device-device)" : Device,
      "[DeviceFleetName](#cfn-sagemaker-device-devicefleetname)" : String,
      "[Tags](#cfn-sagemaker-device-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::Device
Properties: 
  [Device](#cfn-sagemaker-device-device): 
    Device
  [DeviceFleetName](#cfn-sagemaker-device-devicefleetname): String
  [Tags](#cfn-sagemaker-device-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
Device 
Edge device you want to create.
Required: No
Type: Device
Update requires: No interruption
DeviceFleetName 
The name of the fleet the device belongs to.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: No interruption
Tags 
An array of key-value pairs that contain metadata to help you categorize and organize your devices. Each tag consists of a key and a value, both of which you define.
Required: No
Type: List of Tag
Maximum: 50
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the DeviceFleetName.
For more information about using the Ref function, see Ref.

AWS::SageMaker::DeviceFleet
The AWS::SageMaker::DeviceFleet resource is an Amazon SageMaker resource type that allows you to create a DeviceFleet that manages your SageMaker Edge Manager Devices. You must register your devices against the DeviceFleet separately.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::DeviceFleet",
  "Properties" : {
      "[Description](#cfn-sagemaker-devicefleet-description)" : String,
      "[DeviceFleetName](#cfn-sagemaker-devicefleet-devicefleetname)" : String,
      "[OutputConfig](#cfn-sagemaker-devicefleet-outputconfig)" : EdgeOutputConfig,
      "[RoleArn](#cfn-sagemaker-devicefleet-rolearn)" : String,
      "[Tags](#cfn-sagemaker-devicefleet-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::DeviceFleet
Properties: 
  [Description](#cfn-sagemaker-devicefleet-description): String
  [DeviceFleetName](#cfn-sagemaker-devicefleet-devicefleetname): String
  [OutputConfig](#cfn-sagemaker-devicefleet-outputconfig): 
    EdgeOutputConfig
  [RoleArn](#cfn-sagemaker-devicefleet-rolearn): String
  [Tags](#cfn-sagemaker-devicefleet-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
Description 
A description of the fleet.
Required: No
Type: String
Update requires: No interruption
DeviceFleetName 
Name of the device fleet.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: Replacement
OutputConfig 
The output configuration for storing sample data collected by the fleet.
Required: Yes
Type: EdgeOutputConfig
Update requires: No interruption
RoleArn 
The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
Required: Yes
Type: String
Minimum: 20
Maximum: 2048
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Update requires: No interruption
Tags 
An array of key-value pairs that contain metadata to help you categorize and organize your device fleets. Each tag consists of a key and a value, both of which you define.
Required: No
Type: List of Tag
Maximum: 50
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the DeviceFleetName.
For more information about using the Ref function, see Ref.

AWS::SageMaker::Domain
Creates a Domain used by Amazon SageMaker Studio. A domain consists of an associated Amazon Elastic File System (EFS) volume, a list of authorized users, and a variety of security, application, policy, and Amazon Virtual Private Cloud (VPC) configurations. Users within a domain can share notebook files and other artifacts with each other.
EFS storage 
When a domain is created, an EFS volume is created for use by all of the users within the domain. Each user receives a private home directory within the EFS volume for notebooks, Git repositories, and data files.
SageMaker uses the AWS Key Management Service (AWS KMS) to encrypt the EFS volume attached to the domain with an AWS managed key by default. For more control, you can specify a customer managed key. For more information, see Protect Data at Rest Using Encryption.
VPC configuration 
All SageMaker Studio traffic between the domain and the EFS volume is through the specified VPC and subnets. For other Studio traffic, you can specify the AppNetworkAccessType parameter. AppNetworkAccessType corresponds to the network access type that you choose when you onboard to Studio. The following options are available:
+  PublicInternetOnly - Non-EFS traffic goes through a VPC managed by Amazon SageMaker, which allows internet access. This is the default value.
+  VpcOnly - All Studio traffic is through the specified VPC and subnets. Internet access is disabled by default. To allow internet access, you must specify a NAT gateway.
When internet access is disabled, you won't be able to run a Studio notebook or to train or host models unless your VPC has an interface endpoint to the SageMaker API and runtime or a NAT gateway and your security groups allow outbound connections.
Important
NFS traffic over TCP on port 2049 needs to be allowed in both inbound and outbound rules in order to launch a SageMaker Studio app successfully.
For more information, see Connect SageMaker Studio Notebooks to Resources in a VPC.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::Domain",
  "Properties" : {
      "[AppNetworkAccessType](#cfn-sagemaker-domain-appnetworkaccesstype)" : String,
      "[AppSecurityGroupManagement](#cfn-sagemaker-domain-appsecuritygroupmanagement)" : String,
      "[AuthMode](#cfn-sagemaker-domain-authmode)" : String,
      "[DefaultSpaceSettings](#cfn-sagemaker-domain-defaultspacesettings)" : DefaultSpaceSettings,
      "[DefaultUserSettings](#cfn-sagemaker-domain-defaultusersettings)" : UserSettings,
      "[DomainName](#cfn-sagemaker-domain-domainname)" : String,
      "[DomainSettings](#cfn-sagemaker-domain-domainsettings)" : DomainSettings,
      "[KmsKeyId](#cfn-sagemaker-domain-kmskeyid)" : String,
      "[SubnetIds](#cfn-sagemaker-domain-subnetids)" : [ String, ... ],
      "[Tags](#cfn-sagemaker-domain-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ],
      "[VpcId](#cfn-sagemaker-domain-vpcid)" : String
    }
}

YAML

Type: AWS::SageMaker::Domain
Properties: 
  [AppNetworkAccessType](#cfn-sagemaker-domain-appnetworkaccesstype): String
  [AppSecurityGroupManagement](#cfn-sagemaker-domain-appsecuritygroupmanagement): String
  [AuthMode](#cfn-sagemaker-domain-authmode): String
  [DefaultSpaceSettings](#cfn-sagemaker-domain-defaultspacesettings): 
    DefaultSpaceSettings
  [DefaultUserSettings](#cfn-sagemaker-domain-defaultusersettings): 
    UserSettings
  [DomainName](#cfn-sagemaker-domain-domainname): String
  [DomainSettings](#cfn-sagemaker-domain-domainsettings): 
    DomainSettings
  [KmsKeyId](#cfn-sagemaker-domain-kmskeyid): String
  [SubnetIds](#cfn-sagemaker-domain-subnetids): 
    - String
  [Tags](#cfn-sagemaker-domain-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)
  [VpcId](#cfn-sagemaker-domain-vpcid): String

Properties
AppNetworkAccessType 
Specifies the VPC used for non-EFS traffic. The default value is PublicInternetOnly.
+ PublicInternetOnly - Non-EFS traffic is through a VPC managed by Amazon SageMaker, which allows direct internet access
+ VpcOnly - All Studio traffic is through the specified VPC and subnets
Valid Values: PublicInternetOnly | VpcOnly
Required: No
Type: String
Update requires: Replacement
AppSecurityGroupManagement 
The entity that creates and manages the required security groups for inter-app communication in VpcOnly mode. Required when CreateDomain.AppNetworkAccessType is VpcOnly and DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleArn is provided.
Required: No
Type: String
Update requires: No interruption
AuthMode 
The mode of authentication that members use to access the Domain.
Valid Values: SSO | IAM
Required: Yes
Type: String
Update requires: Replacement
DefaultSpaceSettings 
Property description not available.
Required: No
Type: DefaultSpaceSettings
Update requires: No interruption
DefaultUserSettings 
The default user settings.
Required: Yes
Type: UserSettings
Update requires: No interruption
DomainName 
The domain name.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
DomainSettings 
A collection of settings that apply to the SageMaker Domain. These settings are specified through the CreateDomain API call.
Required: No
Type: DomainSettings
Update requires: No interruption
KmsKeyId 
SageMaker uses AWS KMS to encrypt the EFS volume attached to the Domain with an AWS managed customer master key (CMK) by default. For more control, specify a customer managed CMK.
Length Constraints: Maximum length of 2048.
Pattern: .*
Required: No
Type: String
Update requires: Replacement
SubnetIds 
The VPC subnets that Studio uses for communication.
Length Constraints: Maximum length of 32.
Array members: Minimum number of 1 item. Maximum number of 16 items.
Pattern: [-0-9a-zA-Z]+
Required: Yes
Type: List of String
Update requires: Replacement
Tags 
Tags to associated with the Domain. Each tag consists of a key and an optional value. Tag keys must be unique per resource. Tags are searchable using the Search API.
Tags that you specify for the Domain are also added to all apps that are launched in the Domain.
Array members: Minimum number of 0 items. Maximum number of 50 items.
Required: No
Type: List of Tag
Update requires: Replacement
VpcId 
The ID of the Amazon Virtual Private Cloud (Amazon VPC) that Studio uses for communication.
Length Constraints: Maximum length of 32.
Pattern: [-0-9a-zA-Z]+
Required: Yes
Type: String
Update requires: Replacement
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Domain ID, such as d-xxxxxxxxxxxx.
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.

DomainArn 
The Amazon Resource Name (ARN) of the Domain, such as arn:aws:sagemaker:us-west-2:account-id:domain/my-domain-name.
DomainId 
The Domain ID.
HomeEfsFileSystemId 
The ID of the Amazon Elastic File System (EFS) managed by this Domain.
SecurityGroupIdForDomainBoundary 
The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.
SingleSignOnManagedApplicationInstanceId 
The IAM Identity Center managed application instance ID.
Url 
The URL for the Domain.

AWS::SageMaker::Endpoint
Use the AWS::SageMaker::Endpoint resource to create an endpoint using the specified configuration in the request. Amazon SageMaker uses the endpoint to provision resources and deploy models. You create the endpoint configuration with the AWS::SageMaker::EndpointConfig resource. For more information, see Deploy a Model on Amazon SageMaker Hosting Services in the Amazon SageMaker Developer Guide.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::Endpoint",
  "Properties" : {
      "[DeploymentConfig](#cfn-sagemaker-endpoint-deploymentconfig)" : DeploymentConfig,
      "[EndpointConfigName](#cfn-sagemaker-endpoint-endpointconfigname)" : String,
      "[EndpointName](#cfn-sagemaker-endpoint-endpointname)" : String,
      "[ExcludeRetainedVariantProperties](#cfn-sagemaker-endpoint-excluderetainedvariantproperties)" : [ VariantProperty, ... ],
      "[RetainAllVariantProperties](#cfn-sagemaker-endpoint-retainallvariantproperties)" : Boolean,
      "[RetainDeploymentConfig](#cfn-sagemaker-endpoint-retaindeploymentconfig)" : Boolean,
      "[Tags](#cfn-sagemaker-endpoint-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::Endpoint
Properties: 
  [DeploymentConfig](#cfn-sagemaker-endpoint-deploymentconfig): 
    DeploymentConfig
  [EndpointConfigName](#cfn-sagemaker-endpoint-endpointconfigname): String
  [EndpointName](#cfn-sagemaker-endpoint-endpointname): String
  [ExcludeRetainedVariantProperties](#cfn-sagemaker-endpoint-excluderetainedvariantproperties): 
    - VariantProperty
  [RetainAllVariantProperties](#cfn-sagemaker-endpoint-retainallvariantproperties): Boolean
  [RetainDeploymentConfig](#cfn-sagemaker-endpoint-retaindeploymentconfig): Boolean
  [Tags](#cfn-sagemaker-endpoint-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
DeploymentConfig 
The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations.
Required: No
Type: DeploymentConfig
Update requires: No interruption
EndpointConfigName 
The name of the AWS::SageMaker::EndpointConfig resource that specifies the configuration for the endpoint. For more information, see CreateEndpointConfig.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: No interruption
EndpointName 
The name of the endpoint.The name must be unique within an AWS Region in your AWS account. The name is case-insensitive in CreateEndpoint, but the case is preserved and must be matched in https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIruntimeInvokeEndpoint.html.
Required: No
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
ExcludeRetainedVariantProperties 
When you are updating endpoint resources with RetainAllVariantProperties whose value is set to true, ExcludeRetainedVariantProperties specifies the list of type VariantProperty to override with the values provided by EndpointConfig. If you don't specify a value for ExcludeAllVariantProperties, no variant properties are overridden. Don't use this property when creating new endpoint resources or when RetainAllVariantProperties is set to false.
Required: No
Type: List of VariantProperty
Maximum: 3
Update requires: No interruption
RetainAllVariantProperties 
When updating endpoint resources, enables or disables the retention of variant properties, such as the instance count or the variant weight. To retain the variant properties of an endpoint when updating it, set RetainAllVariantProperties to true. To use the variant properties specified in a new EndpointConfig call when updating an endpoint, set RetainAllVariantProperties to false. Use this property only when updating endpoint resources, not when creating new endpoint resources.
Required: No
Type: Boolean
Update requires: No interruption
RetainDeploymentConfig 
Specifies whether to reuse the last deployment configuration. The default value is false (the configuration is not reused).
Required: No
Type: Boolean
Update requires: No interruption
Tags 
A list of key-value pairs to apply to this resource.
For more information, see Resource Tag and Using Cost Allocation Tags in the * AWS Billing and Cost Management User Guide.
*Required: No
Type: List of Tag
Maximum: 50
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Amazon Resource Name (ARN) of the endpoint, such as arn:aws:sagemaker:us-west-2:012345678901:endpoint/myendpoint.
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.
Fn::GetAtt returns a value for a specified attribute of this type. The following are the available attributes and sample return values. 

EndpointName 
The name of the endpoint, such as MyEndpoint. 
Examples
SageMaker Endpoint Example
The following example creates an endpoint configuration from a trained model, and then creates an endpoint.
JSON
```
{
  "Description": "Basic Hosting entities test.  We need models to create endpoint configs.",
  "Mappings": {
    "RegionMap": {
      "us-west-2": {
        "NullTransformer": "12345678901.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
      },
      "us-east-2": {
        "NullTransformer": "12345678901.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
      },
      "us-east-1": {
        "NullTransformer": "12345678901.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
      },
      "eu-west-1": {
        "NullTransformer": "12345678901.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
      },
      "ap-northeast-1": {
        "NullTransformer": "12345678901.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
      },
      "ap-northeast-2": {
        "NullTransformer": "12345678901.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
      },
      "ap-southeast-2": {
        "NullTransformer": "12345678901.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
      },
      "eu-central-1": {
        "NullTransformer": "12345678901.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
      }
    }
  },
  "Resources": {
    "Endpoint": {
      "Type": "AWS::SageMaker::Endpoint",
      "Properties": {
        "EndpointConfigName": { "Fn::GetAtt" : ["EndpointConfig", "EndpointConfigName" ] }
      }
    },
    "EndpointConfig": {
      "Type": "AWS::SageMaker::EndpointConfig",
      "Properties": {
        "ProductionVariants": [
          {
            "InitialInstanceCount": 1,
            "InitialVariantWeight": 1,
            "InstanceType": "ml.t2.large",
            "ModelName": { "Fn::GetAtt" : ["Model", "ModelName" ] },
            "VariantName": { "Fn::GetAtt" : ["Model", "ModelName" ] }
          }
        ]
      }
    },
    "Model": {
      "Type": "AWS::SageMaker::Model",
      "Properties": {
        "PrimaryContainer": {
          "Image": { "Fn::FindInMap" : [ "AWS::Region", "NullTransformer"] }
        },
        "ExecutionRoleArn": { "Fn::GetAtt" : [ "ExecutionRole", "Arn" ] }
      }
    },
    "ExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "sagemaker.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "",
                  "Resource": ""
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "EndpointId": {
      "Value": { "Ref" : "Endpoint" }
    },
    "EndpointName": {
      "Value": { "Fn::GetAtt" : [ "Endpoint", "EndpointName" ] }
    }
}
}
```
YAML
```
Description: "Basic Hosting entities test.  We need models to create endpoint configs."
Mappings: 
  RegionMap: 
    "us-west-2":
      "NullTransformer": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
    "us-east-2":
      "NullTransformer": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
    "us-east-1":
      "NullTransformer": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
    "eu-west-1":
      "NullTransformer": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
    "ap-northeast-1":
      "NullTransformer": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
    "ap-northeast-2":
      "NullTransformer": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
    "ap-southeast-2":
      "NullTransformer": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
    "eu-central-1":
      "NullTransformer": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
Resources:
  Endpoint:
    Type: "AWS::SageMaker::Endpoint"
    Properties:
      EndpointConfigName:
        !GetAtt EndpointConfig.EndpointConfigName
  EndpointConfig:
    Type: "AWS::SageMaker::EndpointConfig"
    Properties:
      ProductionVariants:
        - InitialInstanceCount: 1
          InitialVariantWeight: 1.0
          InstanceType: ml.t2.large
          ModelName: !GetAtt Model.ModelName
          VariantName: !GetAtt Model.ModelName
  Model:
    Type: "AWS::SageMaker::Model"
    Properties:
      PrimaryContainer:
        Image: !FindInMap [RegionMap, !Ref "AWS::Region", "NullTransformer"]
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
ExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - 
          PolicyName: "root"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: ""
                Resource: ""
Outputs:
  EndpointId:
    Value: !Ref Endpoint
  EndpointName:
    Value: !GetAtt Endpoint.EndpointName
```

AWS::SageMaker::EndpointConfig
The AWS::SageMaker::EndpointConfig resource creates a configuration for an Amazon SageMaker endpoint. For more information, see CreateEndpointConfig in the SageMaker Developer Guide.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::EndpointConfig",
  "Properties" : {
      "[AsyncInferenceConfig](#cfn-sagemaker-endpointconfig-asyncinferenceconfig)" : AsyncInferenceConfig,
      "[DataCaptureConfig](#cfn-sagemaker-endpointconfig-datacaptureconfig)" : DataCaptureConfig,
      "[EndpointConfigName](#cfn-sagemaker-endpointconfig-endpointconfigname)" : String,
      "[ExplainerConfig](#cfn-sagemaker-endpointconfig-explainerconfig)" : ExplainerConfig,
      "[KmsKeyId](#cfn-sagemaker-endpointconfig-kmskeyid)" : String,
      "[ProductionVariants](#cfn-sagemaker-endpointconfig-productionvariants)" : [ ProductionVariant, ... ],
      "[ShadowProductionVariants](#cfn-sagemaker-endpointconfig-shadowproductionvariants)" : [ ProductionVariant, ... ],
      "[Tags](#cfn-sagemaker-endpointconfig-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::EndpointConfig
Properties: 
  [AsyncInferenceConfig](#cfn-sagemaker-endpointconfig-asyncinferenceconfig): 
    AsyncInferenceConfig
  [DataCaptureConfig](#cfn-sagemaker-endpointconfig-datacaptureconfig): 
    DataCaptureConfig
  [EndpointConfigName](#cfn-sagemaker-endpointconfig-endpointconfigname): String
  [ExplainerConfig](#cfn-sagemaker-endpointconfig-explainerconfig): 
    ExplainerConfig
  [KmsKeyId](#cfn-sagemaker-endpointconfig-kmskeyid): String
  [ProductionVariants](#cfn-sagemaker-endpointconfig-productionvariants): 
    - ProductionVariant
  [ShadowProductionVariants](#cfn-sagemaker-endpointconfig-shadowproductionvariants): 
    - ProductionVariant
  [Tags](#cfn-sagemaker-endpointconfig-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
AsyncInferenceConfig 
Specifies configuration for how an endpoint performs asynchronous inference.
Required: No
Type: AsyncInferenceConfig
Update requires: Replacement
DataCaptureConfig 
Specifies how to capture endpoint data for model monitor. The data capture configuration applies to all production variants hosted at the endpoint.
Required: No
Type: DataCaptureConfig
Update requires: Replacement
EndpointConfigName 
The name of the endpoint configuration.
Required: No
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
ExplainerConfig 
Property description not available.
Required: No
Type: ExplainerConfig
Update requires: Replacement
KmsKeyId 
The Amazon Resource Name (ARN) of an AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
+ Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab
+ Key ARN: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
+ Alias name: alias/ExampleAlias
+ Alias name ARN: arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias
The KMS key policy must grant permission to the IAM role that you specify in your CreateEndpoint, UpdateEndpoint requests. For more information, refer to the AWS Key Management Service section Using Key Policies in AWS KMS 
Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can't request a KmsKeyId when using an instance type with local storage. If any of the models that you specify in the ProductionVariants parameter use nitro-based instances with local storage, do not specify a value for the KmsKeyId parameter. If you specify a value for KmsKeyId when using any nitro-based instances with local storage, the call to CreateEndpointConfig fails.
For a list of instance types that support local instance storage, see Instance Store Volumes.
For more information about local instance storage encryption, see SSD Instance Store Volumes.
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: Replacement
ProductionVariants 
A list of ProductionVariant objects, one for each model that you want to host at this endpoint.
Required: Yes
Type: List of ProductionVariant
Maximum: 10
Update requires: Replacement
ShadowProductionVariants 
Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants. If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants.
Required: No
Type: List of ProductionVariant
Maximum: 10
Update requires: Replacement
Tags 
A list of key-value pairs to apply to this resource.
For more information, see Resource Tag and Using Cost Allocation Tags.
Required: No
Type: List of Tag
Maximum: 50
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Amazon Resource Name (ARN) of the endpoint configuration, such as arn:aws:sagemaker:us-west-2:01234567>8901:endpoint-config/myendpointconfig 
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.
Fn::GetAtt returns a value for a specified attribute of this type. The following are the available attributes and sample return values.

EndpointConfigName 
The name of the endpoint configuration, such as MyEndpointConfiguration.
Examples
SageMaker EndpointConfig Example
The following example creates an endpoint configuration from a trained model, and then creates an endpoint.
JSON
```
{
  "Description": "Basic Hosting entities test.  We need models to create endpoint configs.",
  "Mappings": {
    "RegionMap": {
      "us-west-2": {
        "NullTransformer": "12345678901.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
      },
      "us-east-2": {
        "NullTransformer": "12345678901.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
      },
      "us-east-1": {
        "NullTransformer": "12345678901.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
      },
      "eu-west-1": {
        "NullTransformer": "12345678901.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
      },
      "ap-northeast-1": {
        "NullTransformer": "12345678901.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
      },
      "ap-northeast-2": {
        "NullTransformer": "12345678901.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
      },
      "ap-southeast-2": {
        "NullTransformer": "12345678901.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
      },
      "eu-central-1": {
        "NullTransformer": "12345678901.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
      }
    }
  },
  "Resources": {
    "Endpoint": {
      "Type": "AWS::SageMaker::Endpoint",
      "Properties": {
        "EndpointConfigName": { "Fn::GetAtt" : ["EndpointConfig", "EndpointConfigName" ] }
      }
    },
    "EndpointConfig": {
      "Type": "AWS::SageMaker::EndpointConfig",
      "Properties": {
        "ProductionVariants": [
          {
            "InitialInstanceCount": 1,
            "InitialVariantWeight": 1,
            "InstanceType": "ml.t2.large",
            "ModelName": { "Fn::GetAtt" : ["Model", "ModelName" ] },
            "VariantName": { "Fn::GetAtt" : ["Model", "ModelName" ] }
          }
        ]
      }
    },
    "Model": {
      "Type": "AWS::SageMaker::Model",
      "Properties": {
        "PrimaryContainer": {
          "Image": { "Fn::FindInMap" : [ "AWS::Region", "NullTransformer"] }
        },
        "ExecutionRoleArn": { "Fn::GetAtt" : [ "ExecutionRole", "Arn" ] }
      }
    },
    "ExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "sagemaker.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "",
                  "Resource": ""
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "EndpointId": {
      "Value": { "Ref" : "Endpoint" }
    },
    "EndpointName": {
      "Value": { "Fn::GetAtt" : [ "Endpoint", "EndpointName" ] }
    }
}
}
```
YAML
```
Description: "Basic Hosting entities test.  We need models to create endpoint configs."
Mappings: 
  RegionMap: 
    "us-west-2":
      "NullTransformer": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
    "us-east-2":
      "NullTransformer": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
    "us-east-1":
      "NullTransformer": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
    "eu-west-1":
      "NullTransformer": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
    "ap-northeast-1":
      "NullTransformer": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
    "ap-northeast-2":
      "NullTransformer": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
    "ap-southeast-2":
      "NullTransformer": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
    "eu-central-1":
      "NullTransformer": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
Resources:
  Endpoint:
    Type: "AWS::SageMaker::Endpoint"
    Properties:
      EndpointConfigName:
        !GetAtt EndpointConfig.EndpointConfigName
  EndpointConfig:
    Type: "AWS::SageMaker::EndpointConfig"
    Properties:
      ProductionVariants:
        - InitialInstanceCount: 1
          InitialVariantWeight: 1.0
          InstanceType: ml.t2.large
          ModelName: !GetAtt Model.ModelName
          VariantName: !GetAtt Model.ModelName
  Model:
    Type: "AWS::SageMaker::Model"
    Properties:
      PrimaryContainer:
        Image: !FindInMap [RegionMap, !Ref "AWS::Region", "NullTransformer"]
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
ExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - 
          PolicyName: "root"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: ""
                Resource: ""
Outputs:
  EndpointId:
    Value: !Ref Endpoint
  EndpointName:
    Value: !GetAtt Endpoint.EndpointName
```

AWS::SageMaker::FeatureGroup
Create a new FeatureGroup. A FeatureGroup is a group of Features defined in the FeatureStore to describe a Record. 
The FeatureGroup defines the schema and features contained in the FeatureGroup. A FeatureGroup definition is composed of a list of Features, a RecordIdentifierFeatureName, an EventTimeFeatureName and configurations for its OnlineStore and OfflineStore. Check AWS service quotas to see the FeatureGroups quota for your AWS account.
Important
You must include at least one of OnlineStoreConfig and OfflineStoreConfig to create a FeatureGroup.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::FeatureGroup",
  "Properties" : {
      "[Description](#cfn-sagemaker-featuregroup-description)" : String,
      "[EventTimeFeatureName](#cfn-sagemaker-featuregroup-eventtimefeaturename)" : String,
      "[FeatureDefinitions](#cfn-sagemaker-featuregroup-featuredefinitions)" : [ FeatureDefinition, ... ],
      "[FeatureGroupName](#cfn-sagemaker-featuregroup-featuregroupname)" : String,
      "[OfflineStoreConfig](#cfn-sagemaker-featuregroup-offlinestoreconfig)" : OfflineStoreConfig,
      "[OnlineStoreConfig](#cfn-sagemaker-featuregroup-onlinestoreconfig)" : OnlineStoreConfig,
      "[RecordIdentifierFeatureName](#cfn-sagemaker-featuregroup-recordidentifierfeaturename)" : String,
      "[RoleArn](#cfn-sagemaker-featuregroup-rolearn)" : String,
      "[Tags](#cfn-sagemaker-featuregroup-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::FeatureGroup
Properties: 
  [Description](#cfn-sagemaker-featuregroup-description): String
  [EventTimeFeatureName](#cfn-sagemaker-featuregroup-eventtimefeaturename): String
  [FeatureDefinitions](#cfn-sagemaker-featuregroup-featuredefinitions): 
    - FeatureDefinition
  [FeatureGroupName](#cfn-sagemaker-featuregroup-featuregroupname): String
  [OfflineStoreConfig](#cfn-sagemaker-featuregroup-offlinestoreconfig): 
    OfflineStoreConfig
  [OnlineStoreConfig](#cfn-sagemaker-featuregroup-onlinestoreconfig): 
    OnlineStoreConfig
  [RecordIdentifierFeatureName](#cfn-sagemaker-featuregroup-recordidentifierfeaturename): String
  [RoleArn](#cfn-sagemaker-featuregroup-rolearn): String
  [Tags](#cfn-sagemaker-featuregroup-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
Description 
A free form description of a FeatureGroup.
Required: No
Type: String
Maximum: 128
Update requires: Replacement
EventTimeFeatureName 
The name of the feature that stores the EventTime of a Record in a FeatureGroup.
A EventTime is point in time when a new event occurs that corresponds to the creation or update of a Record in FeatureGroup. All Records in the FeatureGroup must have a corresponding EventTime.
Required: Yes
Type: String
Minimum: 1
Maximum: 64
Pattern: ^[a-zA-Z0-9]([-_]*[a-zA-Z0-9]){0,63}
Update requires: Replacement
FeatureDefinitions 
A list of Features. Each Feature must include a FeatureName and a FeatureType.
Valid FeatureTypes are Integral, Fractional and String.
FeatureNames cannot be any of the following: is_deleted, write_time, api_invocation_time.
You can create up to 2,500 FeatureDefinitions per FeatureGroup.
Required: Yes
Type: List of FeatureDefinition
Maximum: 2500
Update requires: No interruption
FeatureGroupName 
The name of the FeatureGroup.
Required: Yes
Type: String
Minimum: 1
Maximum: 64
Pattern: ^[a-zA-Z0-9]([_-]*[a-zA-Z0-9]){0,63}
Update requires: Replacement
OfflineStoreConfig 
The configuration of an OfflineStore.
Required: No
Type: OfflineStoreConfig
Update requires: Replacement
OnlineStoreConfig 
The configuration of an OnlineStore.
Required: No
Type: OnlineStoreConfig
Update requires: Replacement
RecordIdentifierFeatureName 
The name of the Feature whose value uniquely identifies a Record defined in the FeatureGroup FeatureDefinitions.
Required: Yes
Type: String
Minimum: 1
Maximum: 64
Pattern: ^[a-zA-Z0-9]([-_]*[a-zA-Z0-9]){0,63}
Update requires: Replacement
RoleArn 
The Amazon Resource Name (ARN) of the IAM execution role used to create the feature group.
Required: No
Type: String
Minimum: 20
Maximum: 2048
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Update requires: Replacement
Tags 
Tags used to define a FeatureGroup.
Required: No
Type: List of Tag
Maximum: 50
Update requires: Replacement
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the FeatureGroupName of the feature group.

AWS::SageMaker::Image
Creates a custom SageMaker image. A SageMaker image is a set of image versions. Each image version represents a container image stored in Amazon Elastic Container Registry (ECR). For more information, see Bring your own SageMaker image.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::Image",
  "Properties" : {
      "[ImageDescription](#cfn-sagemaker-image-imagedescription)" : String,
      "[ImageDisplayName](#cfn-sagemaker-image-imagedisplayname)" : String,
      "[ImageName](#cfn-sagemaker-image-imagename)" : String,
      "[ImageRoleArn](#cfn-sagemaker-image-imagerolearn)" : String,
      "[Tags](#cfn-sagemaker-image-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::Image
Properties: 
  [ImageDescription](#cfn-sagemaker-image-imagedescription): String
  [ImageDisplayName](#cfn-sagemaker-image-imagedisplayname): String
  [ImageName](#cfn-sagemaker-image-imagename): String
  [ImageRoleArn](#cfn-sagemaker-image-imagerolearn): String
  [Tags](#cfn-sagemaker-image-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
ImageDescription 
The description of the image.
Length Constraints: Minimum length of 1. Maximum length of 512.
Pattern: .*
Required: No
Type: String
Update requires: No interruption
ImageDisplayName 
The display name of the image.
Length Constraints: Minimum length of 1. Maximum length of 128.
Pattern: ^\S(.*\S)?$
Required: No
Type: String
Update requires: No interruption
ImageName 
The name of the Image. Must be unique by region in your account.
Length Constraints: Minimum length of 1. Maximum length of 63.
Pattern: ^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$
Required: Yes
Type: String
Update requires: Replacement
ImageRoleArn 
The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.
Length Constraints: Minimum length of 20. Maximum length of 2048.
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Required: Yes
Type: String
Update requires: No interruption
Tags 
A list of key-value pairs to apply to this resource.
Array Members: Minimum number of 0 items. Maximum number of 50 items.
Required: No
Type: List of Tag
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the ImageArn.
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.

ImageArn 
The Amazon Resource Name (ARN) of the image.
Type: String
Length Constraints: Maximum length of 256.
Pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$

AWS::SageMaker::ImageVersion
Creates a version of the SageMaker image specified by ImageName. The version represents the Amazon Container Registry (ECR) container image specified by BaseImage.
Note
You can use the DependsOn attribute to specify that the creation of a specific resource follows another. You can use it for the following use cases. For more information, see DependsOn attribute.
1. DependsOn can be used to establish a parent/child relationship between ImageVersion and Image where the ImageVersion DependsOnthe Image.
2. DependsOn can be used to establish order among ImageVersions within the same Image namespace. For example, if ImageVersionB DependsOn ImageVersionA and both share the same parent Image, then ImageVersionA is version N and ImageVersionB is N+1.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::ImageVersion",
  "Properties" : {
      "[BaseImage](#cfn-sagemaker-imageversion-baseimage)" : String,
      "[ImageName](#cfn-sagemaker-imageversion-imagename)" : String
    }
}

YAML

Type: AWS::SageMaker::ImageVersion
Properties: 
  [BaseImage](#cfn-sagemaker-imageversion-baseimage): String
  [ImageName](#cfn-sagemaker-imageversion-imagename): String

Properties
BaseImage 
The container image that the SageMaker image version is based on.
Length Constraints: Minimum length of 1. Maximum length of 255.
Pattern: .*
Required: Yes
Type: String
Update requires: Replacement
ImageName 
The name of the parent image.
Length Constraints: Minimum length of 1. Maximum length of 63.
Pattern: ^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$
Required: Yes
Type: String
Update requires: Replacement
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the ImageVersionArn.
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.

ContainerImage 
The URI of the container image version referenced by ImageVersion.
ImageArn 
The Amazon Resource Name (ARN) of the parent Image.
ImageVersionArn 
The Amazon Resource Name (ARN) of the image version.
Type: String
Length Constraints: Maximum length of 256.
Pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$
Version 
The version of the image.

AWS::SageMaker::InferenceExperiment
Creates an inference experiment using the configurations specified in the request. 
Use this API to setup and schedule an experiment to compare model variants on a Amazon SageMaker inference endpoint. For more information about inference experiments, see Shadow tests. 
Amazon SageMaker begins your experiment at the scheduled time and routes traffic to your endpoint's model variants based on your specified configuration. 
While the experiment is in progress or after it has concluded, you can view metrics that compare your model variants. For more information, see View, monitor, and edit shadow tests. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::InferenceExperiment",
  "Properties" : {
      "[DataStorageConfig](#cfn-sagemaker-inferenceexperiment-datastorageconfig)" : DataStorageConfig,
      "[Description](#cfn-sagemaker-inferenceexperiment-description)" : String,
      "[DesiredState](#cfn-sagemaker-inferenceexperiment-desiredstate)" : String,
      "[EndpointName](#cfn-sagemaker-inferenceexperiment-endpointname)" : String,
      "[KmsKey](#cfn-sagemaker-inferenceexperiment-kmskey)" : String,
      "[ModelVariants](#cfn-sagemaker-inferenceexperiment-modelvariants)" : [ ModelVariantConfig, ... ],
      "[Name](#cfn-sagemaker-inferenceexperiment-name)" : String,
      "[RoleArn](#cfn-sagemaker-inferenceexperiment-rolearn)" : String,
      "[Schedule](#cfn-sagemaker-inferenceexperiment-schedule)" : InferenceExperimentSchedule,
      "[ShadowModeConfig](#cfn-sagemaker-inferenceexperiment-shadowmodeconfig)" : ShadowModeConfig,
      "[StatusReason](#cfn-sagemaker-inferenceexperiment-statusreason)" : String,
      "[Tags](#cfn-sagemaker-inferenceexperiment-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ],
      "[Type](#cfn-sagemaker-inferenceexperiment-type)" : String
    }
}

YAML

Type: AWS::SageMaker::InferenceExperiment
Properties: 
  [DataStorageConfig](#cfn-sagemaker-inferenceexperiment-datastorageconfig): 
    DataStorageConfig
  [Description](#cfn-sagemaker-inferenceexperiment-description): String
  [DesiredState](#cfn-sagemaker-inferenceexperiment-desiredstate): String
  [EndpointName](#cfn-sagemaker-inferenceexperiment-endpointname): String
  [KmsKey](#cfn-sagemaker-inferenceexperiment-kmskey): String
  [ModelVariants](#cfn-sagemaker-inferenceexperiment-modelvariants): 
    - ModelVariantConfig
  [Name](#cfn-sagemaker-inferenceexperiment-name): String
  [RoleArn](#cfn-sagemaker-inferenceexperiment-rolearn): String
  [Schedule](#cfn-sagemaker-inferenceexperiment-schedule): 
    InferenceExperimentSchedule
  [ShadowModeConfig](#cfn-sagemaker-inferenceexperiment-shadowmodeconfig): 
    ShadowModeConfig
  [StatusReason](#cfn-sagemaker-inferenceexperiment-statusreason): String
  [Tags](#cfn-sagemaker-inferenceexperiment-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)
  [Type](#cfn-sagemaker-inferenceexperiment-type): String

Properties
DataStorageConfig 
The Amazon S3 location and configuration for storing inference request and response data.
Required: No
Type: DataStorageConfig
Update requires: No interruption
Description 
The description of the inference experiment.
Required: No
Type: String
Maximum: 1024
Pattern: .*
Update requires: No interruption
DesiredState 
 The desired state of the experiment after stopping. The possible states are the following:
+  Completed: The experiment completed successfully
+  Cancelled: The experiment was canceled
Required: No
Type: String
Allowed values: Cancelled | Completed
Update requires: No interruption
EndpointName 
The name of the endpoint.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
KmsKey 
 The AWS Key Management Service key that Amazon SageMaker uses to encrypt captured data at rest using Amazon S3 server-side encryption.
Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: Replacement
ModelVariants 
 An array of ModelVariantConfigSummary objects. There is one for each variant in the inference experiment. Each ModelVariantConfigSummary object in the array describes the infrastructure configuration for deploying the corresponding variant.
Required: Yes
Type: List of ModelVariantConfig
Update requires: No interruption
Name 
The name of the inference experiment.
Required: Yes
Type: String
Minimum: 1
Maximum: 120
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,119}
Update requires: Replacement
RoleArn 
 The ARN of the IAM role that Amazon SageMaker can assume to access model artifacts and container images, and manage Amazon SageMaker Inference endpoints for model deployment.
Required: Yes
Type: String
Minimum: 20
Maximum: 2048
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Update requires: Replacement
Schedule 
The duration for which the inference experiment ran or will run.
The maximum duration that you can set for an inference experiment is 30 days.
Required: No
Type: InferenceExperimentSchedule
Update requires: No interruption
ShadowModeConfig 
 The configuration of ShadowMode inference experiment type, which shows the production variant that takes all the inference requests, and the shadow variant to which Amazon SageMaker replicates a percentage of the inference requests. For the shadow variant it also shows the percentage of requests that Amazon SageMaker replicates.
Required: No
Type: ShadowModeConfig
Update requires: No interruption
StatusReason 
The error message for the inference experiment status result.
Required: No
Type: String
Maximum: 1024
Pattern: .*
Update requires: No interruption
Tags 
An array of key-value pairs to apply to this resource.
For more information, see Tag.
Required: No
Type: List of Tag
Update requires: No interruption
Type 
The type of the inference experiment.
Required: Yes
Type: String
Allowed values: ShadowMode
Update requires: Replacement
Return values
Ref
Fn::GetAtt

Arn 
Property description not available.
CreationTime 
Property description not available.
EndpointMetadata 
Property description not available.
EndpointMetadata.EndpointConfigName 
Property description not available.
EndpointMetadata.EndpointName 
Property description not available.
EndpointMetadata.EndpointStatus 
Property description not available.
LastModifiedTime 
Property description not available.
Status 
Property description not available.

AWS::SageMaker::Model
The AWS::SageMaker::Model resource to create a model to host at an Amazon SageMaker endpoint. For more information, see Deploying a Model on Amazon SageMaker Hosting Services in the Amazon SageMaker Developer Guide. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::Model",
  "Properties" : {
      "[Containers](#cfn-sagemaker-model-containers)" : [ ContainerDefinition, ... ],
      "[EnableNetworkIsolation](#cfn-sagemaker-model-enablenetworkisolation)" : Boolean,
      "[ExecutionRoleArn](#cfn-sagemaker-model-executionrolearn)" : String,
      "[InferenceExecutionConfig](#cfn-sagemaker-model-inferenceexecutionconfig)" : InferenceExecutionConfig,
      "[ModelName](#cfn-sagemaker-model-modelname)" : String,
      "[PrimaryContainer](#cfn-sagemaker-model-primarycontainer)" : ContainerDefinition,
      "[Tags](#cfn-sagemaker-model-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ],
      "[VpcConfig](#cfn-sagemaker-model-vpcconfig)" : VpcConfig
    }
}

YAML

Type: AWS::SageMaker::Model
Properties: 
  [Containers](#cfn-sagemaker-model-containers): 
    - ContainerDefinition
  [EnableNetworkIsolation](#cfn-sagemaker-model-enablenetworkisolation): Boolean
  [ExecutionRoleArn](#cfn-sagemaker-model-executionrolearn): String
  [InferenceExecutionConfig](#cfn-sagemaker-model-inferenceexecutionconfig): 
    InferenceExecutionConfig
  [ModelName](#cfn-sagemaker-model-modelname): String
  [PrimaryContainer](#cfn-sagemaker-model-primarycontainer): 
    ContainerDefinition
  [Tags](#cfn-sagemaker-model-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)
  [VpcConfig](#cfn-sagemaker-model-vpcconfig): 
    VpcConfig

Properties
Containers 
Specifies the containers in the inference pipeline.
Required: No
Type: List of ContainerDefinition
Maximum: 15
Update requires: Replacement
EnableNetworkIsolation 
Isolates the model container. No inbound or outbound network calls can be made to or from the model container.
Required: No
Type: Boolean
Update requires: Replacement
ExecutionRoleArn 
The Amazon Resource Name (ARN) of the IAM role that SageMaker can assume to access model artifacts and docker image for deployment on ML compute instances or for batch transform jobs. Deploying on ML compute instances is part of model hosting. For more information, see SageMaker Roles.
To be able to pass this role to SageMaker, the caller of this API must have the iam:PassRole permission.
Required: Yes
Type: String
Minimum: 20
Maximum: 2048
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Update requires: Replacement
InferenceExecutionConfig 
Specifies details of how containers in a multi-container endpoint are called.
Required: No
Type: InferenceExecutionConfig
Update requires: Replacement
ModelName 
The name of the new model.
Required: No
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
Update requires: Replacement
PrimaryContainer 
The location of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed for predictions.
Required: No
Type: ContainerDefinition
Update requires: Replacement
Tags 
A list of key-value pairs to apply to this resource.
For more information, see Resource Tag and Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide.
Required: No
Type: List of Tag
Maximum: 50
Update requires: No interruption
VpcConfig 
A VpcConfig object that specifies the VPC that you want your model to connect to. Control access to and from your model container by configuring the VPC. VpcConfig is used in hosting services and in batch transform. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud and Protect Data in Batch Transform Jobs by Using an Amazon Virtual Private Cloud.
Required: No
Type: VpcConfig
Update requires: Replacement
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Amazon Resource Name (ARN) of the model, such as arn:aws:sagemaker:us-west-2:012345678901:model/mymodel.
When you pass the logical ID of an AWS::SageMaker::Model resource to the intrinsic Ref function, the function returns the Amazon Resource Name (ARN) of the model, such as arn:aws:sagemaker:us-west-2:012345678901:model/mymodel.
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.
Fn::GetAtt returns a value for a specified attribute of this type. The following are the available attributes and sample return values. 

ModelName 
The name of the model, such as MyModel.
Examples
SageMaker Model Endpoint Example
The following example creates an endpoint configuration from a trained model, and then creates an endpoint.
JSON
```
{
  "Description": "Basic Hosting entities test.  We need models to create endpoint configs.",
  "Mappings": {
    "RegionMap": {
      "us-west-2": {
        "NullTransformer": "12345678901.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
      },
      "us-east-2": {
        "NullTransformer": "12345678901.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
      },
      "us-east-1": {
        "NullTransformer": "12345678901.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
      },
      "eu-west-1": {
        "NullTransformer": "12345678901.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
      },
      "ap-northeast-1": {
        "NullTransformer": "12345678901.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
      },
      "ap-northeast-2": {
        "NullTransformer": "12345678901.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
      },
      "ap-southeast-2": {
        "NullTransformer": "12345678901.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
      },
      "eu-central-1": {
        "NullTransformer": "12345678901.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
      }
    }
  },
  "Resources": {
    "Endpoint": {
      "Type": "AWS::SageMaker::Endpoint",
      "Properties": {
        "EndpointConfigName": { "Fn::GetAtt" : ["EndpointConfig", "EndpointConfigName" ] }
      }
    },
    "EndpointConfig": {
      "Type": "AWS::SageMaker::EndpointConfig",
      "Properties": {
        "ProductionVariants": [
          {
            "InitialInstanceCount": 1,
            "InitialVariantWeight": 1,
            "InstanceType": "ml.t2.large",
            "ModelName": { "Fn::GetAtt" : ["Model", "ModelName" ] },
            "VariantName": { "Fn::GetAtt" : ["Model", "ModelName" ] }
          }
        ]
      }
    },
    "Model": {
      "Type": "AWS::SageMaker::Model",
      "Properties": {
        "PrimaryContainer": {
          "Image": { "Fn::FindInMap" : [ "AWS::Region", "NullTransformer"] }
        },
        "ExecutionRoleArn": { "Fn::GetAtt" : [ "ExecutionRole", "Arn" ] }
      }
    },
    "ExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "sagemaker.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "",
                  "Resource": ""
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "EndpointId": {
      "Value": { "Ref" : "Endpoint" }
    },
    "EndpointName": {
      "Value": { "Fn::GetAtt" : [ "Endpoint", "EndpointName" ] }
    }
}
}
```
YAML
```
Description: "Basic Hosting entities test.  We need models to create endpoint configs."
Mappings: 
  RegionMap: 
    "us-west-2":
      "NullTransformer": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
    "us-east-2":
      "NullTransformer": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
    "us-east-1":
      "NullTransformer": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
    "eu-west-1":
      "NullTransformer": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
    "ap-northeast-1":
      "NullTransformer": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
    "ap-northeast-2":
      "NullTransformer": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
    "ap-southeast-2":
      "NullTransformer": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
    "eu-central-1":
      "NullTransformer": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
Resources:
  Endpoint:
    Type: "AWS::SageMaker::Endpoint"
    Properties:
      EndpointConfigName:
        !GetAtt EndpointConfig.EndpointConfigName
  EndpointConfig:
    Type: "AWS::SageMaker::EndpointConfig"
    Properties:
      ProductionVariants:
        - InitialInstanceCount: 1
          InitialVariantWeight: 1.0
          InstanceType: ml.t2.large
          ModelName: !GetAtt Model.ModelName
          VariantName: !GetAtt Model.ModelName
  Model:
    Type: "AWS::SageMaker::Model"
    Properties:
      PrimaryContainer:
        Image: !FindInMap [RegionMap, !Ref "AWS::Region", "NullTransformer"]
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
ExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - 
          PolicyName: "root"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: ""
                Resource: ""
Outputs:
  EndpointId:
    Value: !Ref Endpoint
  EndpointName:
    Value: !GetAtt Endpoint.EndpointName
```

AWS::SageMaker::ModelBiasJobDefinition
Creates the definition for a model bias job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::ModelBiasJobDefinition",
  "Properties" : {
      "[EndpointName](#cfn-sagemaker-modelbiasjobdefinition-endpointname)" : String,
      "[JobDefinitionName](#cfn-sagemaker-modelbiasjobdefinition-jobdefinitionname)" : String,
      "[JobResources](#cfn-sagemaker-modelbiasjobdefinition-jobresources)" : MonitoringResources,
      "[ModelBiasAppSpecification](#cfn-sagemaker-modelbiasjobdefinition-modelbiasappspecification)" : ModelBiasAppSpecification,
      "[ModelBiasBaselineConfig](#cfn-sagemaker-modelbiasjobdefinition-modelbiasbaselineconfig)" : ModelBiasBaselineConfig,
      "[ModelBiasJobInput](#cfn-sagemaker-modelbiasjobdefinition-modelbiasjobinput)" : ModelBiasJobInput,
      "[ModelBiasJobOutputConfig](#cfn-sagemaker-modelbiasjobdefinition-modelbiasjoboutputconfig)" : MonitoringOutputConfig,
      "[NetworkConfig](#cfn-sagemaker-modelbiasjobdefinition-networkconfig)" : NetworkConfig,
      "[RoleArn](#cfn-sagemaker-modelbiasjobdefinition-rolearn)" : String,
      "[StoppingCondition](#cfn-sagemaker-modelbiasjobdefinition-stoppingcondition)" : StoppingCondition,
      "[Tags](#cfn-sagemaker-modelbiasjobdefinition-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::ModelBiasJobDefinition
Properties: 
  [EndpointName](#cfn-sagemaker-modelbiasjobdefinition-endpointname): String
  [JobDefinitionName](#cfn-sagemaker-modelbiasjobdefinition-jobdefinitionname): String
  [JobResources](#cfn-sagemaker-modelbiasjobdefinition-jobresources): 
    MonitoringResources
  [ModelBiasAppSpecification](#cfn-sagemaker-modelbiasjobdefinition-modelbiasappspecification): 
    ModelBiasAppSpecification
  [ModelBiasBaselineConfig](#cfn-sagemaker-modelbiasjobdefinition-modelbiasbaselineconfig): 
    ModelBiasBaselineConfig
  [ModelBiasJobInput](#cfn-sagemaker-modelbiasjobdefinition-modelbiasjobinput): 
    ModelBiasJobInput
  [ModelBiasJobOutputConfig](#cfn-sagemaker-modelbiasjobdefinition-modelbiasjoboutputconfig): 
    MonitoringOutputConfig
  [NetworkConfig](#cfn-sagemaker-modelbiasjobdefinition-networkconfig): 
    NetworkConfig
  [RoleArn](#cfn-sagemaker-modelbiasjobdefinition-rolearn): String
  [StoppingCondition](#cfn-sagemaker-modelbiasjobdefinition-stoppingcondition): 
    StoppingCondition
  [Tags](#cfn-sagemaker-modelbiasjobdefinition-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
EndpointName 
Property description not available.
Required: No
Type: String
Update requires: No interruption
JobDefinitionName 
The name of the bias job definition. The name must be unique within an AWS Region in the AWS account.
Required: No
Type: String
Update requires: Replacement
JobResources 
Identifies the resources to deploy for a monitoring job.
Required: Yes
Type: MonitoringResources
Update requires: Replacement
ModelBiasAppSpecification 
Configures the model bias job to run a specified Docker container image.
Required: Yes
Type: ModelBiasAppSpecification
Update requires: Replacement
ModelBiasBaselineConfig 
The baseline configuration for a model bias job.
Required: No
Type: ModelBiasBaselineConfig
Update requires: Replacement
ModelBiasJobInput 
Inputs for the model bias job.
Required: Yes
Type: ModelBiasJobInput
Update requires: Replacement
ModelBiasJobOutputConfig 
The output configuration for monitoring jobs.
Required: Yes
Type: MonitoringOutputConfig
Update requires: Replacement
NetworkConfig 
Networking options for a model bias job.
Required: No
Type: NetworkConfig
Update requires: Replacement
RoleArn 
The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
Required: Yes
Type: String
Update requires: Replacement
StoppingCondition 
A time limit for how long the monitoring job is allowed to run before stopping.
Required: No
Type: StoppingCondition
Update requires: Replacement
Tags 
An array of key-value pairs to apply to this resource.
For more information, see Tag.
Required: No
Type: List of Tag
Update requires: Replacement
Return values
Ref
Fn::GetAtt

CreationTime 
The time when the job definition was created.
JobDefinitionArn 
The Amazon Resource Name (ARN) of the job definition.
Examples
SageMaker ModelBiasJobDefinition Example
The following example creates a Model Bias monitoring job definition.
JSON

{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Description": "Basic SageMaker Hosting entities to create a model bias job definition",
   "Mappings": {
      "RegionMap": {
         "us-west-2": {
            "MyModelImage": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
         },
         "us-east-2": {
            "MyModelImage": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
         },
         "us-east-1": {
            "MyModelImage": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
         },
         "eu-west-1": {
            "MyModelImage": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
         },
         "ap-northeast-1": {
            "MyModelImage": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
         },
         "ap-northeast-2": {
            "MyModelImage": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
         },
         "ap-southeast-2": {
            "MyModelImage": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
         },
         "eu-central-1": {
            "MyModelImage": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
         }
      }
   },
   "Resources": {
      "Endpoint": {
         "Type": "AWS::SageMaker::Endpoint",
         "Properties": {
            "EndpointConfigName": null
         }
      },
      "EndpointConfigWithDataCapture": {
         "Type": "AWS::SageMaker::EndpointConfig",
         "Properties": {
            "ProductionVariants": [
               {
                  "InitialInstanceCount": 1,
                  "InitialVariantWeight": 1,
                  "InstanceType": "ml.t2.large",
                  "ModelName": null,
                  "VariantName": null
               }
            ],
            "DataCaptureConfig": {
               "EnableCapture": true,
               "InitialSamplingPercentage": 100,
               "DestinationS3Uri": "s3://bucket/prefix",
               "KmsKeyId": "kmskeyid",
               "CaptureOptions": [
                  {
                     "CaptureMode": "Input"
                  }
               ],
               "CaptureContentTypeHeader": {
                  "CsvContentTypes": [
                     "text/csv"
                  ],
                  "JsonContentTypes": [
                     "application/json"
                  ]
               }
            }
         }
      },
      "Model": {
         "Type": "AWS::SageMaker::Model",
         "Properties": {
            "PrimaryContainer": {
               "Image": null
            },
            "ExecutionRoleArn": null
         }
      },
      "ExecutionRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version": "2012-10-17",
               "Statement": [
                  {
                     "Effect": "Allow",
                     "Principal": {
                        "Service": [
                           "sagemaker.amazonaws.com"
                        ]
                     },
                     "Action": [
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "Path": "/",
            "Policies": [
               {
                  "PolicyName": "root",
                  "PolicyDocument": {
                     "Version": "2012-10-17",
                     "Statement": [
                        {
                           "Effect": "Allow",
                           "Action": "*",
                           "Resource": "*"
                        }
                     ]
                  }
               }
            ]
         }
      },
      "JobDefinitionExecutionRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version": "2012-10-17",
               "Statement": [
                  {
                     "Effect": "Allow",
                     "Principal": {
                        "Service": [
                           "sagemaker.amazonaws.com"
                        ]
                     },
                     "Action": [
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "ManagedPolicyArns": [
               {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
               },
               {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess"
               },
               {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
               }
            ]
         }
      },
      "JobDefinition": {
         "Type": "AWS::SageMaker::ModelBiasJobDefinition",
         "Properties": {
            "ModelBiasAppSpecification": {
               "ImageUri": {
                  "Fn::Sub": "123456789012.dkr.ecr.${AWS::Partition}.amazonaws.com/sagemaker-clarify-processing:1.0"
               },
               "ConfigUri": "s3://configUri"
            },
            "ModelBiasJobInput": {
               "EndpointInput": {
                  "EndpointName": null,
                  "LocalPath": "/opt/ml/processing/endpointdata",
                  "FeaturesAttribute": "feature",
                  "InferenceAttribute": "inference",
                  "ProbabilityAttribute": "probability",
                  "ProbabilityThresholdAttribute": 0.8,
                  "StartTimeOffset": "-PT1H",
                  "EndTimeOffset": "-P0D"
               },
               "GroundTruthS3Input": {
                  "S3Uri": {
                     "Fn::Sub": "s3://model-bias-job-definition-${AWS::AccountId}/groundtruth"
                  }
               }
            },
            "ModelBiasJobOutputConfig": {
               "MonitoringOutputs": [
                  {
                     "S3Output": {
                        "LocalPath": "/opt/ml/processing/localpath",
                        "S3Uri": {
                           "Fn::Sub": "s3://model-bias-job-definition-${AWS::AccountId}/output"
                        }
                     }
                  }
               ]
            },
            "JobResources": {
               "ClusterConfig": {
                  "InstanceCount": 1,
                  "InstanceType": "ml.m5.large",
                  "VolumeSizeInGB": 50
               }
            },
            "RoleArn": null,
            "StoppingCondition": {
               "MaxRuntimeInSeconds": 2000
            }
         }
      }
   }
}

YAML
```
AWSTemplateFormatVersion: '2010-09-09'
Description: Basic SageMaker Hosting entities to create a model bias job definition
Mappings: 
  RegionMap: 
    "us-west-2":
      "MyModelImage": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
    "us-east-2":
      "MyModelImage": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
    "us-east-1":
      "MyModelImage": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
    "eu-west-1":
      "MyModelImage": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
    "ap-northeast-1":
      "MyModelImage": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
    "ap-northeast-2":
      "MyModelImage": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
    "ap-southeast-2":
      "MyModelImage": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
    "eu-central-1":
      "MyModelImage": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
Resources:
  Endpoint:
    Type: "AWS::SageMaker::Endpoint"
    Properties:
      EndpointConfigName:
        !GetAtt EndpointConfigWithDataCapture.EndpointConfigName
EndpointConfigWithDataCapture:
    Type: "AWS::SageMaker::EndpointConfig"
    Properties:
      ProductionVariants:
        - InitialInstanceCount: 1
          InitialVariantWeight: 1.0
          InstanceType: ml.t2.large
          ModelName: !GetAtt Model.ModelName
          VariantName: !GetAtt Model.ModelName
      DataCaptureConfig:
        EnableCapture: true
        InitialSamplingPercentage: 100
        DestinationS3Uri: s3://bucket/prefix
        KmsKeyId: kmskeyid
        CaptureOptions:
          - CaptureMode: Input
        CaptureContentTypeHeader:
          CsvContentTypes:
            - "text/csv"
          JsonContentTypes:
            - "application/json"
Model:
    Type: "AWS::SageMaker::Model"
    Properties:
      PrimaryContainer:
        Image: !FindInMap [RegionMap, !Ref "AWS::Region", "MyModelImage"]
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
ExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - 
          PolicyName: "root"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: ""
                Resource: ""
JobDefinitionExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess"
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
JobDefinition:
    Type: AWS::SageMaker::ModelBiasJobDefinition
    Properties:
      ModelBiasAppSpecification:
        ImageUri:
          Fn::Sub: "123456789012.dkr.ecr.${AWS::Partition}.amazonaws.com/sagemaker-clarify-processing:1.0"
        ConfigUri: "s3://configUri"
      ModelBiasJobInput:
        EndpointInput:
          EndpointName: !GetAtt Endpoint.EndpointName
          LocalPath: "/opt/ml/processing/endpointdata"
          FeaturesAttribute: feature
          InferenceAttribute: inference
          ProbabilityAttribute: probability
          ProbabilityThresholdAttribute: 0.8
          StartTimeOffset: "-PT1H"
          EndTimeOffset: "-P0D"
        GroundTruthS3Input:
          S3Uri:
            Fn::Sub: "s3://model-bias-job-definition-${AWS::AccountId}/groundtruth"
      ModelBiasJobOutputConfig:
        MonitoringOutputs:
          - S3Output:
              LocalPath: "/opt/ml/processing/localpath"
              S3Uri:
                Fn::Sub: "s3://model-bias-job-definition-${AWS::AccountId}/output"
      JobResources:
        ClusterConfig:
          InstanceCount: 1
          InstanceType: ml.m5.large
          VolumeSizeInGB: 50
      RoleArn: !GetAtt JobDefinitionExecutionRole.Arn
      StoppingCondition:
        MaxRuntimeInSeconds: 2000
```

AWS::SageMaker::ModelCard
Creates an Amazon SageMaker Model Card.
For information about how to use model cards, see Amazon SageMaker Model Card.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::ModelCard",
  "Properties" : {
      "[Content](#cfn-sagemaker-modelcard-content)" : Content,
      "[CreatedBy](#cfn-sagemaker-modelcard-createdby)" : UserContext,
      "[LastModifiedBy](#cfn-sagemaker-modelcard-lastmodifiedby)" : UserContext,
      "[ModelCardName](#cfn-sagemaker-modelcard-modelcardname)" : String,
      "[ModelCardStatus](#cfn-sagemaker-modelcard-modelcardstatus)" : String,
      "[SecurityConfig](#cfn-sagemaker-modelcard-securityconfig)" : SecurityConfig,
      "[Tags](#cfn-sagemaker-modelcard-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::ModelCard
Properties: 
  [Content](#cfn-sagemaker-modelcard-content): 
    Content
  [CreatedBy](#cfn-sagemaker-modelcard-createdby): 
    UserContext
  [LastModifiedBy](#cfn-sagemaker-modelcard-lastmodifiedby): 
    UserContext
  [ModelCardName](#cfn-sagemaker-modelcard-modelcardname): String
  [ModelCardStatus](#cfn-sagemaker-modelcard-modelcardstatus): String
  [SecurityConfig](#cfn-sagemaker-modelcard-securityconfig): 
    SecurityConfig
  [Tags](#cfn-sagemaker-modelcard-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
Content 
The content of the model card. Content uses the model card JSON schema.
Required: Yes
Type: Content
Update requires: No interruption
CreatedBy 
Information about the user who created or modified one or more of the following:
+ Experiment
+ Trial
+ Trial component
+ Lineage group
+ Project
+ Model Card
Required: No
Type: UserContext
Update requires: No interruption
LastModifiedBy 
Property description not available.
Required: No
Type: UserContext
Update requires: No interruption
ModelCardName 
The unique name of the model card.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: Replacement
ModelCardStatus 
The approval status of the model card within your organization. Different organizations might have different criteria for model card review and approval.
+  Draft: The model card is a work in progress.
+  PendingReview: The model card is pending review.
+  Approved: The model card is approved.
+  Archived: The model card is archived. No more updates should be made to the model card, but it can still be exported.
Required: Yes
Type: String
Allowed values: Approved | Archived | Draft | PendingReview
Update requires: No interruption
SecurityConfig 
The security configuration used to protect model card data.
Required: No
Type: SecurityConfig
Update requires: Replacement
Tags 
Key-value pairs used to manage metadata for the model card.
Required: No
Type: List of Tag
Maximum: 50
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the model card name.
For more information about using the Ref function, see Ref.
Fn::GetAtt
Fn::GetAtt returns a value for a specified attribute of this type. The following are the available attributes and sample return values. For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt. 

CreatedBy.DomainId 
Property description not available.
CreatedBy.UserProfileArn 
Property description not available.
CreationTime 
Property description not available.
LastModifiedBy.DomainId 
Property description not available.
LastModifiedBy.UserProfileArn 
Property description not available.
ModelCardArn 
The Amazon Resource Number (ARN) of the model card. For example, arn:aws:sagemaker:us-west-2:012345678901:modelcard/examplemodelcard.
ModelCardProcessingStatus 
Property description not available.

AWS::SageMaker::ModelExplainabilityJobDefinition
Creates the definition for a model explainability job.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::ModelExplainabilityJobDefinition",
  "Properties" : {
      "[EndpointName](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointname)" : String,
      "[JobDefinitionName](#cfn-sagemaker-modelexplainabilityjobdefinition-jobdefinitionname)" : String,
      "[JobResources](#cfn-sagemaker-modelexplainabilityjobdefinition-jobresources)" : MonitoringResources,
      "[ModelExplainabilityAppSpecification](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityappspecification)" : ModelExplainabilityAppSpecification,
      "[ModelExplainabilityBaselineConfig](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilitybaselineconfig)" : ModelExplainabilityBaselineConfig,
      "[ModelExplainabilityJobInput](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityjobinput)" : ModelExplainabilityJobInput,
      "[ModelExplainabilityJobOutputConfig](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityjoboutputconfig)" : MonitoringOutputConfig,
      "[NetworkConfig](#cfn-sagemaker-modelexplainabilityjobdefinition-networkconfig)" : NetworkConfig,
      "[RoleArn](#cfn-sagemaker-modelexplainabilityjobdefinition-rolearn)" : String,
      "[StoppingCondition](#cfn-sagemaker-modelexplainabilityjobdefinition-stoppingcondition)" : StoppingCondition,
      "[Tags](#cfn-sagemaker-modelexplainabilityjobdefinition-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::ModelExplainabilityJobDefinition
Properties: 
  [EndpointName](#cfn-sagemaker-modelexplainabilityjobdefinition-endpointname): String
  [JobDefinitionName](#cfn-sagemaker-modelexplainabilityjobdefinition-jobdefinitionname): String
  [JobResources](#cfn-sagemaker-modelexplainabilityjobdefinition-jobresources): 
    MonitoringResources
  [ModelExplainabilityAppSpecification](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityappspecification): 
    ModelExplainabilityAppSpecification
  [ModelExplainabilityBaselineConfig](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilitybaselineconfig): 
    ModelExplainabilityBaselineConfig
  [ModelExplainabilityJobInput](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityjobinput): 
    ModelExplainabilityJobInput
  [ModelExplainabilityJobOutputConfig](#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityjoboutputconfig): 
    MonitoringOutputConfig
  [NetworkConfig](#cfn-sagemaker-modelexplainabilityjobdefinition-networkconfig): 
    NetworkConfig
  [RoleArn](#cfn-sagemaker-modelexplainabilityjobdefinition-rolearn): String
  [StoppingCondition](#cfn-sagemaker-modelexplainabilityjobdefinition-stoppingcondition): 
    StoppingCondition
  [Tags](#cfn-sagemaker-modelexplainabilityjobdefinition-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
EndpointName 
Property description not available.
Required: No
Type: String
Update requires: No interruption
JobDefinitionName 
The name of the model explainability job definition. The name must be unique within an AWS Region in the AWS account.
Required: No
Type: String
Update requires: Replacement
JobResources 
Identifies the resources to deploy for a monitoring job.
Required: Yes
Type: MonitoringResources
Update requires: Replacement
ModelExplainabilityAppSpecification 
Configures the model explainability job to run a specified Docker container image.
Required: Yes
Type: ModelExplainabilityAppSpecification
Update requires: Replacement
ModelExplainabilityBaselineConfig 
The baseline configuration for a model explainability job.
Required: No
Type: ModelExplainabilityBaselineConfig
Update requires: Replacement
ModelExplainabilityJobInput 
Inputs for the model explainability job.
Required: Yes
Type: ModelExplainabilityJobInput
Update requires: Replacement
ModelExplainabilityJobOutputConfig 
The output configuration for monitoring jobs.
Required: Yes
Type: MonitoringOutputConfig
Update requires: Replacement
NetworkConfig 
Networking options for a model explainability job.
Required: No
Type: NetworkConfig
Update requires: Replacement
RoleArn 
The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
Required: Yes
Type: String
Update requires: Replacement
StoppingCondition 
A time limit for how long the monitoring job is allowed to run before stopping.
Required: No
Type: StoppingCondition
Update requires: Replacement
Tags 
An array of key-value pairs to apply to this resource.
For more information, see Tag.
Required: No
Type: List of Tag
Update requires: Replacement
Return values
Ref
Fn::GetAtt

CreationTime 
The time when the job definition was created.
JobDefinitionArn 
The Amazon Resource Name (ARN) of the job definition.
Examples
SageMaker ModelExplainabilityJobDefinition Example
The following example creates a Model Explainabiltiy monitoring job defintion.
JSON

{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Description": "Basic SageMaker Hosting entities to create a model explainability job definition",
   "Mappings": {
      "RegionMap": {
         "us-west-2": {
            "MyModelImage": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
         },
         "us-east-2": {
            "MyModelImage": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
         },
         "us-east-1": {
            "MyModelImage": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
         },
         "eu-west-1": {
            "MyModelImage": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
         },
         "ap-northeast-1": {
            "MyModelImage": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
         },
         "ap-northeast-2": {
            "MyModelImage": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
         },
         "ap-southeast-2": {
            "MyModelImage": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
         },
         "eu-central-1": {
            "MyModelImage": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
         }
      }
   },
   "Resources": {
      "Endpoint": {
         "Type": "AWS::SageMaker::Endpoint",
         "Properties": {
            "EndpointConfigName": null
         }
      },
      "EndpointConfigWithDataCapture": {
         "Type": "AWS::SageMaker::EndpointConfig",
         "Properties": {
            "ProductionVariants": [
               {
                  "InitialInstanceCount": 1,
                  "InitialVariantWeight": 1,
                  "InstanceType": "ml.t2.large",
                  "ModelName": null,
                  "VariantName": null
               }
            ],
            "DataCaptureConfig": {
               "EnableCapture": true,
               "InitialSamplingPercentage": 100,
               "DestinationS3Uri": "s3://bucket/prefix",
               "KmsKeyId": "kmskeyid",
               "CaptureOptions": [
                  {
                     "CaptureMode": "Input"
                  }
               ],
               "CaptureContentTypeHeader": {
                  "CsvContentTypes": [
                     "text/csv"
                  ],
                  "JsonContentTypes": [
                     "application/json"
                  ]
               }
            }
         }
      },
      "Model": {
         "Type": "AWS::SageMaker::Model",
         "Properties": {
            "PrimaryContainer": {
               "Image": null
            },
            "ExecutionRoleArn": null
         }
      },
      "ExecutionRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version": "2012-10-17",
               "Statement": [
                  {
                     "Effect": "Allow",
                     "Principal": {
                        "Service": [
                           "sagemaker.amazonaws.com"
                        ]
                     },
                     "Action": [
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "Path": "/",
            "Policies": [
               {
                  "PolicyName": "root",
                  "PolicyDocument": {
                     "Version": "2012-10-17",
                     "Statement": [
                        {
                           "Effect": "Allow",
                           "Action": "*",
                           "Resource": "*"
                        }
                     ]
                  }
               }
            ]
         }
      },
      "JobDefinitionExecutionRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version": "2012-10-17",
               "Statement": [
                  {
                     "Effect": "Allow",
                     "Principal": {
                        "Service": [
                           "sagemaker.amazonaws.com"
                        ]
                     },
                     "Action": [
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "ManagedPolicyArns": [
               {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
               },
               {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess"
               },
               {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
               }
            ]
         }
      },
      "JobDefinition": {
         "Type": "AWS::SageMaker::ModelExplainabilityJobDefinition",
         "Properties": {
            "ModelExplainabilityAppSpecification": {
               "ImageUri": {
                  "Fn::Sub": "123456789012.dkr.ecr.${AWS::Partition}.amazonaws.com/sagemaker-clarify-processing:1.0"
               },
               "ConfigUri": "s3://ConfigUri"
            },
            "ModelExplainabilityJobInput": {
               "EndpointInput": {
                  "EndpointName": null,
                  "LocalPath": "/opt/ml/processing/endpointdata",
                  "FeaturesAttribute": "feature",
                  "InferenceAttribute": "inference",
                  "ProbabilityAttribute": "probability"
               }
            },
            "ModelExplainabilityJobOutputConfig": {
               "MonitoringOutputs": [
                  {
                     "S3Output": {
                        "LocalPath": "/opt/ml/processing/localpath",
                        "S3Uri": {
                           "Fn::Sub": "s3://model-quality-job-definition-${AWS::AccountId}/output"
                        }
                     }
                  }
               ]
            },
            "JobResources": {
               "ClusterConfig": {
                  "InstanceCount": 1,
                  "InstanceType": "ml.m5.large",
                  "VolumeSizeInGB": 50
               }
            },
            "RoleArn": null,
            "StoppingCondition": {
               "MaxRuntimeInSeconds": 2000
            }
         }
      }
   }
}

YAML
```
AWSTemplateFormatVersion: '2010-09-09'
Description: Basic SageMaker Hosting entities to create a model explainability job definition
Mappings: 
  RegionMap: 
    "us-west-2":
      "MyModelImage": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
    "us-east-2":
      "MyModelImage": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
    "us-east-1":
      "MyModelImage": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
    "eu-west-1":
      "MyModelImage": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
    "ap-northeast-1":
      "MyModelImage": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
    "ap-northeast-2":
      "MyModelImage": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
    "ap-southeast-2":
      "MyModelImage": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
    "eu-central-1":
      "MyModelImage": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
Resources:
  Endpoint:
    Type: "AWS::SageMaker::Endpoint"
    Properties:
      EndpointConfigName:
        !GetAtt EndpointConfigWithDataCapture.EndpointConfigName
EndpointConfigWithDataCapture:
    Type: "AWS::SageMaker::EndpointConfig"
    Properties:
      ProductionVariants:
        - InitialInstanceCount: 1
          InitialVariantWeight: 1.0
          InstanceType: ml.t2.large
          ModelName: !GetAtt Model.ModelName
          VariantName: !GetAtt Model.ModelName
      DataCaptureConfig:
        EnableCapture: true
        InitialSamplingPercentage: 100
        DestinationS3Uri: s3://bucket/prefix
        KmsKeyId: kmskeyid
        CaptureOptions:
          - CaptureMode: Input
        CaptureContentTypeHeader:
          CsvContentTypes:
            - "text/csv"
          JsonContentTypes:
            - "application/json"
Model:
    Type: "AWS::SageMaker::Model"
    Properties:
      PrimaryContainer:
        Image: !FindInMap [RegionMap, !Ref "AWS::Region", "MyModelImage"]
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
ExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - 
          PolicyName: "root"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: ""
                Resource: ""
JobDefinitionExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess"
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
JobDefinition:
    Type: AWS::SageMaker::ModelExplainabilityJobDefinition
    Properties:
      ModelExplainabilityAppSpecification:
        ImageUri:
          Fn::Sub: "123456789012.dkr.ecr.${AWS::Partition}.amazonaws.com/sagemaker-clarify-processing:1.0"
        ConfigUri: "s3://ConfigUri"
      ModelExplainabilityJobInput:
        EndpointInput:
          EndpointName: !GetAtt Endpoint.EndpointName
          LocalPath: "/opt/ml/processing/endpointdata"
          FeaturesAttribute: feature
          InferenceAttribute: inference
          ProbabilityAttribute: probability
      ModelExplainabilityJobOutputConfig:
        MonitoringOutputs:
          - S3Output:
              LocalPath: "/opt/ml/processing/localpath"
              S3Uri:
                Fn::Sub: "s3://model-quality-job-definition-${AWS::AccountId}/output"
      JobResources:
        ClusterConfig:
          InstanceCount: 1
          InstanceType: ml.m5.large
          VolumeSizeInGB: 50
      RoleArn: !GetAtt JobDefinitionExecutionRole.Arn
      StoppingCondition:
        MaxRuntimeInSeconds: 2000
```

AWS::SageMaker::ModelPackage
A versioned model that can be deployed for SageMaker inference.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::ModelPackage",
  "Properties" : {
      "[AdditionalInferenceSpecificationDefinition](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition)" : AdditionalInferenceSpecificationDefinition,
      "[AdditionalInferenceSpecifications](#cfn-sagemaker-modelpackage-additionalinferencespecifications)" : [ AdditionalInferenceSpecificationDefinition, ... ],
      "[AdditionalInferenceSpecificationsToAdd](#cfn-sagemaker-modelpackage-additionalinferencespecificationstoadd)" : [ AdditionalInferenceSpecificationDefinition, ... ],
      "[ApprovalDescription](#cfn-sagemaker-modelpackage-approvaldescription)" : String,
      "[CertifyForMarketplace](#cfn-sagemaker-modelpackage-certifyformarketplace)" : Boolean,
      "[ClientToken](#cfn-sagemaker-modelpackage-clienttoken)" : String,
      "[CreatedBy](#cfn-sagemaker-modelpackage-createdby)" : UserContext,
      "[CustomerMetadataProperties](#cfn-sagemaker-modelpackage-customermetadataproperties)" : {Key : Value, ...},
      "[Domain](#cfn-sagemaker-modelpackage-domain)" : String,
      "[DriftCheckBaselines](#cfn-sagemaker-modelpackage-driftcheckbaselines)" : DriftCheckBaselines,
      "[Environment](#cfn-sagemaker-modelpackage-environment)" : {Key : Value, ...},
      "[InferenceSpecification](#cfn-sagemaker-modelpackage-inferencespecification)" : InferenceSpecification,
      "[LastModifiedBy](#cfn-sagemaker-modelpackage-lastmodifiedby)" : UserContext,
      "[LastModifiedTime](#cfn-sagemaker-modelpackage-lastmodifiedtime)" : String,
      "[MetadataProperties](#cfn-sagemaker-modelpackage-metadataproperties)" : MetadataProperties,
      "[ModelApprovalStatus](#cfn-sagemaker-modelpackage-modelapprovalstatus)" : String,
      "[ModelMetrics](#cfn-sagemaker-modelpackage-modelmetrics)" : ModelMetrics,
      "[ModelPackageDescription](#cfn-sagemaker-modelpackage-modelpackagedescription)" : String,
      "[ModelPackageGroupName](#cfn-sagemaker-modelpackage-modelpackagegroupname)" : String,
      "[ModelPackageName](#cfn-sagemaker-modelpackage-modelpackagename)" : String,
      "[ModelPackageStatusDetails](#cfn-sagemaker-modelpackage-modelpackagestatusdetails)" : ModelPackageStatusDetails,
      "[ModelPackageStatusItem](#cfn-sagemaker-modelpackage-modelpackagestatusitem)" : ModelPackageStatusItem,
      "[ModelPackageVersion](#cfn-sagemaker-modelpackage-modelpackageversion)" : Integer,
      "[SamplePayloadUrl](#cfn-sagemaker-modelpackage-samplepayloadurl)" : String,
      "[SourceAlgorithmSpecification](#cfn-sagemaker-modelpackage-sourcealgorithmspecification)" : SourceAlgorithmSpecification,
      "[Tags](#cfn-sagemaker-modelpackage-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ],
      "[Task](#cfn-sagemaker-modelpackage-task)" : String,
      "[ValidationSpecification](#cfn-sagemaker-modelpackage-validationspecification)" : ValidationSpecification
    }
}

YAML

Type: AWS::SageMaker::ModelPackage
Properties: 
  [AdditionalInferenceSpecificationDefinition](#cfn-sagemaker-modelpackage-additionalinferencespecificationdefinition): 
    AdditionalInferenceSpecificationDefinition
  [AdditionalInferenceSpecifications](#cfn-sagemaker-modelpackage-additionalinferencespecifications): 
    - AdditionalInferenceSpecificationDefinition
  [AdditionalInferenceSpecificationsToAdd](#cfn-sagemaker-modelpackage-additionalinferencespecificationstoadd): 
    - AdditionalInferenceSpecificationDefinition
  [ApprovalDescription](#cfn-sagemaker-modelpackage-approvaldescription): String
  [CertifyForMarketplace](#cfn-sagemaker-modelpackage-certifyformarketplace): Boolean
  [ClientToken](#cfn-sagemaker-modelpackage-clienttoken): String
  [CreatedBy](#cfn-sagemaker-modelpackage-createdby): 
    UserContext
  [CustomerMetadataProperties](#cfn-sagemaker-modelpackage-customermetadataproperties): 
    Key : Value
  [Domain](#cfn-sagemaker-modelpackage-domain): String
  [DriftCheckBaselines](#cfn-sagemaker-modelpackage-driftcheckbaselines): 
    DriftCheckBaselines
  [Environment](#cfn-sagemaker-modelpackage-environment): 
    Key : Value
  [InferenceSpecification](#cfn-sagemaker-modelpackage-inferencespecification): 
    InferenceSpecification
  [LastModifiedBy](#cfn-sagemaker-modelpackage-lastmodifiedby): 
    UserContext
  [LastModifiedTime](#cfn-sagemaker-modelpackage-lastmodifiedtime): String
  [MetadataProperties](#cfn-sagemaker-modelpackage-metadataproperties): 
    MetadataProperties
  [ModelApprovalStatus](#cfn-sagemaker-modelpackage-modelapprovalstatus): String
  [ModelMetrics](#cfn-sagemaker-modelpackage-modelmetrics): 
    ModelMetrics
  [ModelPackageDescription](#cfn-sagemaker-modelpackage-modelpackagedescription): String
  [ModelPackageGroupName](#cfn-sagemaker-modelpackage-modelpackagegroupname): String
  [ModelPackageName](#cfn-sagemaker-modelpackage-modelpackagename): String
  [ModelPackageStatusDetails](#cfn-sagemaker-modelpackage-modelpackagestatusdetails): 
    ModelPackageStatusDetails
  [ModelPackageStatusItem](#cfn-sagemaker-modelpackage-modelpackagestatusitem): 
    ModelPackageStatusItem
  [ModelPackageVersion](#cfn-sagemaker-modelpackage-modelpackageversion): Integer
  [SamplePayloadUrl](#cfn-sagemaker-modelpackage-samplepayloadurl): String
  [SourceAlgorithmSpecification](#cfn-sagemaker-modelpackage-sourcealgorithmspecification): 
    SourceAlgorithmSpecification
  [Tags](#cfn-sagemaker-modelpackage-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)
  [Task](#cfn-sagemaker-modelpackage-task): String
  [ValidationSpecification](#cfn-sagemaker-modelpackage-validationspecification): 
    ValidationSpecification

Properties
AdditionalInferenceSpecificationDefinition 
A structure of additional Inference Specification. Additional Inference Specification specifies details about inference jobs that can be run with models based on this model package
Required: No
Type: AdditionalInferenceSpecificationDefinition
Update requires: No interruption
AdditionalInferenceSpecifications 
An array of additional Inference Specification objects.
Required: No
Type: List of AdditionalInferenceSpecificationDefinition
Maximum: 15
Update requires: No interruption
AdditionalInferenceSpecificationsToAdd 
An array of additional Inference Specification objects to be added to the existing array. The total number of additional Inference Specification objects cannot exceed 15. Each additional Inference Specification object specifies artifacts based on this model package that can be used on inference endpoints. Generally used with SageMaker Neo to store the compiled artifacts.
Required: No
Type: List of AdditionalInferenceSpecificationDefinition
Update requires: No interruption
ApprovalDescription 
A description provided when the model approval is set.
Required: No
Type: String
Maximum: 1024
Pattern: .*
Update requires: No interruption
CertifyForMarketplace 
Whether the model package is to be certified to be listed on AWS Marketplace. For information about listing model packages on AWS Marketplace, see List Your Algorithm or Model Package on AWS Marketplace.
Required: No
Type: Boolean
Update requires: No interruption
ClientToken 
A unique token that guarantees that the call to this API is idempotent.
Required: No
Type: String
Update requires: Replacement
CreatedBy 
Information about the user who created or modified an experiment, trial, trial component, lineage group, or project.
Required: No
Type: UserContext
Update requires: No interruption
CustomerMetadataProperties 
The metadata properties for the model package.
Required: No
Type: Map of String
Update requires: No interruption
Domain 
The machine learning domain of your model package and its components. Common machine learning domains include computer vision and natural language processing.
Required: No
Type: String
Update requires: Replacement
DriftCheckBaselines 
Represents the drift check baselines that can be used when the model monitor is set using the model package.
Required: No
Type: DriftCheckBaselines
Update requires: Replacement
Environment 
The environment variables to set in the Docker container. Each key and value in the Environment string to string map can have length of up to 1024. We support up to 16 entries in the map.
Required: No
Type: Map of String
Update requires: No interruption
InferenceSpecification 
Defines how to perform inference generation after a training job is run.
Required: No
Type: InferenceSpecification
Update requires: Replacement
LastModifiedBy 
Information about the user who created or modified an experiment, trial, trial component, lineage group, or project.
Required: No
Type: UserContext
Update requires: No interruption
LastModifiedTime 
The last time the model package was modified.
Required: No
Type: String
Update requires: No interruption
MetadataProperties 
Metadata properties of the tracking entity, trial, or trial component.
Required: No
Type: MetadataProperties
Update requires: Replacement
ModelApprovalStatus 
The approval status of the model. This can be one of the following values.
+  APPROVED - The model is approved
+  REJECTED - The model is rejected.
+  PENDING_MANUAL_APPROVAL - The model is waiting for manual approval.
Required: No
Type: String
Allowed values: Approved | PendingManualApproval | Rejected
Update requires: No interruption
ModelMetrics 
Metrics for the model.
Required: No
Type: ModelMetrics
Update requires: Replacement
ModelPackageDescription 
The description of the model package.
Required: No
Type: String
Maximum: 1024
Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
Update requires: Replacement
ModelPackageGroupName 
The model group to which the model belongs.
Required: No
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: Replacement
ModelPackageName 
The name of the model.
Required: No
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: No interruption
ModelPackageStatusDetails 
Specifies the validation and image scan statuses of the model package.
Required: No
Type: ModelPackageStatusDetails
Update requires: No interruption
ModelPackageStatusItem 
Represents the overall status of a model package.
Required: No
Type: ModelPackageStatusItem
Update requires: No interruption
ModelPackageVersion 
The version number of a versioned model.
Required: No
Type: Integer
Minimum: 1
Update requires: No interruption
SamplePayloadUrl 
The Amazon Simple Storage Service path where the sample payload are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).
Required: No
Type: String
Update requires: Replacement
SourceAlgorithmSpecification 
A list of algorithms that were used to create a model package.
Required: No
Type: SourceAlgorithmSpecification
Update requires: Replacement
Tags 
A list of the tags associated with the model package. For more information, see Tagging AWS resources in the * AWS General Reference Guide.
*Required: No
Type: List of Tag
Maximum: 50
Update requires: No interruption
Task 
The machine learning task your model package accomplishes. Common machine learning tasks include object detection and image classification.
Required: No
Type: String
Update requires: Replacement
ValidationSpecification 
Specifies batch transform jobs that SageMaker runs to validate your model package.
Required: No
Type: ValidationSpecification
Update requires: Replacement
Return values
Ref
Fn::GetAtt

CreationTime 
The time that the model package was created.
ModelPackageArn 
The Amazon Resource Name (ARN) of the model package.
ModelPackageStatus 
The status of the model package. This can be one of the following values.
+  PENDING - The model package creation is pending.
+  IN_PROGRESS - The model package is in the process of being created.
+  COMPLETED - The model package was successfully created.
+  FAILED - The model package creation failed.
+  DELETING - The model package is in the process of being deleted.

AWS::SageMaker::ModelPackageGroup
A group of versioned models in the model registry.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::ModelPackageGroup",
  "Properties" : {
      "[ModelPackageGroupDescription](#cfn-sagemaker-modelpackagegroup-modelpackagegroupdescription)" : String,
      "[ModelPackageGroupName](#cfn-sagemaker-modelpackagegroup-modelpackagegroupname)" : String,
      "[ModelPackageGroupPolicy](#cfn-sagemaker-modelpackagegroup-modelpackagegrouppolicy)" : Json,
      "[Tags](#cfn-sagemaker-modelpackagegroup-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::ModelPackageGroup
Properties: 
  [ModelPackageGroupDescription](#cfn-sagemaker-modelpackagegroup-modelpackagegroupdescription): String
  [ModelPackageGroupName](#cfn-sagemaker-modelpackagegroup-modelpackagegroupname): String
  [ModelPackageGroupPolicy](#cfn-sagemaker-modelpackagegroup-modelpackagegrouppolicy): Json
  [Tags](#cfn-sagemaker-modelpackagegroup-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
ModelPackageGroupDescription 
The description for the model group.
Required: No
Type: String
Maximum: 1024
Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
Update requires: Replacement
ModelPackageGroupName 
The name of the model group.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: Replacement
ModelPackageGroupPolicy 
A resouce policy to control access to a model group. For information about resoure policies, see Identity-based policies and resource-based policies in the AWS Identity and Access Management User Guide..
Required: No
Type: Json
Update requires: No interruption
Tags 
An array of key-value pairs to apply to this resource.
For more information, see Tag.
Required: No
Type: List of Tag
Maximum: 50
Update requires: No interruption
Return values
Ref
Fn::GetAtt

CreationTime 
The time when the model group was created.
ModelPackageGroupArn 
The Amazon Resource Name (ARN) of the model group.
ModelPackageGroupStatus 
The status of the model group.

AWS::SageMaker::ModelQualityJobDefinition
Creates a definition for a job that monitors model quality and drift. For information about model monitor, see Amazon SageMaker Model Monitor.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::ModelQualityJobDefinition",
  "Properties" : {
      "[EndpointName](#cfn-sagemaker-modelqualityjobdefinition-endpointname)" : String,
      "[JobDefinitionName](#cfn-sagemaker-modelqualityjobdefinition-jobdefinitionname)" : String,
      "[JobResources](#cfn-sagemaker-modelqualityjobdefinition-jobresources)" : MonitoringResources,
      "[ModelQualityAppSpecification](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification)" : ModelQualityAppSpecification,
      "[ModelQualityBaselineConfig](#cfn-sagemaker-modelqualityjobdefinition-modelqualitybaselineconfig)" : ModelQualityBaselineConfig,
      "[ModelQualityJobInput](#cfn-sagemaker-modelqualityjobdefinition-modelqualityjobinput)" : ModelQualityJobInput,
      "[ModelQualityJobOutputConfig](#cfn-sagemaker-modelqualityjobdefinition-modelqualityjoboutputconfig)" : MonitoringOutputConfig,
      "[NetworkConfig](#cfn-sagemaker-modelqualityjobdefinition-networkconfig)" : NetworkConfig,
      "[RoleArn](#cfn-sagemaker-modelqualityjobdefinition-rolearn)" : String,
      "[StoppingCondition](#cfn-sagemaker-modelqualityjobdefinition-stoppingcondition)" : StoppingCondition,
      "[Tags](#cfn-sagemaker-modelqualityjobdefinition-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::ModelQualityJobDefinition
Properties: 
  [EndpointName](#cfn-sagemaker-modelqualityjobdefinition-endpointname): String
  [JobDefinitionName](#cfn-sagemaker-modelqualityjobdefinition-jobdefinitionname): String
  [JobResources](#cfn-sagemaker-modelqualityjobdefinition-jobresources): 
    MonitoringResources
  [ModelQualityAppSpecification](#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification): 
    ModelQualityAppSpecification
  [ModelQualityBaselineConfig](#cfn-sagemaker-modelqualityjobdefinition-modelqualitybaselineconfig): 
    ModelQualityBaselineConfig
  [ModelQualityJobInput](#cfn-sagemaker-modelqualityjobdefinition-modelqualityjobinput): 
    ModelQualityJobInput
  [ModelQualityJobOutputConfig](#cfn-sagemaker-modelqualityjobdefinition-modelqualityjoboutputconfig): 
    MonitoringOutputConfig
  [NetworkConfig](#cfn-sagemaker-modelqualityjobdefinition-networkconfig): 
    NetworkConfig
  [RoleArn](#cfn-sagemaker-modelqualityjobdefinition-rolearn): String
  [StoppingCondition](#cfn-sagemaker-modelqualityjobdefinition-stoppingcondition): 
    StoppingCondition
  [Tags](#cfn-sagemaker-modelqualityjobdefinition-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
EndpointName 
Property description not available.
Required: No
Type: String
Update requires: No interruption
JobDefinitionName 
The name of the monitoring job definition.
Required: No
Type: String
Update requires: Replacement
JobResources 
Identifies the resources to deploy for a monitoring job.
Required: Yes
Type: MonitoringResources
Update requires: Replacement
ModelQualityAppSpecification 
Container image configuration object for the monitoring job.
Required: Yes
Type: ModelQualityAppSpecification
Update requires: Replacement
ModelQualityBaselineConfig 
Specifies the constraints and baselines for the monitoring job.
Required: No
Type: ModelQualityBaselineConfig
Update requires: Replacement
ModelQualityJobInput 
A list of the inputs that are monitored. Currently endpoints are supported.
Required: Yes
Type: ModelQualityJobInput
Update requires: Replacement
ModelQualityJobOutputConfig 
The output configuration for monitoring jobs.
Required: Yes
Type: MonitoringOutputConfig
Update requires: Replacement
NetworkConfig 
Specifies the network configuration for the monitoring job.
Required: No
Type: NetworkConfig
Update requires: Replacement
RoleArn 
The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
Required: Yes
Type: String
Update requires: Replacement
StoppingCondition 
A time limit for how long the monitoring job is allowed to run before stopping.
Required: No
Type: StoppingCondition
Update requires: Replacement
Tags 
An array of key-value pairs to apply to this resource.
For more information, see Tag.
Required: No
Type: List of Tag
Update requires: Replacement
Return values
Ref
Fn::GetAtt

CreationTime 
The time when the job definition was created.
JobDefinitionArn 
The Amazon Resource Name (ARN) of the job definition.
Examples
SageMaker ModelQualityJobDefinition Example
The following example creates a Model Quality monitoring job defintion.
JSON

{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Description": "Basic SageMaker Hosting entities to create a model quality job definition",
   "Mappings": {
      "RegionMap": {
         "us-west-2": {
            "MyModelImage": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
         },
         "us-east-2": {
            "MyModelImage": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
         },
         "us-east-1": {
            "MyModelImage": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
         },
         "eu-west-1": {
            "MyModelImage": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
         },
         "ap-northeast-1": {
            "MyModelImage": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
         },
         "ap-northeast-2": {
            "MyModelImage": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
         },
         "ap-southeast-2": {
            "MyModelImage": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
         },
         "eu-central-1": {
            "MyModelImage": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
         }
      }
   },
   "Resources": {
      "Endpoint": {
         "Type": "AWS::SageMaker::Endpoint",
         "Properties": {
            "EndpointConfigName": { "Fn::GetAtt" : ["EndpointConfigWithDataCapture", "EndpointConfigName"] }
         }
      },
      "EndpointConfigWithDataCapture": {
         "Type": "AWS::SageMaker::EndpointConfig",
         "Properties": {
            "ProductionVariants": [
               {
                  "InitialInstanceCount": 1,
                  "InitialVariantWeight": 1,
                  "InstanceType": "ml.t2.large",
                  "ModelName": { "Fn::GetAtt" : ["Model", "ModelName"] },
                  "VariantName": { "Fn::GetAtt" : ["Model", "ModelName"] }
               }
            ],
            "DataCaptureConfig": {
               "EnableCapture": true,
               "InitialSamplingPercentage": 100,
               "DestinationS3Uri": "s3://bucket/prefix",
               "KmsKeyId": "kmskeyid",
               "CaptureOptions": [
                  {
                     "CaptureMode": "Input"
                  }
               ],
               "CaptureContentTypeHeader": {
                  "CsvContentTypes": [
                     "text/csv"
                  ],
                  "JsonContentTypes": [
                     "application/json"
                  ]
               }
            }
         }
      },
      "Model": {
         "Type": "AWS::SageMaker::Model",
         "Properties": {
            "PrimaryContainer": {
               "Image": { "Fn::FindInMap": [
                  "RegionMap",
                  {"Ref": "AWS::Region"},
                  "MyModelImage"
                 ]
               }
            },
            "ExecutionRoleArn": { "Fn::GetAtt" : ["ExecutionRole", "Arn"] }
         }
      },
      "ExecutionRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version": "2012-10-17",
               "Statement": [
                  {
                     "Effect": "Allow",
                     "Principal": {
                        "Service": [
                           "sagemaker.amazonaws.com"
                        ]
                     },
                     "Action": [
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "Path": "/",
            "Policies": [
               {
                  "PolicyName": "root",
                  "PolicyDocument": {
                     "Version": "2012-10-17",
                     "Statement": [
                        {
                           "Effect": "Allow",
                           "Action": "*",
                           "Resource": "*"
                        }
                     ]
                  }
               }
            ]
         }
      },
      "JobDefinitionExecutionRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version": "2012-10-17",
               "Statement": [
                  {
                     "Effect": "Allow",
                     "Principal": {
                        "Service": [
                           "sagemaker.amazonaws.com"
                        ]
                     },
                     "Action": [
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "ManagedPolicyArns": [
               {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
               },
               {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess"
               },
               {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
               }
            ]
         }
      },
      "JobDefinition": {
         "Type": "AWS::SageMaker::ModelQualityJobDefinition",
         "Properties": {
            "ModelQualityAppSpecification": {
               "ImageUri": {
                  "Fn::Sub": "123456789012.dkr.ecr.${AWS::Partition}.amazonaws.com/sagemaker-model-monitor-analyzer:latest"
               },
               "ProblemType": "BinaryClassification"
            },
            "ModelQualityJobInput": {
               "EndpointInput": {
                  "EndpointName": { "Fn::GetAtt" : ["Endpoint", "EndpointName"] },
                  "LocalPath": "/opt/ml/processing/endpointdata",
                  "InferenceAttribute": "inference",
                  "ProbabilityAttribute": "probability",
                  "ProbabilityThresholdAttribute": 0.8,
                  "StartTimeOffset": "-PT1H",
                  "EndTimeOffset": "-P0D"
               },
               "GroundTruthS3Input": {
                  "S3Uri": {
                     "Fn::Sub": "s3://model-quality-job-definition-${AWS::AccountId}/groundtruth"
                  }
               }
            },
            "ModelQualityJobOutputConfig": {
               "MonitoringOutputs": [
                  {
                     "S3Output": {
                        "LocalPath": "/opt/ml/processing/localpath",
                        "S3Uri": {
                           "Fn::Sub": "s3://model-quality-job-definition-${AWS::AccountId}/output"
                        }
                     }
                  }
               ]
            },
            "JobResources": {
               "ClusterConfig": {
                  "InstanceCount": 1,
                  "InstanceType": "ml.m5.large",
                  "VolumeSizeInGB": 50
               }
            },
            "RoleArn": { "Fn::GetAtt" : ["JobDefinitionExecutionRole", "Arn"] },
            "StoppingCondition": {
               "MaxRuntimeInSeconds": 2000
            }
         }
      }
   }
}

YAML
```
AWSTemplateFormatVersion: '2010-09-09'
Description: Basic SageMaker Hosting entities to create a model quality job definition
Mappings: 
  RegionMap: 
    "us-west-2":
      "MyModelImage": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
    "us-east-2":
      "MyModelImage": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
    "us-east-1":
      "MyModelImage": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
    "eu-west-1":
      "MyModelImage": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
    "ap-northeast-1":
      "MyModelImage": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
    "ap-northeast-2":
      "MyModelImage": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
    "ap-southeast-2":
      "MyModelImage": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
    "eu-central-1":
      "MyModelImage": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
Resources:
  Endpoint:
    Type: "AWS::SageMaker::Endpoint"
    Properties:
      EndpointConfigName:
        !GetAtt EndpointConfigWithDataCapture.EndpointConfigName
EndpointConfigWithDataCapture:
    Type: "AWS::SageMaker::EndpointConfig"
    Properties:
      ProductionVariants:
        - InitialInstanceCount: 1
          InitialVariantWeight: 1.0
          InstanceType: ml.t2.large
          ModelName: !GetAtt Model.ModelName
          VariantName: !GetAtt Model.ModelName
      DataCaptureConfig:
        EnableCapture: true
        InitialSamplingPercentage: 100
        DestinationS3Uri: s3://bucket/prefix
        KmsKeyId: kmskeyid
        CaptureOptions:
          - CaptureMode: Input
        CaptureContentTypeHeader:
          CsvContentTypes:
            - "text/csv"
          JsonContentTypes:
            - "application/json"
Model:
    Type: "AWS::SageMaker::Model"
    Properties:
      PrimaryContainer:
        Image: !FindInMap [RegionMap, !Ref "AWS::Region", "MyModelImage"]
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
ExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - 
          PolicyName: "root"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: ""
                Resource: ""
JobDefinitionExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess"
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
JobDefinition:
    Type: AWS::SageMaker::ModelQualityJobDefinition
    Properties:
      ModelQualityAppSpecification:
        ImageUri:
          Fn::Sub: "123456789012.dkr.ecr.${AWS::Partition}.amazonaws.com/sagemaker-model-monitor-analyzer:latest"
        ProblemType: BinaryClassification
      ModelQualityJobInput:
        EndpointInput:
          EndpointName: !GetAtt Endpoint.EndpointName
          LocalPath: "/opt/ml/processing/endpointdata"
          InferenceAttribute: inference
          ProbabilityAttribute: probability
          ProbabilityThresholdAttribute: 0.8
          StartTimeOffset: "-PT1H"
          EndTimeOffset: "-P0D"
        GroundTruthS3Input:
          S3Uri:
            Fn::Sub: "s3://model-quality-job-definition-${AWS::AccountId}/groundtruth"
      ModelQualityJobOutputConfig:
        MonitoringOutputs:
          - S3Output:
              LocalPath: "/opt/ml/processing/localpath"
              S3Uri:
                Fn::Sub: "s3://model-quality-job-definition-${AWS::AccountId}/output"
      JobResources:
        ClusterConfig:
          InstanceCount: 1
          InstanceType: ml.m5.large
          VolumeSizeInGB: 50
      RoleArn: !GetAtt JobDefinitionExecutionRole.Arn
      StoppingCondition:
        MaxRuntimeInSeconds: 2000
```

AWS::SageMaker::MonitoringSchedule
The AWS::SageMaker::MonitoringSchedule resource is an Amazon SageMaker resource type that regularly starts SageMaker processing Jobs to monitor the data captured for a SageMaker endpoint.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::MonitoringSchedule",
  "Properties" : {
      "[EndpointName](#cfn-sagemaker-monitoringschedule-endpointname)" : String,
      "[FailureReason](#cfn-sagemaker-monitoringschedule-failurereason)" : String,
      "[LastMonitoringExecutionSummary](#cfn-sagemaker-monitoringschedule-lastmonitoringexecutionsummary)" : MonitoringExecutionSummary,
      "[MonitoringScheduleConfig](#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig)" : MonitoringScheduleConfig,
      "[MonitoringScheduleName](#cfn-sagemaker-monitoringschedule-monitoringschedulename)" : String,
      "[MonitoringScheduleStatus](#cfn-sagemaker-monitoringschedule-monitoringschedulestatus)" : String,
      "[Tags](#cfn-sagemaker-monitoringschedule-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::MonitoringSchedule
Properties: 
  [EndpointName](#cfn-sagemaker-monitoringschedule-endpointname): String
  [FailureReason](#cfn-sagemaker-monitoringschedule-failurereason): String
  [LastMonitoringExecutionSummary](#cfn-sagemaker-monitoringschedule-lastmonitoringexecutionsummary): 
    MonitoringExecutionSummary
  [MonitoringScheduleConfig](#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig): 
    MonitoringScheduleConfig
  [MonitoringScheduleName](#cfn-sagemaker-monitoringschedule-monitoringschedulename): String
  [MonitoringScheduleStatus](#cfn-sagemaker-monitoringschedule-monitoringschedulestatus): String
  [Tags](#cfn-sagemaker-monitoringschedule-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
EndpointName 
The name of the endpoint using the monitoring schedule.
Required: No
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: No interruption
FailureReason 
Contains the reason a monitoring job failed, if it failed.
Required: No
Type: String
Update requires: No interruption
LastMonitoringExecutionSummary 
Describes metadata on the last execution to run, if there was one.
Required: No
Type: MonitoringExecutionSummary
Update requires: No interruption
MonitoringScheduleConfig 
The configuration object that specifies the monitoring schedule and defines the monitoring job.
Required: Yes
Type: MonitoringScheduleConfig
Update requires: No interruption
MonitoringScheduleName 
The name of the monitoring schedule.
Required: Yes
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
Update requires: Replacement
MonitoringScheduleStatus 
The status of the monitoring schedule.
Required: No
Type: String
Allowed values: Failed | Pending | Scheduled | Stopped
Update requires: No interruption
Tags 
An array of key-value pairs to apply to this resource.
For more information, see Tag.
Required: No
Type: List of Tag
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Amazon Resource Name (ARN) of the monitoring schedule.
For more information about using the Ref function, see Ref.
Fn::GetAtt

CreationTime 
The time when the monitoring schedule was created.
LastModifiedTime 
The last time that the monitoring schedule was modified.
MonitoringScheduleArn 
The Amazon Resource Name (ARN) of the monitoring schedule.
Examples
SageMaker MonitoringSchedule Example
The following example creates a monitoring schedule for a SageMaker endpoint.
JSON

{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Description": "Basic SageMaker Hosting entities to create a monitoring schedule",
   "Mappings": {
      "RegionMap": {
         "us-west-2": {
            "NullTransformer": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
         },
         "us-east-2": {
            "NullTransformer": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
         },
         "us-east-1": {
            "NullTransformer": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
         },
         "eu-west-1": {
            "NullTransformer": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
         },
         "ap-northeast-1": {
            "NullTransformer": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
         },
         "ap-northeast-2": {
            "NullTransformer": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
         },
         "ap-southeast-2": {
            "NullTransformer": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
         },
         "eu-central-1": {
            "NullTransformer": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
         }
      }
   },
   "Resources": {
      "Endpoint": {
         "Type": "AWS::SageMaker::Endpoint",
         "Properties": {
            "EndpointConfigName": null
         }
      },
      "EndpointConfig": {
         "Type": "AWS::SageMaker::EndpointConfig",
         "Properties": {
            "ProductionVariants": [
               {
                  "InitialInstanceCount": 1,
                  "InitialVariantWeight": 1,
                  "InstanceType": "ml.t2.large",
                  "ModelName": null,
                  "VariantName": null
               }
            ]
         }
      },
      "Model": {
         "Type": "AWS::SageMaker::Model",
         "Properties": {
            "PrimaryContainer": {
               "Image": null
            },
            "ExecutionRoleArn": null
         }
      },
      "ExecutionRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version": "2012-10-17",
               "Statement": [
                  {
                     "Effect": "Allow",
                     "Principal": {
                        "Service": [
                           "sagemaker.amazonaws.com"
                        ]
                     },
                     "Action": [
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "Path": "/",
            "Policies": [
               {
                  "PolicyName": "root",
                  "PolicyDocument": {
                     "Version": "2012-10-17",
                     "Statement": [
                        {
                           "Effect": "Allow",
                           "Action": "*",
                           "Resource": "*"
                        }
                     ]
                  }
               }
            ]
         }
      },
      "MonitoringScheduleExecutionRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version": "2012-10-17",
               "Statement": [
                  {
                     "Effect": "Allow",
                     "Principal": {
                        "Service": [
                           "sagemaker.amazonaws.com"
                        ]
                     },
                     "Action": [
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "ManagedPolicyArns": [
               {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
               },
               {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess"
               },
               {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
               }
            ]
         }
      },
      "MonitoringSchedule": {
         "Type": "AWS::SageMaker::MonitoringSchedule",
         "Properties": {
            "MonitoringScheduleConfig": {
               "MonitoringJobDefinition": {
                  "MonitoringAppSpecification": {
                     "ImageUri": {
                        "Fn::Sub": "123456789012.dkr.ecr.${AWS::Partition}.amazonaws.com/sagemaker-model-monitor-analyzer:latest"
                     }
                  },
                  "MonitoringInputs": [
                     {
                        "EndpointInput": {
                           "EndpointName": {
                              "Fn::ImportValue": "CanaryEndpointName"
                           },
                           "LocalPath": "/opt/ml/processing/endpointdata"
                        }
                     }
                  ],
                  "MonitoringOutputConfig": {
                     "MonitoringOutputs": [
                        {
                           "S3Output": {
                              "LocalPath": "/opt/ml/processing/localpath",
                              "S3Uri": "s3://endpoint-data-capture/myEndpoint"
                           }
                        }
                     ]
                  },
                  "MonitoringResources": {
                     "ClusterConfig": {
                        "InstanceCount": 1,
                        "InstanceType": "ml.m5.large",
                        "VolumeSizeInGB": 50
                     }
                  },
                  "RoleArn": null
               },
               "ScheduleConfig": {
                  "ScheduleExpression": "cron(0 * ? * * *)"
               }
            },
            "MonitoringScheduleName": "BasicMonitoringSchedule"
         }
      }
   }
}

YAML
```
AWSTemplateFormatVersion: '2010-09-09'
Description: Basic SageMaker Hosting entities to create a monitoring schedule
Description: "Basic Hosting entities test.  We need models to create endpoint configs."
Mappings: 
  RegionMap: 
    "us-west-2":
      "NullTransformer": "123456789012.dkr.ecr.us-west-2.amazonaws.com/mymodel:latest"
    "us-east-2":
      "NullTransformer": "123456789012.dkr.ecr.us-east-2.amazonaws.com/mymodel:latest"
    "us-east-1":
      "NullTransformer": "123456789012.dkr.ecr.us-east-1.amazonaws.com/mymodel:latest"
    "eu-west-1":
      "NullTransformer": "123456789012.dkr.ecr.eu-west-1.amazonaws.com/mymodel:latest"
    "ap-northeast-1":
      "NullTransformer": "123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/mymodel:latest"
    "ap-northeast-2":
      "NullTransformer": "123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/mymodel:latest"
    "ap-southeast-2":
      "NullTransformer": "123456789012.dkr.ecr.ap-southeast-2.amazonaws.com/mymodel:latest"
    "eu-central-1":
      "NullTransformer": "123456789012.dkr.ecr.eu-central-1.amazonaws.com/mymodel:latest"
Resources:
  Endpoint:
    Type: "AWS::SageMaker::Endpoint"
    Properties:
      EndpointConfigName:
        !GetAtt EndpointConfig.EndpointConfigName
  EndpointConfig:
    Type: "AWS::SageMaker::EndpointConfig"
    Properties:
      ProductionVariants:
        - InitialInstanceCount: 1
          InitialVariantWeight: 1.0
          InstanceType: ml.t2.large
          ModelName: !GetAtt Model.ModelName
          VariantName: !GetAtt Model.ModelName
  Model:
    Type: "AWS::SageMaker::Model"
    Properties:
      PrimaryContainer:
        Image: !FindInMap [RegionMap, !Ref "AWS::Region", "NullTransformer"]
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
ExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - 
          PolicyName: "root"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: ""
                Resource: ""
MonitoringScheduleExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess"
        - Fn::Sub: "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
MonitoringSchedule:
    Type: AWS::SageMaker::MonitoringSchedule
    Properties:
      MonitoringScheduleConfig:
        MonitoringJobDefinition:
          MonitoringAppSpecification:
            ImageUri: 
              Fn::Sub: "123456789012.dkr.ecr.${AWS::Partition}.amazonaws.com/sagemaker-model-monitor-analyzer:latest"
          MonitoringInputs:
            - EndpointInput:
                EndpointName:
                  Fn::ImportValue: CanaryEndpointName
                LocalPath: "/opt/ml/processing/endpointdata"
          MonitoringOutputConfig:
            MonitoringOutputs:
              - S3Output:
                  LocalPath: "/opt/ml/processing/localpath"
                  S3Uri: s3://endpoint-data-capture/myEndpoint
          MonitoringResources:
            ClusterConfig:
              InstanceCount: 1
              InstanceType: ml.m5.large
              VolumeSizeInGB: 50
          RoleArn: !GetAtt MonitoringScheduleExecutionRole.Arn
        ScheduleConfig:
          ScheduleExpression: cron(0 * ? * * *)
      MonitoringScheduleName: BasicMonitoringSchedule
```

AWS::SageMaker::NotebookInstance
The AWS::SageMaker::NotebookInstance resource creates an Amazon SageMaker notebook instance. A notebook instance is a machine learning (ML) compute instance running on a Jupyter notebook. For more information, see Use Notebook Instances. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::NotebookInstance",
  "Properties" : {
      "[AcceleratorTypes](#cfn-sagemaker-notebookinstance-acceleratortypes)" : [ String, ... ],
      "[AdditionalCodeRepositories](#cfn-sagemaker-notebookinstance-additionalcoderepositories)" : [ String, ... ],
      "[DefaultCodeRepository](#cfn-sagemaker-notebookinstance-defaultcoderepository)" : String,
      "[DirectInternetAccess](#cfn-sagemaker-notebookinstance-directinternetaccess)" : String,
      "[InstanceMetadataServiceConfiguration](#cfn-sagemaker-notebookinstance-instancemetadataserviceconfiguration)" : InstanceMetadataServiceConfiguration,
      "[InstanceType](#cfn-sagemaker-notebookinstance-instancetype)" : String,
      "[KmsKeyId](#cfn-sagemaker-notebookinstance-kmskeyid)" : String,
      "[LifecycleConfigName](#cfn-sagemaker-notebookinstance-lifecycleconfigname)" : String,
      "[NotebookInstanceName](#cfn-sagemaker-notebookinstance-notebookinstancename)" : String,
      "[PlatformIdentifier](#cfn-sagemaker-notebookinstance-platformidentifier)" : String,
      "[RoleArn](#cfn-sagemaker-notebookinstance-rolearn)" : String,
      "[RootAccess](#cfn-sagemaker-notebookinstance-rootaccess)" : String,
      "[SecurityGroupIds](#cfn-sagemaker-notebookinstance-securitygroupids)" : [ String, ... ],
      "[SubnetId](#cfn-sagemaker-notebookinstance-subnetid)" : String,
      "[Tags](#cfn-sagemaker-notebookinstance-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ],
      "[VolumeSizeInGB](#cfn-sagemaker-notebookinstance-volumesizeingb)" : Integer
    }
}

YAML

Type: AWS::SageMaker::NotebookInstance
Properties: 
  [AcceleratorTypes](#cfn-sagemaker-notebookinstance-acceleratortypes): 
    - String
  [AdditionalCodeRepositories](#cfn-sagemaker-notebookinstance-additionalcoderepositories): 
    - String
  [DefaultCodeRepository](#cfn-sagemaker-notebookinstance-defaultcoderepository): String
  [DirectInternetAccess](#cfn-sagemaker-notebookinstance-directinternetaccess): String
  [InstanceMetadataServiceConfiguration](#cfn-sagemaker-notebookinstance-instancemetadataserviceconfiguration): 
    InstanceMetadataServiceConfiguration
  [InstanceType](#cfn-sagemaker-notebookinstance-instancetype): String
  [KmsKeyId](#cfn-sagemaker-notebookinstance-kmskeyid): String
  [LifecycleConfigName](#cfn-sagemaker-notebookinstance-lifecycleconfigname): String
  [NotebookInstanceName](#cfn-sagemaker-notebookinstance-notebookinstancename): String
  [PlatformIdentifier](#cfn-sagemaker-notebookinstance-platformidentifier): String
  [RoleArn](#cfn-sagemaker-notebookinstance-rolearn): String
  [RootAccess](#cfn-sagemaker-notebookinstance-rootaccess): String
  [SecurityGroupIds](#cfn-sagemaker-notebookinstance-securitygroupids): 
    - String
  [SubnetId](#cfn-sagemaker-notebookinstance-subnetid): String
  [Tags](#cfn-sagemaker-notebookinstance-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)
  [VolumeSizeInGB](#cfn-sagemaker-notebookinstance-volumesizeingb): Integer

Properties
AcceleratorTypes 
A list of Amazon Elastic Inference (EI) instance types to associate with the notebook instance. Currently, only one instance type can be associated with a notebook instance. For more information, see Using Elastic Inference in Amazon SageMaker.
Valid Values: ml.eia1.medium | ml.eia1.large | ml.eia1.xlarge | ml.eia2.medium | ml.eia2.large | ml.eia2.xlarge.
Required: No
Type: List of String
Update requires: No interruption
AdditionalCodeRepositories 
An array of up to three Git repositories associated with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in AWS CodeCommit or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see Associating Git Repositories with SageMaker Notebook Instances.
Required: No
Type: List of String
Maximum: 3
Update requires: No interruption
DefaultCodeRepository 
The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in AWS CodeCommit or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see Associating Git Repositories with SageMaker Notebook Instances.
Required: No
Type: String
Minimum: 1
Maximum: 1024
Pattern: ^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*
Update requires: No interruption
DirectInternetAccess 
Sets whether SageMaker provides internet access to the notebook instance. If you set this to Disabled this notebook instance is able to access resources only in your VPC, and is not be able to connect to SageMaker training and endpoint services unless you configure a NAT Gateway in your VPC.
For more information, see Notebook Instances Are Internet-Enabled by Default. You can set the value of this parameter to Disabled only if you set a value for the SubnetId parameter.
Required: No
Type: String
Allowed values: Disabled | Enabled
Update requires: Replacement
InstanceMetadataServiceConfiguration 
Information on the IMDS configuration of the notebook instance
Required: No
Type: InstanceMetadataServiceConfiguration
Update requires: No interruption
InstanceType 
The type of ML compute instance to launch for the notebook instance.
Expect some interruption of service if this parameter is changed as CloudFormation stops a notebook instance and starts it up again to update it.
Required: Yes
Type: String
Allowed values: ml.c4.2xlarge | ml.c4.4xlarge | ml.c4.8xlarge | ml.c4.xlarge | ml.c5.18xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.xlarge | ml.c5d.18xlarge | ml.c5d.2xlarge | ml.c5d.4xlarge | ml.c5d.9xlarge | ml.c5d.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.g5.12xlarge | ml.g5.16xlarge | ml.g5.24xlarge | ml.g5.2xlarge | ml.g5.48xlarge | ml.g5.4xlarge | ml.g5.8xlarge | ml.g5.xlarge | ml.m4.10xlarge | ml.m4.16xlarge | ml.m4.2xlarge | ml.m4.4xlarge | ml.m4.xlarge | ml.m5.12xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.xlarge | ml.m5d.12xlarge | ml.m5d.16xlarge | ml.m5d.24xlarge | ml.m5d.2xlarge | ml.m5d.4xlarge | ml.m5d.8xlarge | ml.m5d.large | ml.m5d.xlarge | ml.p2.16xlarge | ml.p2.8xlarge | ml.p2.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge | ml.p3dn.24xlarge | ml.r5.12xlarge | ml.r5.16xlarge | ml.r5.24xlarge | ml.r5.2xlarge | ml.r5.4xlarge | ml.r5.8xlarge | ml.r5.large | ml.r5.xlarge | ml.t2.2xlarge | ml.t2.large | ml.t2.medium | ml.t2.xlarge | ml.t3.2xlarge | ml.t3.large | ml.t3.medium | ml.t3.xlarge
Update requires: No interruption
KmsKeyId 
The Amazon Resource Name (ARN) of a AWS Key Management Service key that SageMaker uses to encrypt data on the storage volume attached to your notebook instance. The KMS key you provide must be enabled. For information, see Enabling and Disabling Keys in the * AWS Key Management Service Developer Guide.
*Required: No
Type: String
Maximum: 2048
Pattern: .*
Update requires: Replacement
LifecycleConfigName 
The name of a lifecycle configuration to associate with the notebook instance. For information about lifecycle configurations, see Customize a Notebook Instance in the Amazon SageMaker Developer Guide.
Required: No
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
Update requires: No interruption
NotebookInstanceName 
The name of the new notebook instance.
Required: No
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
Update requires: Replacement
PlatformIdentifier 
The platform identifier of the notebook instance runtime environment.
Required: No
Type: String
Maximum: 15
Pattern: ^(notebook-al1-v1|notebook-al2-v1|notebook-al2-v2)$
Update requires: Replacement
RoleArn 
 When you send any requests to AWS resources from the notebook instance, SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so SageMaker can perform these tasks. The policy must allow the SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see SageMaker Roles.
To be able to pass this role to SageMaker, the caller of this API must have the iam:PassRole permission.
Required: Yes
Type: String
Minimum: 20
Maximum: 2048
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Update requires: No interruption
RootAccess 
Whether root access is enabled or disabled for users of the notebook instance. The default value is Enabled.
Lifecycle configurations need root access to be able to set up a notebook instance. Because of this, lifecycle configurations associated with a notebook instance always run with root access even if you disable root access for users.
Required: No
Type: String
Allowed values: Disabled | Enabled
Update requires: No interruption
SecurityGroupIds 
The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet.
Required: No
Type: List of String
Maximum: 5
Update requires: Replacement
SubnetId 
The ID of the subnet in a VPC to which you would like to have a connectivity from your ML compute instance.
Required: No
Type: String
Maximum: 32
Pattern: [-0-9a-zA-Z]+
Update requires: Replacement
Tags 
A list of key-value pairs to apply to this resource.
For more information, see Resource Tag and Using Cost Allocation Tags.
You can add tags later by using the CreateTags API.
Required: No
Type: List of Tag
Maximum: 50
Update requires: No interruption
VolumeSizeInGB 
The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.
Expect some interruption of service if this parameter is changed as CloudFormation stops a notebook instance and starts it up again to update it.
Required: No
Type: Integer
Minimum: 5
Maximum: 16384
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Amazon Resource Name (ARN) of the notebook instance, such as arn:aws:sagemaker:us-west-2:012345678901:notebook-instance/mynotebookinstance.
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.
Fn::GetAtt returns a value for a specified attribute of this type. The following are the available attributes and sample return values.

NotebookInstanceName 
The name of the notebook instance, such as MyNotebookInstance.
Examples
SageMaker Notebook Instance Example
The following example creates a notebook instance.
JSON

{
    "Description": "Create Basic Notebook",
    "Resources": {
        "BasicNotebookInstance": {
            "Type": "AWS::SageMaker::NotebookInstance",
            "Properties": {
                "InstanceType": "ml.t2.large",
                "RoleArn": {
                    "Fn::GetAtt": [
                        "ExecutionRole",
                        "Arn"
                    ]
                }
            }
        },
        "ExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "sagemaker.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    {
                        "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "BasicNotebookInstanceId": {
            "Value": {
                "Ref": "BasicNotebookInstance"
            }
        }
    }
}

YAML

Description: "Create basic notebook instance"
Resources:
  BasicNotebookInstance:
    Type: "AWS::SageMaker::NotebookInstance"
    Properties:
      InstanceType: "ml.t2.large"
      RoleArn: !GetAtt ExecutionRole.Arn
  ExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
Outputs:
  BasicNotebookInstanceId:
    Value: !Ref BasicNotebookInstance


AWS::SageMaker::NotebookInstanceLifecycleConfig
The AWS::SageMaker::NotebookInstanceLifecycleConfig resource creates shell scripts that run when you create and/or start a notebook instance. For information about notebook instance lifecycle configurations, see Customize a Notebook Instance in the Amazon SageMaker Developer Guide.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::NotebookInstanceLifecycleConfig",
  "Properties" : {
      "[NotebookInstanceLifecycleConfigName](#cfn-sagemaker-notebookinstancelifecycleconfig-notebookinstancelifecycleconfigname)" : String,
      "[OnCreate](#cfn-sagemaker-notebookinstancelifecycleconfig-oncreate)" : [ NotebookInstanceLifecycleHook, ... ],
      "[OnStart](#cfn-sagemaker-notebookinstancelifecycleconfig-onstart)" : [ NotebookInstanceLifecycleHook, ... ]
    }
}

YAML

Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
Properties: 
  [NotebookInstanceLifecycleConfigName](#cfn-sagemaker-notebookinstancelifecycleconfig-notebookinstancelifecycleconfigname): String
  [OnCreate](#cfn-sagemaker-notebookinstancelifecycleconfig-oncreate): 
    - NotebookInstanceLifecycleHook
  [OnStart](#cfn-sagemaker-notebookinstancelifecycleconfig-onstart): 
    - NotebookInstanceLifecycleHook

Properties
NotebookInstanceLifecycleConfigName 
The name of the lifecycle configuration.
Required: No
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
Update requires: Replacement
OnCreate 
A shell script that runs only once, when you create a notebook instance. The shell script must be a base64-encoded string.
Required: No
Type: List of NotebookInstanceLifecycleHook
Maximum: 1
Update requires: No interruption
OnStart 
A shell script that runs every time you start a notebook instance, including when you create the notebook instance. The shell script must be a base64-encoded string.
Required: No
Type: List of NotebookInstanceLifecycleHook
Maximum: 1
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Amazon Resource Name (ARN) of the endpoint configuration, such as arn:aws:sagemaker:us-west-2:012345678901:notebook-instance-lifecycle-config/mylifecycleconfig 
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.
Fn::GetAtt returns a value for a specified attribute of this type. The following are the available attributes and sample return values. 

NotebookInstanceLifecycleConfigName 
The name of the lifecycle configuration, such as MyLifecycleConfig.
Examples
SageMaker NotebookInstanceLifecycleConfig Example
The following example creates a notebook instance with an associated lifecycle configuration.
JSON

{
  "Description": "Basic NotebookInstance test",
  "Resources": {
    "BasicNotebookInstance": {
      "Type": "AWS::SageMaker::NotebookInstance",
      "Properties": {
        "InstanceType": "ml.t2.medium",
        "RoleArn": { "Fn::GetAtt" : [ "ExecutionRole", "Arn" ] },
        "LifecycleConfigName": { "Fn::GetAtt" : [ "BasicNotebookInstanceLifecycleConfig", "NotebookInstanceLifecycleConfigName" ] }
    },
    "BasicNotebookInstanceLifecycleConfig": {
      "Type": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
      "Properties": {
        "OnStart": [
          {
            "Content": {
              "Fn::Base64": "echo 'hello'"
            }
          }
        ]
      }
    },
    "ExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "sagemaker.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "BasicNotebookInstanceId": {
      "Value": { "Ref" : "BasicNotebookInstance" }
    },
    "BasicNotebookInstanceLifecycleConfigId": {
      "Value": { "Ref" : "BasicNotebookInstanceLifecycleConfig" }
    }
  }
}
}

YAML

Description: "Basic NotebookInstance test"
Resources:
  BasicNotebookInstance:
    Type: "AWS::SageMaker::NotebookInstance"
    Properties:
      InstanceType: "ml.t2.medium"
      RoleArn: !GetAtt ExecutionRole.Arn
      LifecycleConfigName: !GetAtt BasicNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName
  BasicNotebookInstanceLifecycleConfig:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      OnStart:
        - Content:
            Fn::Base64: "echo 'hello'"
  ExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - 
          PolicyName: "root"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: "*"
                Resource: "*"
Outputs:
  BasicNotebookInstanceId:
    Value: !Ref BasicNotebookInstance
  BasicNotebookInstanceLifecycleConfigId:
    Value: !Ref BasicNotebookInstanceLifecycleConfig


AWS::SageMaker::Pipeline
The AWS::SageMaker::Pipeline resource creates shell scripts that run when you create and/or start a SageMaker Pipeline. For information about SageMaker Pipelines, see SageMaker Pipelines in the Amazon SageMaker Developer Guide.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::Pipeline",
  "Properties" : {
      "[ParallelismConfiguration](#cfn-sagemaker-pipeline-parallelismconfiguration)" : ParallelismConfiguration,
      "[PipelineDefinition](#cfn-sagemaker-pipeline-pipelinedefinition)" : PipelineDefinition,
      "[PipelineDescription](#cfn-sagemaker-pipeline-pipelinedescription)" : String,
      "[PipelineDisplayName](#cfn-sagemaker-pipeline-pipelinedisplayname)" : String,
      "[PipelineName](#cfn-sagemaker-pipeline-pipelinename)" : String,
      "[RoleArn](#cfn-sagemaker-pipeline-rolearn)" : String,
      "[Tags](#cfn-sagemaker-pipeline-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::Pipeline
Properties: 
  [ParallelismConfiguration](#cfn-sagemaker-pipeline-parallelismconfiguration): 
    ParallelismConfiguration
  [PipelineDefinition](#cfn-sagemaker-pipeline-pipelinedefinition): 
    PipelineDefinition
  [PipelineDescription](#cfn-sagemaker-pipeline-pipelinedescription): String
  [PipelineDisplayName](#cfn-sagemaker-pipeline-pipelinedisplayname): String
  [PipelineName](#cfn-sagemaker-pipeline-pipelinename): String
  [RoleArn](#cfn-sagemaker-pipeline-rolearn): String
  [Tags](#cfn-sagemaker-pipeline-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
ParallelismConfiguration 
Property description not available.
Required: No
Type: ParallelismConfiguration
Update requires: No interruption
PipelineDefinition 
The definition of the pipeline. This can be either a JSON string or an Amazon S3 location.
Required: Yes
Type: PipelineDefinition
Update requires: No interruption
PipelineDescription 
The description of the pipeline.
Required: No
Type: String
Minimum: 0
Maximum: 3072
Pattern: .*
Update requires: No interruption
PipelineDisplayName 
The display name of the pipeline.
Required: No
Type: String
Minimum: 1
Maximum: 256
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,255}
Update requires: No interruption
PipelineName 
The name of the pipeline.
Required: Yes
Type: String
Minimum: 1
Maximum: 256
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,255}
Update requires: Replacement
RoleArn 
The Amazon Resource Name (ARN) of the IAM role used to execute the pipeline.
Required: Yes
Type: String
Minimum: 20
Maximum: 2048
Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
Update requires: No interruption
Tags 
The tags of the pipeline.
Required: No
Type: List of Tag
Maximum: 50
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the PipelineName of the pipeline. 
Examples
SageMaker Pipeline Example
The following example creates a Pipeline with an associated lifecycle configuration.
JSON
```
Pipeline definition given as a JSON string
{
  "Resources": {
    "MyPipeline": {
      "Type": "AWS::SageMaker::Pipeline",
      "Properties": {
        "PipelineName": ""
        "PipelineDisplayName": "",
        "PipelineDescription": "",
        "PipelineDefinition": {
          "PipelineDefinitionBody": "{\"Version\":\"2020-12-01\",\"Parameters\":[{\"Name\":\"InputDataSource\",\"DefaultValue\":\"\"},{\"Name\":\"InstanceCount\",\"Type\":\"Integer\",\"DefaultValue\":1}],\"Steps\":[{\"Name\":\"Training1\",\"Type\":\"Training\",\"Arguments\":{\"InputDataConfig\":[{\"DataSource\":{\"S3DataSource\":{\"S3Uri\":{\"Get\":\"Parameters.InputDataSource\"}}}}],\"OutputDataConfig\":{\"S3OutputPath\":\"s3://my-s3-bucket/\"},\"ResourceConfig\":{\"InstanceType\":\"ml.m5.large\",\"InstanceCount\":{\"Get\":\"Parameters.InstanceCount\"},\"VolumeSizeInGB\":1024}}}]}"
        },
        "RoleArn": "arn:aws:iam:::root"
      }
    }
  }
}
```
JSON
```
Pipeline definition given as an S3 string
{
  "Resources": {
    "MyPipeline": {
      "Type": "AWS::SageMaker::Pipeline",
      "Properties": {
        "PipelineName": "",
        "PipelineDisplayName": "",
        "PipelineDescription": "",
        "PipelineDefinition": {
          "PipelineDefinitionS3Location": {
            "Bucket": "",
            "Key": ""
          }
        },
        "RoleArn": "arn:aws:iam:::root"
      }
    }
  }
}
```
YAML
```
Pipeline definition given as a JSON string
Resources:
  MyPipeline:
    Type: AWS::SageMaker::Pipeline
    Properties:
      PipelineName: "" 
      PipelineDisplayName: ""
      PipelineDescription: ""
      PipelineDefinition:
        PipelineDefinitionBody: "{\"Version\":\"2020-12-01\",\"Parameters\":[{\"Name\":\"InputDataSource\",\"DefaultValue\":\"\"},{\"Name\":\"InstanceCount\",\"Type\":\"Integer\",\"DefaultValue\":1}],\"Steps\":[{\"Name\":\"Training1\",\"Type\":\"Training\",\"Arguments\":{\"InputDataConfig\":[{\"DataSource\":{\"S3DataSource\":{\"S3Uri\":{\"Get\":\"Parameters.InputDataSource\"}}}}],\"OutputDataConfig\":{\"S3OutputPath\":\"s3://my-s3-bucket/\"},\"ResourceConfig\":{\"InstanceType\":\"ml.m5.large\",\"InstanceCount\":{\"Get\":\"Parameters.InstanceCount\"},\"VolumeSizeInGB\":1024}}}]}"
      RoleArn: "arn:aws:iam:::root"
```
YAML
```
Pipeline definition given as an S3 location
Resources:
  MyPipeline:
    Type: AWS::SageMaker::Pipeline
    Properties:
      PipelineName: ""
      PipelineDisplayName:""
      PipelineDescription: ""
      PipelineDefinition:
        PipelineDefinitionS3Location:
          Bucket: ""
          Key: ""
      RoleArn: "arn:aws:iam:::root"
```

AWS::SageMaker::Project
Creates a machine learning (ML) project that can contain one or more templates that set up an ML pipeline from training to deploying an approved model.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::Project",
  "Properties" : {
      "[ProjectDescription](#cfn-sagemaker-project-projectdescription)" : String,
      "[ProjectName](#cfn-sagemaker-project-projectname)" : String,
      "[ServiceCatalogProvisioningDetails](#cfn-sagemaker-project-servicecatalogprovisioningdetails)" : ServiceCatalogProvisioningDetails,
      "[Tags](#cfn-sagemaker-project-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::Project
Properties: 
  [ProjectDescription](#cfn-sagemaker-project-projectdescription): String
  [ProjectName](#cfn-sagemaker-project-projectname): String
  [ServiceCatalogProvisioningDetails](#cfn-sagemaker-project-servicecatalogprovisioningdetails): 
    ServiceCatalogProvisioningDetails
  [Tags](#cfn-sagemaker-project-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
ProjectDescription 
The description of the project.
Required: No
Type: String
Maximum: 1024
Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
Update requires: Replacement
ProjectName 
The name of the project.
Required: Yes
Type: String
Minimum: 1
Maximum: 32
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,31}
Update requires: Replacement
ServiceCatalogProvisioningDetails 
The product ID and provisioning artifact ID to provision a service catalog. For information, see What is AWS Service Catalog.
Required: Yes
Type: ServiceCatalogProvisioningDetails
Update requires: Replacement
Tags 
A list of key-value pairs to apply to this resource.
For more information, see Resource Tag and Using Cost Allocation Tags in the * AWS Billing and Cost Management User Guide.
*Required: No
Type: List of Tag
Update requires: Replacement
Return values
Ref
Fn::GetAtt

CreationTime 
The time that the project was created.
ProjectArn 
The Amazon Resource Name (ARN) of the project.
ProjectId 
The ID of the project. This ID is prepended to all entities associated with this project.
ProjectStatus 
The status of the project.
ServiceCatalogProvisionedProductDetails 
The product ID and status message of the projet as a service catalog provisioned product. For information, see What is AWS Service Catalog.
ServiceCatalogProvisionedProductDetails.ProvisionedProductId 
Property description not available.
ServiceCatalogProvisionedProductDetails.ProvisionedProductStatusMessage 
Property description not available.
Examples
SageMaker Project Example
The following example creates a SageMaker Project.
JSON

{
   "Description": "AWS SageMaker Project basic template",
   "Resources": {
      "SampleProject": {
         "Type": "AWS::SageMaker::Project",
         "Properties": {
            "ProjectName": "project1",
            "ProjectDescription": "Project Description",
            "ServiceCatalogProvisioningDetails": {
               "ProductId": "prod-53ibyqbj2cgmo",
               "ProvisioningArtifactId": "pa-sm4pjfuzictpe"
            }
         }
      }
   }
}

YAML
```
Description: AWS SageMaker Project basic template
Resources:
SampleProject:
    Type: AWS::SageMaker::Project
    Properties:
      ProjectName: "SampleProject"
      ProjectDescription: "Project Description"
      ServiceCatalogProvisioningDetails:
        ProductId: "prod-53ibyqbj2cgmo"
        ProvisioningArtifactId: "pa-sm4pjfuzictpe"
```

AWS::SageMaker::Space
Creates a space used for real time collaboration in a Domain.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::Space",
  "Properties" : {
      "[DomainId](#cfn-sagemaker-space-domainid)" : String,
      "[SpaceName](#cfn-sagemaker-space-spacename)" : String,
      "[SpaceSettings](#cfn-sagemaker-space-spacesettings)" : SpaceSettings,
      "[Tags](#cfn-sagemaker-space-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ]
    }
}

YAML

Type: AWS::SageMaker::Space
Properties: 
  [DomainId](#cfn-sagemaker-space-domainid): String
  [SpaceName](#cfn-sagemaker-space-spacename): String
  [SpaceSettings](#cfn-sagemaker-space-spacesettings): 
    SpaceSettings
  [Tags](#cfn-sagemaker-space-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)

Properties
DomainId 
The ID of the associated Domain.
Required: Yes
Type: String
Maximum: 63
Update requires: Replacement
SpaceName 
The name of the space.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
SpaceSettings 
A collection of space settings.
Required: No
Type: SpaceSettings
Update requires: No interruption
Tags 
An array of key-value pairs to apply to this resource.
For more information, see Tag.
Required: No
Type: List of Tag
Maximum: 50
Update requires: No interruption
Return values
Ref
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.

SpaceArn 
The space's Amazon Resource Name (ARN).

AWS::SageMaker::UserProfile
Creates a user profile. A user profile represents a single user within a domain, and is the main way to reference a "person" for the purposes of sharing, reporting, and other user-oriented features. This entity is created when a user onboards to Amazon SageMaker Studio. If an administrator invites a person by email or imports them from IAM Identity Center, a user profile is automatically created. A user profile is the primary holder of settings for an individual user and has a reference to the user's private Amazon Elastic File System (EFS) home directory. 
Note
If you're using IAM Identity Center authentication, a user in IAM Identity Center, or a group in IAM Identity Center containing that user, must be assigned to the Amazon SageMaker Studio application from the IAM Identity Center Console to create a user profile. For more information about application assignment, see Assign user access. After assignment is complete, a user profile can be created for that user in IAM Identity Center with AWS CloudFormation. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::UserProfile",
  "Properties" : {
      "[DomainId](#cfn-sagemaker-userprofile-domainid)" : String,
      "[SingleSignOnUserIdentifier](#cfn-sagemaker-userprofile-singlesignonuseridentifier)" : String,
      "[SingleSignOnUserValue](#cfn-sagemaker-userprofile-singlesignonuservalue)" : String,
      "[Tags](#cfn-sagemaker-userprofile-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ],
      "[UserProfileName](#cfn-sagemaker-userprofile-userprofilename)" : String,
      "[UserSettings](#cfn-sagemaker-userprofile-usersettings)" : UserSettings
    }
}

YAML

Type: AWS::SageMaker::UserProfile
Properties: 
  [DomainId](#cfn-sagemaker-userprofile-domainid): String
  [SingleSignOnUserIdentifier](#cfn-sagemaker-userprofile-singlesignonuseridentifier): String
  [SingleSignOnUserValue](#cfn-sagemaker-userprofile-singlesignonuservalue): String
  [Tags](#cfn-sagemaker-userprofile-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)
  [UserProfileName](#cfn-sagemaker-userprofile-userprofilename): String
  [UserSettings](#cfn-sagemaker-userprofile-usersettings): 
    UserSettings

Properties
DomainId 
The domain ID.
Required: Yes
Type: String
Maximum: 63
Update requires: Replacement
SingleSignOnUserIdentifier 
A specifier for the type of value specified in SingleSignOnUserValue. Currently, the only supported value is "UserName". If the Domain's AuthMode is IAM Identity Center, this field is required. If the Domain's AuthMode is not IAM Identity Center, this field cannot be specified.
Required: No
Type: String
Update requires: Replacement
SingleSignOnUserValue 
The username of the associated AWS Single Sign-On User for this UserProfile. If the Domain's AuthMode is IAM Identity Center, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not IAM Identity Center, this field cannot be specified.
Required: No
Type: String
Update requires: Replacement
Tags 
An array of key-value pairs to apply to this resource.
Tags that you specify for the User Profile are also added to all apps that the User Profile launches.
For more information, see Tag.
Required: No
Type: List of Tag
Update requires: Replacement
UserProfileName 
The user profile name.
Required: Yes
Type: String
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
UserSettings 
A collection of settings that apply to users of Amazon SageMaker Studio.
Required: No
Type: UserSettings
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Domain ID and the user profile name, such as d-xxxxxxxxxxxx and my-user-profile, respectively.
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.

UserProfileArn 
The Amazon Resource Name (ARN) of the user profile, such as arn:aws:sagemaker:us-west-2:account-id:user-profile/my-user-profile.

AWS::SageMaker::Workteam
Creates a new work team for labeling your data. A work team is defined by one or more Amazon Cognito user pools. You must first create the user pools before you can create a work team.
You cannot create more than 25 work teams in an account and region.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON

{
  "Type" : "AWS::SageMaker::Workteam",
  "Properties" : {
      "[Description](#cfn-sagemaker-workteam-description)" : String,
      "[MemberDefinitions](#cfn-sagemaker-workteam-memberdefinitions)" : [ MemberDefinition, ... ],
      "[NotificationConfiguration](#cfn-sagemaker-workteam-notificationconfiguration)" : NotificationConfiguration,
      "[Tags](#cfn-sagemaker-workteam-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ],
      "[WorkforceName](#cfn-sagemaker-workteam-workforcename)" : String,
      "[WorkteamName](#cfn-sagemaker-workteam-workteamname)" : String
    }
}

YAML

Type: AWS::SageMaker::Workteam
Properties: 
  [Description](#cfn-sagemaker-workteam-description): String
  [MemberDefinitions](#cfn-sagemaker-workteam-memberdefinitions): 
    - MemberDefinition
  [NotificationConfiguration](#cfn-sagemaker-workteam-notificationconfiguration): 
    NotificationConfiguration
  [Tags](#cfn-sagemaker-workteam-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)
  [WorkforceName](#cfn-sagemaker-workteam-workforcename): String
  [WorkteamName](#cfn-sagemaker-workteam-workteamname): String

Properties
Description 
A description of the work team.
Required: No
Type: String
Minimum: 1
Maximum: 200
Pattern: .+
Update requires: No interruption
MemberDefinitions 
A list of MemberDefinition objects that contains objects that identify the workers that make up the work team.
Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use CognitoMemberDefinition. For workforces created using your own OIDC identity provider (IdP) use OidcMemberDefinition.
Required: No
Type: List of MemberDefinition
Maximum: 10
Update requires: No interruption
NotificationConfiguration 
Configures SNS notifications of available or expiring work items for work teams.
Required: No
Type: NotificationConfiguration
Update requires: No interruption
Tags 
An array of key-value pairs.
Required: No
Type: List of Tag
Update requires: No interruption
WorkforceName 
Property description not available.
Required: No
Type: String
Update requires: Replacement
WorkteamName 
The name of the work team.
Required: No
Type: String
Minimum: 1
Maximum: 63
Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
Update requires: Replacement
Return values
Ref
Fn::GetAtt

WorkteamName 
The name of the work team.

Logs for Built-in Algorithms
Amazon SageMaker algorithms produce Amazon CloudWatch logs, which provide detailed information on the training process. To see the logs, in the AWS management console, choose CloudWatch, choose Logs, and then choose the /aws/sagemaker/TrainingJobs log group. Each training job has one log stream per node on which it was trained. The log stream’s name begins with the value specified in the TrainingJobName parameter when the job was created.
Note
If a job fails and logs do not appear in CloudWatch, it's likely that an error occurred before the start of training. Reasons include specifying the wrong training image or S3 location.
The contents of logs vary by algorithms. However, you can typically find the following information:
+ Confirmation of arguments provided at the beginning of the log
+ Errors that occurred during training
+ Measurement of an algorithm's accuracy or numerical performance
+ Timings for the algorithm and any major stages within the algorithm
Common Errors
If a training job fails, some details about the failure are provided by the FailureReason return value in the training job description, as follows:

sage = boto3.client('sagemaker')
sage.describe_training_job(TrainingJobName=job_name)['FailureReason']

Others are reported only in the CloudWatch logs. Common errors include the following:

Misspecifying a hyperparameter or specifying a hyperparameter that is invalid for the algorithm.
From the CloudWatch Log

[10/16/2017 23:45:17 ERROR 139623806805824 train.py:48]
Additional properties are not allowed (u'mini_batch_siz' was
unexpected)

Specifying an invalid value for a hyperparameter.
FailureReason

AlgorithmError: u'abc' is not valid under any of the given
schemas\n\nFailed validating u'oneOf' in
schema[u'properties'][u'feature_dim']:\n    {u'oneOf':
[{u'pattern': u'^([1-9][0-9]*)$', u'type': u'string'},\n
{u'minimum': 1, u'type': u'integer'}]}\

FailureReason

[10/16/2017 23:57:17 ERROR 140373086025536 train.py:48] u'abc'
is not valid under any of the given schemas

Inaccurate protobuf file format.
From the CloudWatch log

[10/17/2017 18:01:04 ERROR 140234860816192 train.py:48] cannot
                   copy sequence with size 785 to array axis with dimension 784



Manage SageMaker with Step Functions
Step Functions can control certain AWS services directly from the Amazon States Language. For more information about working with AWS Step Functions and its integrations, see the following:
+ Working with other services
+ Pass Parameters to a Service API
How the Optimized SageMaker integration is different than the SageMaker AWS SDK integration
The Run a Job (.sync) integration pattern is supported.
There are no optimizations for the Request Response integration pattern.
The Wait for a Callback with the Task Token integration pattern is not supported.
Supported SageMaker APIs and syntax:
+ https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateEndpoint.html
  + Request syntax
  + Supported parameters:
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateEndpoint.html#APICreateEndpointRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateEndpoint.html#APICreateEndpointRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateEndpoint.html#APICreateEndpointRequestParameters
  + Response syntax
+ https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateEndpointConfig.html
  + Request syntax
  + Supported parameters:
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateEndpointConfig.html#APICreateEndpointConfigRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateEndpointConfig.html#APICreateEndpointConfigRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateEndpointConfig.html#APICreateEndpointConfigRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateEndpointConfig.html#APICreateEndpointConfigRequestParameters
  + Response syntax
+ https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateHyperParameterTuningJob.html
  + Request syntax
  + Supported parameters:
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateHyperParameterTuningJob.html#APICreateHyperParameterTuningJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateHyperParameterTuningJob.html#APICreateHyperParameterTuningJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateHyperParameterTuningJob.html#APICreateHyperParameterTuningJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateHyperParameterTuningJob.html#APICreateHyperParameterTuningJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateHyperParameterTuningJob.html#APICreateHyperParameterTuningJobRequestParameters
  + Response syntax
+ https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateLabelingJob.html
  + Request syntax
  + Supported parameters:
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateLabelingJob.html#APICreateLabelingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateLabelingJob.html#APICreateLabelingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateLabelingJob.html#APICreateLabelingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateLabelingJob.html#APICreateLabelingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateLabelingJob.html#APICreateLabelingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateLabelingJob.html#APICreateLabelingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateLabelingJob.html#APICreateLabelingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateLabelingJob.html#APICreateLabelingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateLabelingJob.html#APICreateLabelingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateLabelingJob.html#APICreateLabelingJobRequestParameters
  + Response syntax
+ https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateModel.html
  + Request syntax
  + Supported parameters:
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateModel.html#APICreateModelRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateModel.html#APICreateModelRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateModel.html#APICreateModelRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateModel.html#APICreateModelRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateModel.html#APICreateModelRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateModel.html#APICreateModelRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateModel.html#APICreateModelRequestParameters
+ https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateProcessingJob.html
  + Request syntax
  + Supported parameters:
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateProcessingJob.html#APICreateProcessingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateProcessingJob.html#APICreateProcessingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateProcessingJob.html#APICreateProcessingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateProcessingJob.html#APICreateProcessingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateProcessingJob.html#APICreateProcessingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateProcessingJob.html#APICreateProcessingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateProcessingJob.html#APICreateProcessingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateProcessingJob.html#APICreateProcessingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateProcessingJob.html#APICreateProcessingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateProcessingJob.html#APICreateProcessingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateProcessingJob.html#APICreateProcessingJobRequestParameters
  + Response syntax
+ https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTrainingJob.html
  + Request syntax
  + Supported parameters:
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTrainingJob.html#APICreateTrainingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTrainingJob.html#APICreateTrainingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTrainingJob.html#APICreateTrainingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTrainingJob.html#APICreateTrainingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTrainingJob.html#APICreateTrainingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTrainingJob.html#APICreateTrainingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTrainingJob.html#APICreateTrainingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTrainingJob.html#APICreateTrainingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTrainingJob.html#APICreateTrainingJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTrainingJob.html#APICreateTrainingJobRequestParameters
  + Response syntax
+ https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTransformJob.html
Note
AWS Step Functions will not automatically create a policy for CreateTransformJob. You must attach an inline policy to the created role. For more information, see this example IAM policy: CreateTrainingJob.
  + Request syntax
  + Supported parameters:
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTransformJob.html#APICreateTransformJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTransformJob.html#APICreateTransformJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTransformJob.html#APICreateTransformJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTransformJob.html#APICreateTransformJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTransformJob.html#APICreateTransformJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTransformJob.html#APICreateTransformJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTransformJob.html#APICreateTransformJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTransformJob.html#APICreateTransformJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTransformJob.html#APICreateTransformJobRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APICreateTransformJob.html#APICreateTransformJobRequestParameters
  + Response syntax
+ https://docs.aws.amazon.com/sagemaker/latest/dg/APIUpdateEndpoint.html
  + Request syntax
  + Supported parameters:
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APIUpdateEndpoint.html#APIUpdateEndpointRequestParameters
    + https://docs.aws.amazon.com/sagemaker/latest/dg/APIUpdateEndpoint.html#APIUpdateEndpoint_RequestParameters
  + Response syntax
SageMaker Transform Job Example
The following includes a Task state that creates an Amazon SageMaker transform job, specifying the Amazon S3 location for DataSource and TransformOutput.

{
"SageMaker CreateTransformJob": {
  "Type": "Task",
  "Resource": "arn:aws:states:::sagemaker:createTransformJob.sync",
  "Parameters": {
    "ModelName": "SageMakerCreateTransformJobModel-9iFBKsYti9vr",
    "TransformInput": {
      "CompressionType": "None",
      "ContentType": "text/csv",
      "DataSource": {
        "S3DataSource": {
          "S3DataType": "S3Prefix",
          "S3Uri": "s3://my-s3bucket-example-1/TransformJobDataInput.txt"
        }
      }
    },
    "TransformOutput": {
      "S3OutputPath": "s3://my-s3bucket-example-1/TransformJobOutputPath"
    },
    "TransformResources": {
      "InstanceCount": 1,
      "InstanceType": "ml.m4.xlarge"
    },
    "TransformJobName": "sfn-binary-classification-prediction"
  },
  "Next": "ValidateOutput"
},

SageMaker Training Job Example
The following includes a Task state that creates an Amazon SageMaker training job.

{  
   "SageMaker CreateTrainingJob":{  
      "Type":"Task",
      "Resource":"arn:aws:states:::sagemaker:createTrainingJob.sync",
      "Parameters":{  
         "TrainingJobName":"search-model",
         "ResourceConfig":{  
            "InstanceCount":4,
            "InstanceType":"ml.c4.8xlarge",
            "VolumeSizeInGB":20
         },
         "HyperParameters":{  
            "mode":"batch_skipgram",
            "epochs":"5",
            "min_count":"5",
            "sampling_threshold":"0.0001",
            "learning_rate":"0.025",
            "window_size":"5",
            "vector_dim":"300",
            "negative_samples":"5",
            "batch_size":"11"
         },
         "AlgorithmSpecification":{  
            "TrainingImage":"...",
            "TrainingInputMode":"File"
         },
         "OutputDataConfig":{  
            "S3OutputPath":"s3://bucket-name/doc-search/model"
         },
         "StoppingCondition":{  
            "MaxRuntimeInSeconds":100000
         },
         "RoleArn":"arn:aws:iam::123456789012:role/docsearch-stepfunction-iam-role",
         "InputDataConfig":[  
            {  
               "ChannelName":"train",
               "DataSource":{  
                  "S3DataSource":{  
                     "S3DataType":"S3Prefix",
                     "S3Uri":"s3://bucket-name/doc-search/interim-data/training-data/",
                     "S3DataDistributionType":"FullyReplicated"
                  }
               }
            }
         ]
      },
      "Retry":[  
         {  
            "ErrorEquals":[  
               "SageMaker.AmazonSageMakerException"
            ],
            "IntervalSeconds":1,
            "MaxAttempts":100,
            "BackoffRate":1.1
         },
         {  
            "ErrorEquals":[  
               "SageMaker.ResourceLimitExceededException"
            ],
            "IntervalSeconds":60,
            "MaxAttempts":5000,
            "BackoffRate":1
         },
         {  
            "ErrorEquals":[  
               "States.Timeout"
            ],
            "IntervalSeconds":1,
            "MaxAttempts":5,
            "BackoffRate":1
         }
      ],
      "Catch":[  
         {  
            "ErrorEquals":[  
               "States.ALL"
            ],
            "ResultPath":"$.cause",
            "Next":"Sagemaker Training Job Error"
         }
      ],
      "Next":"Delete Interim Data Job"
   }
}

SageMaker Labeling Job Example
The following includes a Task state that creates an Amazon SageMaker labeling job.

{
  "StartAt": "SageMaker CreateLabelingJob",
  "TimeoutSeconds": 3600,
  "States": {
    "SageMaker CreateLabelingJob": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:createLabelingJob.sync",
      "Parameters": {
        "HumanTaskConfig": {
          "AnnotationConsolidationConfig": {
            "AnnotationConsolidationLambdaArn": "arn:aws:lambda:us-west-2:123456789012:function:ACS-TextMultiClass"
          },
          "NumberOfHumanWorkersPerDataObject": 1,
          "PreHumanTaskLambdaArn": "arn:aws:lambda:us-west-2:123456789012:function:PRE-TextMultiClass",
          "TaskDescription": "Classify the following text",
          "TaskKeywords": [
            "tc",
            "Labeling"
          ],
          "TaskTimeLimitInSeconds": 300,
          "TaskTitle": "Classify short bits of text",
          "UiConfig": {
            "UiTemplateS3Uri": "s3://s3bucket-example/TextClassification.template"
          },
          "WorkteamArn": "arn:aws:sagemaker:us-west-2:123456789012:workteam/private-crowd/ExampleTesting"
        },
        "InputConfig": {
          "DataAttributes": {
            "ContentClassifiers": [
              "FreeOfPersonallyIdentifiableInformation",
              "FreeOfAdultContent"
            ]
          },
          "DataSource": {
            "S3DataSource": {
              "ManifestS3Uri": "s3://s3bucket-example/manifest.json"
            }
          }
        },
        "LabelAttributeName": "Categories",
        "LabelCategoryConfigS3Uri": "s3://s3bucket-example/labelcategories.json",
        "LabelingJobName": "example-job-name",
        "OutputConfig": {
          "S3OutputPath": "s3://s3bucket-example/output"
        },
        "RoleArn": "arn:aws:iam::123456789012:role/service-role/AmazonSageMaker-ExecutionRole",
        "StoppingConditions": {
          "MaxHumanLabeledObjectCount": 10000,
          "MaxPercentageOfInputDatasetLabeled": 100
        }
      },
      "Next": "ValidateOutput"
    },
    "ValidateOutput": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "Variable": "$.LabelingJobArn",
            "StringEquals": ""
          },
          "Next": "Succeed"
        }
      ],
      "Default": "Fail"
    },
    "Succeed": {
      "Type": "Succeed"
    },
    "Fail": {
      "Type": "Fail",
      "Error": "InvalidOutput",
      "Cause": "Output is not what was expected. This could be due to a service outage or a misconfigured service integration."
    }
  }
}

SageMaker Processing Job Example
The following includes a Task state that creates an Amazon SageMaker processing job.

{
  "StartAt": "SageMaker CreateProcessingJob Sync",
  "TimeoutSeconds": 3600,
  "States": {
    "SageMaker CreateProcessingJob Sync": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:createProcessingJob.sync",
      "Parameters": {
        "AppSpecification": {
          "ImageUri": "737474898029.dkr.ecr.sa-east-1.amazonaws.com/sagemaker-scikit-learn:0.20.0-cpu-py3"
        },
        "ProcessingResources": {
          "ClusterConfig": {
            "InstanceCount": 1,
            "InstanceType": "ml.t3.medium",
            "VolumeSizeInGB": 10
          }
        },
        "RoleArn": "arn:aws:iam::123456789012:role/SM-003-CreateProcessingJobAPIExecutionRole",
        "ProcessingJobName.$": "$.id"
      },
      "Next": "ValidateOutput"
    },
    "ValidateOutput": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "Variable": "$.ProcessingJobArn",
            "StringEquals": ""
          },
          "Next": "Succeed"
        }
      ],
      "Default": "Fail"
    },
    "Succeed": {
      "Type": "Succeed"
    },
    "Fail": {
      "Type": "Fail",
      "Error": "InvalidConnectorOutput",
      "Cause": "Connector output is not what was expected. This could be due to a service outage or a misconfigured connector."
    }
  }
}

For information on how to configure IAM when using Step Functions with other AWS services, see IAM Policies for integrated services.

Step 7: Create an IAM Role for SageMaker Notebooks
If you plan to use SageMaker notebooks with development endpoints, you need to grant the IAM role permissions. You provide those permissions by using AWS Identity and Access Management (IAM), through an IAM role.
To create an IAM role for SageMaker notebooks

Sign in to the AWS Management Console and open the IAM console at https://console.aws.amazon.com/iam/.
In the left navigation pane, choose Roles.
Choose Create role.
For role type, choose AWS Service, find and choose SageMaker, and then choose the SageMaker - Execution use case. Then choose Next: Permissions.
On the Attach permissions policy page, choose the policies that contain the required permissions; for example, AmazonSageMakerFullAccess.   Choose Next: Review.
If you plan to access Amazon S3 sources and targets that are encrypted with SSE-KMS, attach a policy that allows notebooks to decrypt the data, as shown in the following example. For more information, see Protecting Data Using Server-Side Encryption with AWS KMS-Managed Keys (SSE-KMS). 

{  
   "Version":"2012-10-17",
   "Statement":[  
      {  
         "Effect":"Allow",
         "Action":[  
            "kms:Decrypt"
         ],
         "Resource":[  
            "arn:aws:kms:*:account-id-without-hyphens:key/key-id"
         ]
      }
   ]
}

For Role name, enter a name for your role. To allow the role to be passed from console users to SageMaker, use a name that is prefixed with the string AWSGlueServiceSageMakerNotebookRole. AWS Glue provided policies expect IAM roles to begin with AWSGlueServiceSageMakerNotebookRole. Otherwise you must add a policy to your users to allow the iam:PassRole permission for IAM roles to match your naming convention. 
For example, enter AWSGlueServiceSageMakerNotebookRole-Default, and then choose Create role. 
After you create the role, attach the policy that allows additional permissions required to create SageMaker notebooks from AWS Glue.
Open the role that you just created, AWSGlueServiceSageMakerNotebookRole-Default, and choose Attach policies. Attach the policy that you created named AWSGlueSageMakerNotebook to the role. 


Step 6: Create an IAM Policy for SageMaker Notebooks
If you plan to use SageMaker notebooks with development endpoints, you must specify permissions when you create the notebook. You provide those permissions by using AWS Identity and Access Management (IAM).
To create an IAM policy for SageMaker notebooks

Sign in to the AWS Management Console and open the IAM console at https://console.aws.amazon.com/iam/.
In the left navigation pane, choose Policies.
Choose Create Policy.
On the Create Policy page, navigate to a tab to edit the JSON. Create a policy document with the following JSON statements. Edit bucket-name, region-code, and account-id for your environment.

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Action": [
                "s3:ListBucket"
            ],
            "Effect": "Allow",
            "Resource": [
                "arn:aws:s3:::bucket-name"
            ]
        },
        {
            "Action": [
                "s3:GetObject"
            ],
            "Effect": "Allow",
            "Resource": [
                "arn:aws:s3:::bucket-name*"
            ]
        },
        {
            "Action": [
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
                "logs:CreateLogGroup"
            ],
            "Effect": "Allow",
            "Resource": [
                "arn:aws:logs:region-code:account-id:log-group:/aws/sagemaker/*",
                "arn:aws:logs:region-code:account-id:log-group:/aws/sagemaker/*:log-stream:aws-glue-*"
            ]
        },
        {
            "Action": [
                "glue:UpdateDevEndpoint",
                "glue:GetDevEndpoint",
                "glue:GetDevEndpoints"
            ],
            "Effect": "Allow",
            "Resource": [
                "arn:aws:glue:region-code:account-id:devEndpoint/*"
            ]
        },
        {
            "Action": [
                "sagemaker:ListTags"
            ],
            "Effect": "Allow",
            "Resource": [
                "arn:aws:sagemaker:region-code:account-id:notebook-instance/*"
            ]
         }
    ]
}

Then choose Review policy. 
The following table describes the permissions granted by this policy.
[See the AWS documentation website for more details]
On the Review Policy screen, enter your Policy Name, for example AWSGlueSageMakerNotebook. Enter an optional description, and when you're satisfied with the policy, choose Create policy.


Train a Model in Amazon SageMaker
To begin creating your custom image classification model using your registered AWS DeepLens device you need to launch an Amazon SageMaker instance and request a service limit increase. 
Getting Started with an Amazon SageMaker Instance
SageMaker is a fully managed machine learning service that enables data scientists and developers to build and train machine learning models using a Jupyter notebook instance. 
To create a custom image classification model, we need to use a graphics processing unit (GPU) enabled training job instance. GPUs are excellent at parallelizing the computations required to train a neural network for this project. 
In order to access a GPU-enabled training job instance, you must submit a request for a service limit increase to the  AWS Support Center. 
Note
Jupyter notebooks are open source web applications that you can use to create and share documents that contain live code, equations, visualizations, and narrative text. The AWS DeepLens Jupyter notebook in this repo contains code that demonstrates how to create machine learning solutions with Amazon SageMaker and AWS DeepLens. 
Request a GPU-enabled Amazon SageMaker Training Instance

Open the AWS Support Center console.
On the AWS Support Center page, choose Create Case and then choose * Service limit increase*.
In the Case classification panel under Limit type, search for Amazon SageMaker.
In the Request panel, choose the Region that you are working in. For Resource Type, choose SageMaker Training. 
For Limit choose ml.p2.xlarge instances.
For New Limit Value, verify that the value is 1.
In Case description, provide a brief explanation of why you need the Service limit increase. For example, I need to use this GPU-enabled training job instance to train a deep learning model using TensorFlow. I'll use this model on an AWS DeepLens device. 
In Contact options, provide some details about how you would like to be contacted by the AWS service support team on the status of your Service limit increase request. 
Choose Submit.

Create an SageMaker Notebook Instance

Sign in to the SageMaker console
In the navigation pane, choose Notebook instances.
On the Notebook instances page, choose Create notebook instance.

On the Create notebook instance page, enter your name in Notebook instance name, and then choose ml.p2.xlarge.

Choose your IAM Role to set up the correct permissions and encryption as follows: 

If you have an existing Amazon SageMaker IAM role, select that IAM role from the list.
If you are new to Amazon SageMaker, create an IAM role by choosing Create a new role. On the Create an IAM role page, choose Any S3 bucket to give your new IAM role access to your S3 bucket. Choose Create Role.


On the Create a notebook instance page, choose IAM Role, and then choose your IAM role from the list. 
Open the Git repositories panel. and then, under the Default repository drop down, choose clone a public gitHub repository. 
Copy https://github.com/aws-samples/aws-deeplens-recipes/ and paste it into the field. It contains the Jupyter notebook required for this custom project.

Choose Create notebook instance.
In a few minutes, Amazon SageMaker will launch the notebook instance. When ready the status will change from Pending to In service. 
On the * Notebook instances* page, choose Open Jupyter to launch your newly created Jupyter notebook. 
Navigate to the static/code/trash-sorter/ directory and open the aws-deeplens-custom-trash-detector.ipynb.

Follow the prompts in the Jupyter notebook to train your model.
Note
Jupyter notebook contain a mixture of code and markdown cells. In a notebook, each cell can be run and modified. To modify a cell, double-click it and make your change. To run a cell, press ShiftEnter.
While the cell is running, an asterisk (*) appears in brackets to the left of the cell that you selected. When the cell has finished running, the asterisk is replaced by an output number, and a new output cell is generated beneath the original cell.
Alternatively, you can also run a cell by selecting it and then choosing Run on the toolbar.

Next steps
+ At this point in the tutorial, you should have now successfully completed the following:
  + Registering . your AWS DeepLens device
  + Created an Amazon S3 bucket
  +  Trained an image classification model SageMaker
Next, you will learn how to deploy this model to run on AWS DeepLens

Train a Head Pose Detection Model in SageMaker
To train our model in SageMaker, follow the steps below to create a Notebook using the SageMaker console:
Create an SageMaker Notebook

Sign in to the SageMaker console at https://console.aws.amazon.com/sagemaker/home?region=us-east-1.
From the main navigation pane, choose Notebook instances.
Under Notebook instance settings on the Create notebook instance page, do the following:

Under Notebook instance name, type TFHeadpose.
Leave the default values for all other options.
Choose Create notebook instance.

Next to the TFHeadpose notebook instance, choose Open, after the notebook instance status becomes inService.
On the upper-right corner, choose Upload to start importing a notebook instance and other needed files. 
In the file picker, navigate to the HeadPost_SageMaker_PythonSDK folder in the previously cloned or downloaded headpose-estimator-apache-mxnet-master project folder. Then, select the following files: 

resnet_headpose.py: This is a script that defines the workflow for training with the deep learning network architecture prescribed in the accompanying resnet_model_headpose.py file applied to a specified input data.
resnet_model_headpose.py: This is a Python script that prescribes the deep learning network architecture used to train our model for head pose detection.
tensorflow_resnet_headpost_for_deeplens.ipynb: This is a Notebook instance to run an SageMaker job to manage training following the script of resnet_headpose.py, including data preparation and transformation.

Then, choose Open.
If you intend to run the preprocessing script on the AWS Cloud, navigate to the headpose-estimator-apache-mxnet-master folder, select the preprocessingDataset_py2.py, and choose Open. 
On the Files tab in the TFHeadpose notebook, choose Upload for each of the newly selected files to finish importing the files into the notebook. You're now ready to run an SageMaker job to train your model.
Choose tensorflow_resnet_headpose_for_deeplens.ipynb to open the notebook instance in a separate browser tab. The notebook instance lets you step through the tasks necessary to run an SageMaker job to train your model and to transform the model artifacts to a format supported by AWS DeepLens.
Run an SageMaker job to train your model in the notebook instance. The implementation is presented in separate code cells that can be run sequentially.

Under Set up the environment, the code cell contains the Python code to configure the data store for the input and output of the SageMaker model training job. 
```
import os
import sagemaker
from sagemaker import getexecutionrole
s3bucket = 'deeplens-sagemaker-models-'
headposefolder = 'headpose'
Bucket location to save your custom code in tar.gz format.
customcodefolder = 'customTFcodes'
customcodeuploadlocation = 's3://{}/{}/{}'.format(s3bucket, headposefolder, customcode_folder)
Bucket location where results of model training are saved.
modelartifactsfolder = 'TFartifacts'
modelartifactslocation = 's3://{}/{}/{}'.format(s3bucket, headposefolder, modelartifactsfolder)
IAM execution role that gives SageMaker access to resources in your AWS account.
We can use the SageMaker Python SDK to get the role from our notebook environment.
role = getexecutionrole()
```
To use the S3 bucket and folders as the data store, assign your S3 bucket name (e.g., deeplens-sagemaker-models-<my-name>) to the s3_bucket variable. Make sure that the specified folder names all match what you have in the Amazon S3 bucket. 
To execute this code block, choose Run from the menu bar of the notebook instance.

Under Create a training job using the sagemaker.tensorflow.TensorFlow estimator, the code cell contains the code snippet that performs the following tasks:

Instantiate a sagemaker.tensorflow.TensorFlow estimator class (estimator), with a specified training script and process configuration.
Start training the model (estimator.fit(…)) with the estimator, with the training data in a specified data store. 

The code snippet is shown as follows: 
```
from sagemaker.tensorflow import TensorFlow
source_dir = os.path.join(os.getcwd())
AWS DeepLens currently supports TensorFlow version 1.4 (as of August 24th 2018).
estimator = TensorFlow(entrypoint='resnetheadpose.py',
                       frameworkversion = 1.4,
                       sourcedir=sourcedir,
                       role=role,
                       trainingsteps=25000, evaluationsteps=700,
                       traininstancecount=1, 
                       basejobname='deeplens-TF-headpose',
                       outputpath=modelartifactslocation,
                       codelocation=customcodeuploadlocation,
                       traininstancetype='ml.p2.xlarge',
                       trainmaxrun = 432000,
                       trainvolumesize=100)
Head-pose dataset "HeadPoseDatatrntestx15py2.pkl" is in the following S3 folder.
datasetlocation = 's3://{}/{}/datasets'.format(s3bucket, headpose_folder)
estimator.fit(dataset_location)
```
To create the estimator object, you assign to entry_point the name of the Python file containing the custom TensorFlow model training script. For this tutorial, this custom code file is resnet_headpose.py that was uploaded to the same directory where the notebook instance is located. For framework_version, specify a TensorFlow version supported by AWS DeepLens.
With the train_instance_type of ml.p2.xlarge, it takes about 6.7 billable compute hours to complete the training job (estimator.fit(…)). You can experiment with other train_instance_type options to speed up the process or to optimize the cost. 
The successfully trained model artifact (model.tar.gz) is output to your S3 bucket: 

s3://deeplens-sagemaker-models-<my-name>/headpose/TFartifacts/<training-job-name>/output/model.tar.gz

where <training-job-name> is of the <base_job_name>-<timestamp>. Using the training code above, an example of the <training-job-name> would be deeplens-TF-headpose-2018-08-16-20-10-09-991. You must transform this model artifact into a frozen protobuff format that is supported by AWS DeepLens.
To transform the trained model artifact (model.tar.gz) into a frozen protobuff file (frozen.model.pb), do the following:

Run the following code to use the AWS SDK for Python (boto3) in a code cell in the notebook to download the trained model artifact from your S3 bucket to your notebook:
```
import boto3
s3 = boto3.resource('s3')
key = '{}/{}/{}/output/model.tar.gz'.format(headposefolder, modelartifactsfolder,estimator.latesttraining_job.name)
key = '{}/{}/{}/output/model.tar.gz'.format(headposefolder, modelartifacts_folder, 'deeplens-TF-headpose-2018-08-16-20-10-09-991')
print(key)
s3.Bucket(s3bucket).downloadfile(key,'model.tar.gz')
```
You can verify the downloaded files by running the following shell command in a code cell of the notebook and then examine the output.

!ls

To uncompress the trained model artifact (model.tar.gz), run the following shell command in a code cell:

!tar -xvf model.tar.gz

This command will produce the following output:

export/
export/Servo/
export/Servo/1534474516/
export/Servo/1534474516/variables/
export/Servo/1534474516/variables/variables.data-00000-of-00001
export/Servo/1534474516/variables/variables.index
export/Servo/1534474516/saved_model.pb

The path to a model directory is of the export/*/* pattern. You must specify the model directory path to make a frozen protobuff file from the model artifact. You'll see how to get this directory path in the next step.
To get the model directory and cache it in memory, run the following Python code in a code cell of the notebook instance:
```
import glob
model_dir = glob.glob('export//')
The model directory looks like 'export/Servo/{Assigned by Amazon SageMaker}'
print(model_dir)
```
The output is ['export/Servo/1534474516'].
You can proceed to freezing the graph and save it in the frozen protobuff format.
To freeze the TensorFlow graph and save it in the frozen protobuff format, run the following Python code snippet in a code cell of the notebook instance. The code snippet does the following:

Calls convert_variables_to_constants from the tf.graph_util module to freeze the graph, 
Calls remove_training_nodes from the tf.graph_util module to remove all unnecessary nodes. 
Calls optimize_for_inference from the optimize_for_inference_lib module to generate the inference graph_def. 
Serializes and saves the file as a protobuff.

```
import tensorflow as tf
from tensorflow.python.tools import optimizeforinferencelib
def freezegraph(modeldir, inputnodenames, outputnodenames):
    """Extract the sub graph defined by the output nodes and convert 
    all its variables into constant 
    Args:
        modeldir: the root folder containing the checkpoint state file,
        inputnodenames: a comma-separated string, containing the names of all input nodes
        outputnodenames: a comma-separated string, containing the names of all output nodes, 
"""

# We start a session using a temporary fresh Graph
with tf.Session(graph=tf.Graph()) as sess:
    # We import the meta graph in the current default Graph
    tf.saved_model.loader.load(sess, [tf.saved_model.tag_constants.SERVING], model_dir)

    # We use a built-in TF helper to export variables to constants
    input_graph_def = tf.graph_util.convert_variables_to_constants(
        sess, # The session is used to retrieve the weights
        tf.get_default_graph().as_graph_def(), # The graph_def is used to retrieve the nodes 
        output_node_names.split(",") # The output node names are used to select the usefull nodes
    ) 

# We generate the inference graph_def
input_node_names=['Const_1']    # an array of the input node(s)
output_graph_def = optimize_for_inference_lib.optimize_for_inference(tf.graph_util.remove_training_nodes(input_graph_def),
                                                                     input_node_names.split(","),  # an array of input nodes
                                                                     output_node_names.split(","), # an array of output nodes
                                                                     tf.float32.as_datatype_enum)
# Finally we serialize and dump the output graph_def to the filesystem
with tf.gfile.GFile('frozen_model.pb', "wb") as f:
        f.write(output_graph_def.SerializeToString())

freezegraph(modeldir[0], 'Const1', 'softmaxtensor')
```
As the result, the model artifact is transformed into the frozen protobuff format (frozen_model.pb) and saved to the notebook instance's home directory (model_dir[0]).
In the code above, you must specify the input and output nodes, namely, 'Const_1' and 'softmax_tensor'. For more details, see the resnet_model_headpose.py.
When creating an AWS DeepLens project later, you'll need to add this frozen graph to the project. For this you must upload the protobuff file to an Amazon S3 folder. For this tutorial, you can use your SageMaker traing job's output folder (s3://deeplens-sagemaker-models-<my-name>/headpose/TFartifacts/<sagemaker-job-name>/output) in S3. However, the model is considered an externally trained model in AWS DeepLens.

To upload the frozen graph to your SageMaker training job's output folder, run the following Python code snippet in a code cell of the running notebook instance:
```
data = open('frozen_model.pb', "rb")
key = '{}/{}/{}/output/frozenmodel.pb'.format(headposefolder, modelartifactsfolder,estimator.latesttrainingjob.name)
key = '{}/{}/{}/output/frozenmodel.pb'.format(headposefolder, modelartifactsfolder, 'deeplens-TF-headpose-2018-08-16-20-10-09-991')
s3.Bucket(s3bucket).putobject(Key=key, Body=data)
```
Once uploaded, the model is ready to be imported into your AWS DeepLens project. Before creating the project, we must create a Lambda function that performs inference based on this trained model.



Import Your SageMaker Trained Model
To use your SageMaker trained model for your computer vision application, you must import it into AWS DeepLens.
To import your SageMaker trained model into AWS DeepLens

Open the AWS DeepLens console at https://console.aws.amazon.com/deeplens/.
From the navigation pane, choose Models then choose Import model.
For Import source choose SageMaker trained model.
In the Model settings area:

From the list of completed jobs, choose the SageMaker training job ID for the model you want to import. 
The ID of the job must begin with deeplens-, unless you've customized the AWSDeepLensServiceRolePolicy (used for registering the device) to extend the policy to allow AWS DeepLens to access SageMaker's training jobs not starting with deeplens*. 
If you do not find the job you're looking for in the list, go to the SageMaker console and check the status of the jobs to verify that it has successfully completed. 
For the Model name, type the name you want for the model. Model names can contain alphanumeric characters and hypens, and be no longer than 100 characters.
For the Description you can optionally type in a description for your model.
Choose Import model.



Use Amazon SageMaker Spark for machine learning
When using Amazon EMR release version 5.11.0 and later, the aws-sagemaker-spark-sdk component is installed along with Spark. This component installs Amazon SageMaker Spark and associated dependencies for Spark integration with Amazon SageMaker. You can use Amazon SageMaker Spark to construct Spark machine learning (ML) pipelines using Amazon SageMaker stages. For more information, see the Amazon SageMaker Spark readme on GitHub and Using Apache Spark with Amazon SageMaker in the Amazon SageMaker Developer Guide.

Working with Amazon SageMaker
Amazon SageMaker is a fully managed service that provides every developer and data scientist with the ability to build, train, and deploy machine learning (ML) models. See the following resources for complete code examples with instructions.
Link to Github 
Link to AWS Code Sample Catalog 

How Amazon SageMaker uses AWS Secrets Manager
SageMaker is a fully managed machine learning service. With SageMaker, data scientists and developers can quickly and easily build and train machine learning models, and then directly deploy them into a production-ready hosted environment. It provides an integrated Jupyter authoring notebook instance for easy access to your data sources for exploration and analysis, so you don't have to manage servers. 
You can associate Git repositories with your Jupyter notebook instances to save your notebooks in a source control environment that persists even if you stop or delete your notebook instance. You can manage your private repositories credentials using Secrets Manager. For more information, see Associate Git Repositories with Amazon SageMaker Notebook Instances in the Amazon SageMaker Developer Guide.
To import data from Databricks, Data Wrangler stores your JDBC URL in Secrets Manager. For more information, see Import data from Databricks (JDBC).
To import data from Snowflake, Data Wrangler stores your credentials in a Secrets Manager secret. For more information, see Import data from Snowflake.

SageMaker Components for Kubeflow Pipelines
This document outlines how to use SageMaker Components for Kubeflow Pipelines (KFP). With these pipeline components, you can create and monitor native SageMaker training, tuning, endpoint deployment, and batch transform jobs from your Kubeflow Pipelines. By running Kubeflow Pipeline jobs on SageMaker, you move data processing and training jobs from the Kubernetes cluster to SageMaker’s machine learning-optimized managed service. This document assumes prior knowledge of Kubernetes and Kubeflow.
Topics
+ What is Kubeflow Pipelines?
+ Kubeflow Pipeline components
+ IAM permissions
+ Converting Pipelines to use SageMaker
+ Install Kubeflow Pipelines
+ Run Kubeflow Pipelines
What is Kubeflow Pipelines?
Kubeflow Pipelines (KFP) is a platform for building and deploying portable, scalable machine learning (ML) workflows based on Docker containers. The Kubeflow Pipelines platform consists of the following:
+ A user interface (UI) for managing and tracking experiments, jobs, and runs. 
+ An engine (Argo) for scheduling multi-step ML workflows.
+ An SDK for defining and manipulating pipelines and components.
+ Notebooks for interacting with the system using the SDK.
A pipeline is a description of an ML workflow expressed as a directed acyclic graph.  Every step in the workflow is expressed as a Kubeflow Pipeline component, which is a Python module.
For more information on Kubeflow Pipelines, see the Kubeflow Pipelines documentation. 
Kubeflow Pipeline components
A Kubeflow Pipeline component is a set of code used to execute one step of a Kubeflow pipeline. Components are represented by a Python module built into a Docker image. When the pipeline runs, the component’s container is instantiated on one of the worker nodes on the Kubernetes cluster running Kubeflow, and your logic is executed. Pipeline components can read outputs from the previous components and create outputs that the next component in the pipeline can consume. These components make it fast and easy to write pipelines for experimentation and production environments without having to interact with the underlying Kubernetes infrastructure.
You can use SageMaker Components in your Kubeflow pipeline. Rather than encapsulating your logic in a custom container, you simply load the components and describe your pipeline using the Kubeflow Pipelines SDK. When the pipeline runs, your instructions are translated into a SageMaker job or deployment. The workload then runs on the fully managed infrastructure of SageMaker. 
What do SageMaker Components for Kubeflow Pipelines provide?
SageMaker Components for Kubeflow Pipelines offer an alternative to launching your compute-intensive jobs from SageMaker. The components integrate SageMaker with the portability and orchestration of Kubeflow Pipelines. Using the SageMaker Components for Kubeflow Pipelines (KFP), you can create and monitor your SageMaker resources as part of a Kubeflow Pipelines workflow. Each of the jobs in your pipelines runs on SageMaker instead of the local Kubernetes cluster allowing you to take advantage of key SageMaker features such as data labeling, large-scale hyperparameter tuning and distributed training jobs, or one-click secure and scalable model deployment. The job parameters, status, logs, and outputs from SageMaker are still accessible from the Kubeflow Pipelines UI. 
The following SageMaker components have been created to integrate six key SageMaker features into your ML workflows. You can create a Kubeflow Pipeline built entirely using these components, or integrate individual components into your workflow as needed. Alternatively, you can find all SageMaker Components for Kubeflow Pipelines in GitHub. 
There is no additional charge for using SageMaker Components for Kubeflow Pipelines. You incur charges for any SageMaker resources you use through these components. 
Training components

Processing
The Processing component enables you to submit processing jobs to SageMaker directly from a Kubeflow Pipelines workflow. For more information, see SageMaker Processing Kubeflow Pipeline component version 1.
Training
The Training component allows you to submit SageMaker Training jobs directly from a Kubeflow Pipelines workflow. For more information, see SageMaker Training Kubeflow Pipelines component version 2. For information about Version 1 of the Training component see SageMaker Training Kubeflow Pipelines component version 1. 
Hyperparameter Optimization
The Hyperparameter Optimization component enables you to submit hyperparameter tuning jobs to SageMaker directly from a Kubeflow Pipelines workflow. For more information, see SageMaker hyperparameter optimization Kubeflow Pipeline component version 1.

Inference components

Hosting Deploy
The Deploy component enables you to deploy a model in SageMaker Hosting from a Kubeflow Pipelines workflow. For more information, see SageMaker Hosting Services - Create Endpoint Kubeflow Pipeline component version 1.
Batch Transform component
The Batch Transform component enables you to run inference jobs for an entire dataset in SageMaker from a Kubeflow Pipelines workflow. For more information, see SageMaker Batch Transform Kubeflow Pipeline component version 1.

Ground Truth components

Ground Truth
The Ground Truth component enables you to submit SageMaker Ground Truth labeling jobs directly from a Kubeflow Pipelines workflow. For more information, see SageMaker Ground Truth Kubeflow Pipelines component version 1.
Workteam
The Workteam component enables you to create SageMaker private workteam jobs directly from a Kubeflow Pipelines workflow. For more information, see SageMaker create private workteam Kubeflow Pipelines component version 1.

SageMaker Components for Kubeflow Pipelines versions
SageMaker Components for Kubeflow Pipelines come in two versions. Each version leverages a different backend to create and manage resources on SageMaker. 
+ The SageMaker Components for Kubeflow Pipelines version 1 (v1.x or below) use Boto3 (AWS SDK for Python (Boto3)) as backend. 
+ The version 2 (v2.0.0-alpha2 and above) of SageMaker Components for Kubeflow Pipelines use  SageMaker Operator for Kubernetes (ACK). 
AWS introduced ACK to facilitate a Kubernetes-native way of managing AWS Cloud resources. ACK includes a set of AWS service-specific controllers, one of which is the SageMaker controller. The SageMaker controller makes it easier for machine learning developers and data scientists using Kubernetes as their control plane to train, tune, and deploy machine learning (ML) models in SageMaker. For more information, see SageMaker Operators for Kubernetes 
Both versions of the SageMaker Components for Kubeflow Pipelines are supported. However, the version 2 provides some additional advantages. In particular, it offers: 

A consistent experience to manage your SageMaker resources from any application; whether you are using Kubeflow pipelines, or Kubernetes CLI (kubectl) or other Kubeflow applications such as Notebooks. 
The flexibility to manage and monitor your SageMaker resources outside of the Kubeflow pipeline workflow. 
Zero setup time to use the components if you deployed the full Kubeflow on AWS release since the SageMaker Operator is part of its deployment. 

IAM permissions
Deploying Kubeflow Pipelines with SageMaker components requires the following three layers of authentication: 
+ An IAM role granting your gateway node (which can be your local machine or a remote instance) access to the Amazon Elastic Kubernetes Service (Amazon EKS) cluster.
The user accessing the gateway node assumes this role to:
  + Create an Amazon EKS cluster and install KFP
  + Create IAM roles
  + Create Amazon S3 buckets for your sample input data
The role requires the following permissions:
  + CloudWatchLogsFullAccess 
  + AWSCloudFormationFullAccess 
  + https://console.aws.amazon.com/iam/home?region=us-east-1#/policies/arn%3Aaws%3Aiam%3A%3Aaws%3Apolicy%2FAWSCloudFormationFullAccess 
  + IAMFullAccess
  + AmazonS3FullAccess
  + AmazonEC2FullAccess
  + AmazonEKSAdminPolicy (Create this policy using the schema from Amazon EKS Identity-Based Policy Examples) 
+ A Kubernetes IAM execution role assumed by Kubernetes pipeline pods (kfp-example-pod-role) or the SageMaker Operator for Kubernetes controller pod to access SageMaker. This role is used to create and monitor SageMaker jobs from Kubernetes.
The role requires the following permission:
  + AmazonSageMakerFullAccess 
You can limit permissions to the KFP and controller pods by creating and attaching your own custom policy.
+ A SageMaker IAM execution role assumed by SageMaker jobs to access AWS resources such as Amazon S3 or Amazon ECR (kfp-example-sagemaker-execution-role).
SageMaker jobs use this role to:
  + Access SageMaker resources
  + Input Data from Amazon S3
  + Store your output model to Amazon S3
The role requires the following permissions:
  + AmazonSageMakerFullAccess 
  + AmazonS3FullAccess 
Converting Pipelines to use SageMaker
You can convert an existing pipeline to use SageMaker by porting your generic Python processing containers and training containers. If you are using SageMaker for inference, you also need to attach IAM permissions to your cluster and convert an artifact to a model.

Install Kubeflow Pipelines
Kubeflow Pipelines (KFP) is the pipeline orchestration component of Kubeflow.
You can deploy Kubeflow Pipelines (KFP) on an existing Amazon Elastic Kubernetes Service (Amazon EKS) or create a new Amazon EKS cluster. Use a gateway node to interact with your cluster. The gateway node can be your local machine or an Amazon EC2 instance.
The following section guides you through the steps to set up and configure these resources.
Topics
+ Choose an installation option
+ Configure your pipeline permissions to access SageMaker
+ Access the KFP UI (Kubeflow Dashboard)
Choose an installation option
Kubeflow Pipelines is available as a core component of the full distribution of Kubeflow on AWS or as a standalone installation.
Select the option that applies to your use case:

Full Kubeflow on AWS Deployment
To use other Kubeflow components in addition to Kubeflow Pipelines, choose the full AWS distribution of Kubeflow deployment. 
Standalone Kubeflow Pipelines Deployment
To use the Kubeflow Pipelines without the other components of Kubeflow, install Kubeflow pipelines standalone. 

Full Kubeflow on AWS Deployment
To install the full release of Kubeflow on AWS, choose the vanilla deployment option from Kubeflow on AWS deployment guide or any other deployment option supporting integrations with various AWS services (Amazon S3, Amazon RDS, Amazon Cognito).
Standalone Kubeflow Pipelines Deployment
This section assumes that your user has permissions to create roles and define policies for the role.
Set up a gateway node
You can use your local machine or an Amazon EC2 instance as your gateway node. A gateway node is used to create an Amazon EKS cluster and access the Kubeflow Pipelines UI. 
Complete the following steps to set up your node. 

Create a gateway node.
You can use an existing Amazon EC2 instance or create a new instance with the latest Ubuntu 18.04 DLAMI version using the steps in  Launching and Configuring a DLAMI.
1. 

Create an IAM role to grant your gateway node access to AWS resources.
Create an IAM role with permissions to the following resources: CloudWatch, AWS CloudFormation, IAM, Amazon EC2, Amazon S3, Amazon EKS.
Attach the following policies to the IAM role:
   + CloudWatchLogsFullAccess 
   + AWSCloudFormationFullAccess
   + https://console.aws.amazon.com/iam/home?region=us-east-1#/policies/arn%3Aaws%3Aiam%3A%3Aaws%3Apolicy%2FAWSCloudFormationFullAccess
   + IAMFullAccess 
   + AmazonS3FullAccess 
   + AmazonEC2FullAccess 
   + AmazonEKSAdminPolicy (Create this policy using the schema from Amazon EKS Identity-Based Policy Examples) 
For information on adding IAM permissions to an IAM role, see Adding and removing IAM identity permissions.

Install the following tools and clients
Install and configure the following tools and resources on your gateway node to access the Amazon EKS cluster and KFP User Interface (UI). 

AWS CLI: The command line tool for working with AWS services. For AWS CLI configuration information, see Configuring the AWS CLI. 
aws-iam-authenticator version 0.1.31 and above: A tool to use AWS IAM credentials to authenticate to a Kubernetes cluster.
https://docs.aws.amazon.com/eks/latest/userguide/eksctl.html version above 0.15: The command line tool for working with Amazon EKS clusters.
https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl: The command line tool for working with Kubernetes clusters. The version needs to match your Kubernetes version within one minor version.
https://console.aws.amazon.com/https://aws.amazon.com/sdk-for-python/.

pip install boto3



Set up an Amazon EKS cluster

If you do not have an existing Amazon EKS cluster, run the following steps from the command line of your gateway node, skip this step otherwise.

Run the following command to create an Amazon EKS cluster with version 1.17 or above. Replace <clustername> with any name for your cluster. 

eksctl create cluster --name <clustername> --region us-east-1 --auto-kubeconfig --timeout=50m --managed --nodes=1

When the cluster creation is complete, ensure that you have access to your cluster by listing the cluster's nodes. 

kubectl get nodes


Ensure that the current kubectl context points to your cluster with the following command. The current context is marked with an asterisk (*) in the output.
```
kubectl config get-contexts
CURRENT NAME     CLUSTER

@.us-east-1.eksctl.io   .us-east-1.eksctl.io
```

If the desired cluster is not configured as your current default, update the default with the following command. 

aws eks update-kubeconfig --name <clustername> --region us-east-1


Install Kubeflow Pipelines
Run the following steps from the terminal of your gateway node to install Kubeflow Pipelines on your cluster.

Install all cert-manager components.

kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.9.1/cert-manager.yaml

Install the Kubeflow Pipelines.

export PIPELINE_VERSION=2.0.0-alpha.5
kubectl apply -k "github.com/kubeflow/pipelines/manifests/kustomize/env/cert-manager/cluster-scoped-resources?ref=$KFP_VERSION"
kubectl wait --for condition=established --timeout=60s crd/applications.app.k8s.io
kubectl apply -k "github.com/kubeflow/pipelines/manifests/kustomize/env/cert-manager/dev?ref=$KFP_VERSION"

Ensure that the Kubeflow Pipelines service and other related resources are running.

kubectl -n kubeflow get all | grep pipeline

Your output should look like the following.

pod/ml-pipeline-6b88c67994-kdtjv                      1/1     Running            0          2d
pod/ml-pipeline-persistenceagent-64d74dfdbf-66stk     1/1     Running            0          2d
pod/ml-pipeline-scheduledworkflow-65bdf46db7-5x9qj    1/1     Running            0          2d
pod/ml-pipeline-ui-66cc4cffb6-cmsdb                   1/1     Running            0          2d
pod/ml-pipeline-viewer-crd-6db65ccc4-wqlzj            1/1     Running            0          2d
pod/ml-pipeline-visualizationserver-9c47576f4-bqmx4   1/1     Running            0          2d
service/ml-pipeline                       ClusterIP   10.100.170.170   <none>        8888/TCP,8887/TCP   2d
service/ml-pipeline-ui                    ClusterIP   10.100.38.71     <none>        80/TCP              2d
service/ml-pipeline-visualizationserver   ClusterIP   10.100.61.47     <none>        8888/TCP            2d
deployment.apps/ml-pipeline                       1/1     1            1           2d
deployment.apps/ml-pipeline-persistenceagent      1/1     1            1           2d
deployment.apps/ml-pipeline-scheduledworkflow     1/1     1            1           2d
deployment.apps/ml-pipeline-ui                    1/1     1            1           2d
deployment.apps/ml-pipeline-viewer-crd            1/1     1            1           2d
deployment.apps/ml-pipeline-visualizationserver   1/1     1            1           2d
replicaset.apps/ml-pipeline-6b88c67994                      1         1         1       2d
replicaset.apps/ml-pipeline-persistenceagent-64d74dfdbf     1         1         1       2d
replicaset.apps/ml-pipeline-scheduledworkflow-65bdf46db7    1         1         1       2d
replicaset.apps/ml-pipeline-ui-66cc4cffb6                   1         1         1       2d
replicaset.apps/ml-pipeline-viewer-crd-6db65ccc4            1         1         1       2d
replicaset.apps/ml-pipeline-visualizationserver-9c47576f4   1         1         1       2d


Configure your pipeline permissions to access SageMaker
In this section, you create an IAM execution role granting Kubeflow Pipeline pods access to SageMaker services. 
Configuration for SageMaker components version 2
 To run SageMaker Components version 2 for Kubeflow Pipelines, you need to install SageMaker Operator for Kubernetes and configure Role-Based Access Control (RBAC) allowing the Kubeflow Pipelines pods to create SageMaker custom resources in your Kubernetes cluster.  
Important
Follow this section if you are using Kubeflow pipelines standalone deployment. If you are using AWS distribution of Kubeflow version 1.6.0-aws-b1.0.0 or above, SageMaker components version 2 are already set up.

 Install SageMaker Operator for Kubernetes to use SageMaker components version 2. 
Follow the Setup section of Machine Learning with ACK SageMaker Controller tutorial.
Configure RBAC permissions for the execution role (service account) used by Kubeflow Pipelines pods. In Kubeflow Pipelines standalone deployment, pipeline runs are executed in the namespace kubeflow using the pipeline-runner service account. 

Create a RoleBinding that gives the service account permission to manage SageMaker custom resources.
```
cat > managesagemakercr.yaml <
name: manage-sagemaker-cr 
namespace: kubeflow 
subjects: 

kind: ServiceAccount 
name: pipeline-runner 
namespace: kubeflow 
roleRef: 
kind: ClusterRole 
name: ack-sagemaker-controller 
apiGroup: rbac.authorization.k8s.io
EOF
```


kubectl apply -f manage_sagemaker_cr.yaml

Ensure that the rolebinding was created by running:

kubectl get rolebinding manage-sagemaker-cr -n kubeflow -o yaml



Configuration for SageMaker components version 1
To run SageMaker Components version 1 for Kubeflow Pipelines, the Kubeflow Pipeline pods need access to SageMaker.
Important
Follow this section whether you are using the full Kubeflow on AWS deployment or Kubeflow Pilepines standalone. 
To create an IAM execution role granting Kubeflow pipeline pods access to SageMaker, follow those steps:

Export your cluster name (e.g., my-cluster-name) and cluster region (e.g., us-east-1).

export CLUSTER_NAME=my-cluster-name 
export CLUSTER_REGION=us-east-1

Export the namespace and service account name according to your installation.

 For the full Kubeflow on AWS installation, export your profile namespace (e.g., kubeflow-user-example-com) and default-editor as the service account. 

export NAMESPACE=kubeflow-user-example-com 
export KUBEFLOW_PIPELINE_POD_SERVICE_ACCOUNT=default-editor

For the standalone Pipelines deployment, export kubeflow as the namespace and pipeline-runner as the service account. 

export NAMESPACE=kubeflow 
export KUBEFLOW_PIPELINE_POD_SERVICE_ACCOUNT=pipeline-runner 


Create an  IAM OIDC provider for the Amazon EKS cluster with the following command.

eksctl utils associate-iam-oidc-provider --cluster ${CLUSTER_NAME} \ 
            --region ${CLUSTER_REGION} --approve

Create an IAM execution role for the KFP pods to access AWS services (SageMaker, CloudWatch).

eksctl create iamserviceaccount \  
--name ${KUBEFLOW_PIPELINE_POD_SERVICE_ACCOUNT} \  
--namespace ${NAMESPACE} --cluster ${CLUSTER_NAME} \ 
--region ${CLUSTER_REGION} \
--attach-policy-arn arn:aws:iam::aws:policy/AmazonSageMakerFullAccess \ 
--attach-policy-arn arn:aws:iam::aws:policy/CloudWatchLogsFullAccess \ 
--override-existing-serviceaccounts \
--approve


Once your pipeline permissions are configured to access SageMaker Components version 1, follow the SageMaker components for Kubeflow pipelines guide on the   Kubeflow on AWS documentation.  
Access the KFP UI (Kubeflow Dashboard)
The Kubeflow Pipelines UI is used for managing and tracking experiments, jobs, and runs on your cluster. For instructions on how to access the Kubeflow Pipelines UI from your gateway node, follow the steps that apply to your deployment option in this section.
Full Kubeflow on AWS Deployment
Follow the instructions on the Kubeflow on AWS website to connect to the Kubeflow dashboard and navigate to the pipelines tab.
Standalone Kubeflow Pipelines Deployment
Use port forwarding to access the Kubeflow Pipelines UI from your gateway node by following those steps.
Set up port forwarding to the KFP UI service
Run the following command from the command line of your gateway node.

Verify that the KFP UI service is running using the following command.
```
kubectl -n kubeflow get service ml-pipeline-ui
NAME             TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE
ml-pipeline-ui   ClusterIP   10.100.38.71           80/TCP    2d22h
```
Run the following command to set up port forwarding to the KFP UI service. This forwards the KFP UI to port 8080 on your gateway node and allows you to access the KFP UI from your browser. 

kubectl port-forward -n kubeflow service/ml-pipeline-ui 8080:80

The port forward from your remote machine drops if there is no activity. Run this command again if your dashboard is unable to get logs or updates. If the commands return an error, ensure that there is no process already running on the port you are trying to use. 

Access the KFP UI service
Your method of accessing the KFP UI depends on your gateway node type.
+ Local machine as the gateway node:

Access the dashboard in your browser as follows: 

 http://localhost:8080

Choose Pipelines to access the pipelines UI. 

Amazon EC2 instance as the gateway node:

You need to set up an SSH tunnel on your Amazon EC2 instance to access the Kubeflow dashboard from your local machine’s browser. 
From a new terminal session in your local machine, run the following. Replace <public-DNS-of-gateway-node> with the IP address of your instance found on the Amazon EC2 console. You can also use the public DNS. Replace <path_to_key> with the path to the pem key used to access the gateway node. 
```
 publicDNSaddress=
 key=
on Ubuntu:
 ssh -i ${key} -L 9000:localhost:8080 ubuntu@${publicDNSaddress}
or on Amazon Linux:
 ssh -i ${key} -L 9000:localhost:8080 ec2-user@${publicDNSaddress}
 ```
Access the dashboard in your browser. 

 http://localhost:9000

Choose Pipelines to access the KFP UI. 

(Optional) Grant SageMaker notebook instances access to Amazon EKS, and run KFP pipelines from your notebook.
A SageMaker notebook instance is a fully managed Amazon EC2 compute instance that runs the Jupyter Notebook App. You can use a notebook instance to create and manage Jupyter notebooks then define, compile, deploy, and run your KFP pipelines using AWS SDK for Python (Boto3) or the KFP CLI. 

Follow the steps in Create a SageMaker Notebook Instance to create your notebook instance, then attach the S3FullAccess policy to its IAM execution role.
From the command line of your gateway node, run the following command to retrieve the IAM role ARN of the notebook instance you created. Replace <instance-name> with the name of your instance.

aws sagemaker describe-notebook-instance --notebook-instance-name <instance-name> --region <region> --output text --query 'RoleArn'

This command outputs the IAM role ARN in the arn:aws:iam::<account-id>:role/<role-name> format. Take note of this ARN.
Run this command to attach the following policies (AmazonSageMakerFullAccess, AmazonEKSWorkerNodePolicy, AmazonS3FullAccess) to this IAM role. Replace <role-name> with the <role-name> in your ARN. 

aws iam attach-role-policy --role-name <role-name> --policy-arn arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
aws iam attach-role-policy --role-name <role-name> --policy-arn arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
aws iam attach-role-policy --role-name <role-name> --policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess

Amazon EKS clusters use IAM roles to control access to the cluster. The rules are implemented in a config map named aws-auth. eksctl provides commands to read and edit the aws-auth config map. Only the users that have access to the cluster can edit this config map.
system:masters is one of the default user groups with super user permissions to the cluster. Add your user to this group or create a group with more restrictive permissions.
Bind the role to your cluster by running the following command. Replace <IAM-Role-arn> with the ARN of the IAM role. <your_username> can be any unique username.

eksctl create iamidentitymapping \
--cluster <cluster-name> \
--arn <IAM-Role-arn> \
--group system:masters \
--username <your-username> \
--region <region>

Open a Jupyter notebook on your SageMaker instance and run the following command to ensure that it has access to the cluster.

aws eks --region <region> update-kubeconfig --name <cluster-name>
kubectl -n kubeflow get all | grep pipeline



Run Kubeflow Pipelines
In this tutorial, you run a pipeline using SageMaker Components for Kubeflow Pipelines to train a classification model using Kmeans with the MNIST dataset on SageMaker. The workflow uses Kubeflow Pipelines as the orchestrator and SageMaker to execute each step of the workflow. The example was taken from an existing  SageMaker example and modified to work with SageMaker Components for Kubeflow Pipelines.
You can define your pipeline in Python using AWS SDK for Python (Boto3) then use the KFP dashboard, KFP CLI, or Boto3 to compile, deploy, and run your workflows. The full code for the MNIST classification pipeline example is available in the Kubeflow Github repository. To use it, clone the Python files to your gateway node.
You can find additional  SageMaker Kubeflow Pipelines examples on GitHub. For information on the components used, see the KubeFlow Pipelines GitHub repository.
To run the classification pipeline example, create a SageMaker IAM execution role granting your training job the permission to access AWS resources, then continue with the steps that correspond to your deployment option.
Create a SageMaker execution role
The kfp-example-sagemaker-execution-role IAM role is a runtime role assumed by SageMaker jobs to access AWS resources. In the following command, you create an IAM execution role named kfp-example-sagemaker-execution-role, attach two managed policies (AmazonSageMakerFullAccess, AmazonS3FullAccess), and create a trust relationship with SageMaker to grant SageMaker jobs access to those AWS resources.
You provide this role as an input parameter when running the pipeline.
Run the following command to create the role. Note the ARN that is returned in your output.
```
SAGEMAKEREXECUTIONROLE_NAME=kfp-example-sagemaker-execution-role
TRUST="{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"sagemaker.amazonaws.com\" }, \"Action\": \"sts:AssumeRole\" } ] }"
aws iam create-role --role-name ${SAGEMAKEREXECUTIONROLENAME} --assume-role-policy-document "$TRUST"
aws iam attach-role-policy --role-name ${SAGEMAKEREXECUTIONROLENAME} --policy-arn arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
aws iam attach-role-policy --role-name ${SAGEMAKEREXECUTIONROLE_NAME} --policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess
aws iam get-role --role-name ${SAGEMAKEREXECUTIONROLE_NAME} --output text --query 'Role.Arn'
```
Full Kubeflow on AWS Deployment
Follow the instructions of the SageMaker Training Pipeline tutorial for MNIST Classification with K-Means.
Standalone Kubeflow Pipelines Deployment
Prepare datasets
To run the pipelines, you need to upload the data extraction pre-processing script to an Amazon S3 bucket. This bucket and all resources for this example must be located in the us-east-1 region. For information on creating a bucket, see Creating a bucket.
From the mnist-kmeans-sagemaker folder of the Kubeflow repository you cloned on your gateway node, run the following command to upload the kmeans_preprocessing.py file to your Amazon S3 bucket. Change <bucket-name> to the name of your Amazon S3 bucket.

aws s3 cp mnist-kmeans-sagemaker/kmeans_preprocessing.py s3://<bucket-name>/mnist_kmeans_example/processing_code/kmeans_preprocessing.py

Compile and deploy your pipeline
After defining the pipeline, you must compile it to an intermediate representation before you submit it to the Kubeflow Pipelines service on your cluster. The intermediate representation is a workflow specification in the form of a YAML file compressed into a tar.gz file. You need the KFP SDK to compile your pipeline.
Install KFP SDK
Run the following from the command line of your gateway node:

Install the KFP SDK following the instructions in the Kubeflow pipelines documentation.
Verify that the KFP SDK is installed with the following command:

pip show kfp

Verify that dsl-compile has been installed correctly as follows:

which dsl-compile


Compile your pipeline
You have three options to interact with Kubeflow Pipelines: KFP UI, KFP CLI, or the KFP SDK. The following sections illustrate the workflow using the KFP UI and CLI.
Complete the following steps from your gateway node.

Modify your Python file with your Amazon S3 bucket name and IAM role ARN.
Use the dsl-compile command from the command line to compile your pipeline as follows. Replace <path-to-python-file> with the path to your pipeline and <path-to-output> with the location where you want your tar.gz file to be.

dsl-compile --py <path-to-python-file> --output <path-to-output>


Upload and run the pipeline using the KFP CLI
Complete the following steps from the command line of your gateway node. KFP organizes runs of your pipeline as experiments. You have the option to specify an experiment name. If you do not specify one, the run will be listed under Default experiment.

Upload your pipeline as follows:

kfp pipeline upload --pipeline-name <pipeline-name> <path-to-output-tar.gz>

Your output should look like the following. Take note of the pipeline ID.
```
Pipeline 29c3ff21-49f5-4dfe-94f6-618c0e2420fe has been submitted
Pipeline Details


ID           29c3ff21-49f5-4dfe-94f6-618c0e2420fe
   Name         sm-pipeline
   Description
   Uploaded at  2020-04-30T20:22:39+00:00
   ...
   ...
   ```

Create a run using the following command. The KFP CLI run command currently does not support specifying input parameters while creating the run. You need to update your parameters in the Python pipeline file before compiling. Replace <experiment-name> and <job-name> with any names. Replace <pipeline-id> with the ID of your submitted pipeline. Replace <your-role-arn> with the ARN of kfp-example-pod-role. Replace <your-bucket-name> with the name of the Amazon S3 bucket you created. 

kfp run submit --experiment-name <experiment-name> --run-name <job-name> --pipeline-id <pipeline-id> role_arn="<your-role-arn>" bucket_name="<your-bucket-name>"

You can also directly submit a run using the compiled pipeline package created as the output of the dsl-compile command.

kfp run submit --experiment-name <experiment-name> --run-name <job-name> --package-file <path-to-output> role_arn="<your-role-arn>" bucket_name="<your-bucket-name>"

Your output should look like the following:

Creating experiment aws.
Run 95084a2c-f18d-4b77-a9da-eba00bf01e63 is submitted
+--------------------------------------+--------+----------+---------------------------+
| run id                               | name   | status   | created at                |
+======================================+========+==========+===========================+
| 95084a2c-f18d-4b77-a9da-eba00bf01e63 | sm-job |          | 2020-04-30T20:36:41+00:00 |
+--------------------------------------+--------+----------+---------------------------+

Navigate to the UI to check the progress of the job.

Upload and run the pipeline using the KFP UI

On the left panel, choose the Pipelines tab. 
In the upper-right corner, choose +UploadPipeline. 
Enter the pipeline name and description. 
Choose Upload a file and enter the path to the tar.gz file you created using the CLI or with AWS SDK for Python (Boto3).
On the left panel, choose the Pipelines tab.
Find the pipeline you created.
Choose +CreateRun.
Enter your input parameters.
Choose Run.

Run predictions
Once your classification pipeline is deployed, you can run classification predictions against the endpoint that was created by the Deploy component. Use the KFP UI to check the output artifacts for sagemaker-deploy-model-endpoint_name. Download the .tgz file to extract the endpoint name or check the SageMaker console in the region you used.
Configure permissions to run predictions
If you want to run predictions from your gateway node, skip this section.
To use any other machine to run predictions, assign the sagemaker:InvokeEndpoint permission to the IAM role used by the client machine.

On your gateway node, run the following to create an IAM policy file:

cat <<EoF > ./sagemaker-invoke.json
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "sagemaker:InvokeEndpoint"
            ],
            "Resource": "*"
        }
    ]
}
EoF

Attach the policy to the IAM role of the client node.
Run the following command. Replace <your-instance-IAM-role> with the name of the IAM role. Replace <path-to-sagemaker-invoke-json> with the path to the policy file you created.

aws iam put-role-policy --role-name <your-instance-IAM-role> --policy-name sagemaker-invoke-for-worker --policy-document file://<path-to-sagemaker-invoke-json>


Run predictions

Create a Python file from your client machine named mnist-predictions.py with the following content. Replace the ENDPOINT_NAME variable. The script loads the MNIST dataset, creates a CSV from those digits, then sends the CSV to the endpoint for prediction and prints the results.
```
import boto3
import gzip
import io
import json
import numpy
import pickle
ENDPOINTNAME=''
region = boto3.Session().regionname
S3 bucket where the original mnist data is downloaded and stored
downloadeddatabucket = f"jumpstart-cache-prod-{region}"
downloadeddataprefix = "1p-notebooks-datasets/mnist"
Download the dataset
s3 = boto3.client("s3")
s3.downloadfile(downloadeddatabucket, f"{downloadeddata_prefix}/mnist.pkl.gz", "mnist.pkl.gz")
Load the dataset
with gzip.open('mnist.pkl.gz', 'rb') as f:
    trainset, validset, test_set = pickle.load(f, encoding='latin1')
Simple function to create a csv from our numpy array
def np2csv(arr):
    csv = io.BytesIO()
    numpy.savetxt(csv, arr, delimiter=',', fmt='%g')
    return csv.getvalue().decode().rstrip()
runtime = boto3.Session(region).client('sagemaker-runtime')
payload = np2csv(train_set[0][30:31])
response = runtime.invokeendpoint(EndpointName=ENDPOINTNAME,
                                   ContentType='text/csv',
                                   Body=payload)
result = json.loads(response['Body'].read().decode())
print(result)
```
Run the Python file as follows: 

python mnist-predictions.py


View results and logs
When the pipeline is running, you can choose any component to check execution details, such as inputs and outputs. This lists the names of created resources.
If the KFP request is successfully processed and an SageMaker job is created, the component logs in the KFP UI provide a link to the job created in SageMaker. The CloudWatch logs are also provided if the job is successfully created. 
If you run too many pipeline jobs on the same cluster, you may see an error message that indicates that you do not have enough pods available. To fix this, log in to your gateway node and delete the pods created by the pipelines you are not using:

kubectl get pods -n kubeflow
kubectl delete pods -n kubeflow <name-of-pipeline-pod>

Cleanup
When you’re finished with your pipeline, you need to clean up your resources.

From the KFP dashboard, terminate your pipeline runs if they do not exit properly by choosing Terminate.
If the Terminate option doesn’t work, log in to your gateway node and manually terminate all the pods created by your pipeline run as follows:

kubectl get pods -n kubeflow
kubectl delete pods -n kubeflow <name-of-pipeline-pod>

Using your AWS account, log in to the SageMaker service. Manually stop all training, batch transform, and HPO jobs. Delete models, data buckets, and endpoints to avoid incurring any additional costs. Terminating the pipeline runs does not stop the jobs in SageMaker.


Use Amazon SageMaker Jobs
This section is based on the original version of SageMaker Operators for Kubernetes.
Important
We are stopping the development and technical support of SageMaker Operators for Kubernetes in its original version. If you are currently using version v1.2.2 or below of the original version of SageMaker Operators for Kubernetes, we recommend migrating your resources to the latest SageMaker Operators for Kubernetes, the ACK service controller for Amazon SageMaker based on AWS Controllers for Kubernetes (ACK).
For information about the migration steps, see Migrate resources to the latest Operators. For answers to frequently asked questions regarding the end of support of the original version of SageMaker Operators for Kubernetes, see Announcing the End of Support of the Original Version of SageMaker Operator for Kubernetes
To run an Amazon SageMaker job using the Operators for Kubernetes, you can either apply a YAML file or use the supplied Helm Charts. 
All sample operator jobs in the following tutorials use sample data taken from a public MNIST dataset. In order to run these samples, download the dataset into your Amazon S3 bucket. You can find the dataset in Download the MNIST Dataset. 
Topics
+ TrainingJob operator
+ HyperParameterTuningJob operator
+ BatchTransformJob operator
+ HostingDeployment operator
+ ProcessingJob operator
+ HostingAutoscalingPolicy (HAP) Operator
TrainingJob operator
Training job operators reconcile your specified training job spec to SageMaker by launching it for you in SageMaker. You can learn more about SageMaker training jobs in the SageMaker CreateTrainingJob API documentation. 
Topics
+ Create a TrainingJob Using a YAML File
+ Create a TrainingJob Using a Helm Chart
+ List TrainingJobs
+ Describe a TrainingJob
+ View Logs from TrainingJobs
+ Delete TrainingJobs
Create a TrainingJob Using a YAML File

Download the sample YAML file for training using the following command: 

wget https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/samples/xgboost-mnist-trainingjob.yaml

Edit the xgboost-mnist-trainingjob.yaml file to replace the roleArn parameter with your <sagemaker-execution-role>, and outputPath with your Amazon S3 bucket that the SageMaker execution role has write access to. The roleArn must have permissions so that SageMaker can access Amazon S3, Amazon CloudWatch, and other services on your behalf. For more information on creating an SageMaker ExecutionRole, see SageMaker Roles. Apply the YAML file using the following command: 

kubectl apply -f xgboost-mnist-trainingjob.yaml


Create a TrainingJob Using a Helm Chart
You can use Helm Charts to run TrainingJobs. 

Clone the GitHub repository to get the source using the following command: 

git clone https://github.com/aws/amazon-sagemaker-operator-for-k8s.git

Navigate to the amazon-sagemaker-operator-for-k8s/hack/charts/training-jobs/ folder and edit the values.yaml file to replace values like rolearn and outputpath with values that correspond to your account. The RoleARN must have permissions so that SageMaker can access Amazon S3, Amazon CloudWatch, and other services on your behalf. For more information on creating an SageMaker ExecutionRole, see SageMaker Roles. 

Create the TrainingJob
With the roles and Amazon S3 buckets replaced with appropriate values in values.yaml, you can create a training job using the following command: 

helm install . --generate-name

Your output should look like the following: 

NAME: chart-12345678
LAST DEPLOYED: Wed Nov 20 23:35:49 2019
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
Thanks for installing the sagemaker-k8s-trainingjob.

Verify Your Training Helm Chart
To verify that the Helm Chart was created successfully, run: 

helm ls

Your output should look like the following: 

NAME                    NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                           APP VERSION
chart-12345678        default         1               2019-11-20 23:35:49.9136092 +0000 UTC   deployed        sagemaker-k8s-trainingjob-0.1.0
rolebased-12345678    default         1               2019-11-20 23:14:59.6777082 +0000 UTC   deployed        sagemaker-k8s-operator-0.1.0

helm install creates a TrainingJob Kubernetes resource. The operator launches the actual training job in SageMaker and updates the TrainingJob Kubernetes resource to reflect the status of the job in SageMaker. You incur charges for SageMaker resources used during the duration of your job. You do not incur any charges once your job completes or stops. 
Note: SageMaker does not allow you to update a running training job. You cannot edit any parameter and re-apply the file/config. Either change the metadata name or delete the existing job and create a new one. Similar to existing training job operators like TFJob in Kubeflow, update is not supported. 
List TrainingJobs
Use the following command to list all jobs created using the Kubernetes operator: 

kubectl get TrainingJob

The output listing all jobs should look like the following: 

kubectl get trainingjobs
NAME                        STATUS       SECONDARY-STATUS   CREATION-TIME          SAGEMAKER-JOB-NAME
xgboost-mnist-from-for-s3   InProgress   Starting           2019-11-20T23:42:35Z   xgboost-mnist-from-for-s3-examplef11eab94e0ed4671d5a8f

A training job continues to be listed after the job has completed or failed. You can remove a TrainingJob job from the list by following the Delete a Training Job steps. Jobs that have completed or stopped do not incur any charges for SageMaker resources. 
TrainingJob Status Values
The STATUS field can be one of the following values: 
+ Completed 
+ InProgress 
+ Failed 
+ Stopped 
+ Stopping 
These statuses come directly from the SageMaker official API documentation. 
In addition to the official SageMaker status, it is possible for STATUS to be SynchronizingK8sJobWithSageMaker. This means that the operator has not yet processed the job. 
Secondary Status Values
The secondary statuses come directly from the SageMaker official API documentation. They contain more granular information about the status of the job. 
Describe a TrainingJob
You can get more details about the training job by using the describe kubectl command. This is typically used for debugging a problem or checking the parameters of a training job. To get information about your training job, use the following command: 

kubectl describe trainingjob xgboost-mnist-from-for-s3

The output for your training job should look like the following: 

Name:         xgboost-mnist-from-for-s3
Namespace:    default
Labels:       <none>
Annotations:  <none>
API Version:  sagemaker.aws.amazon.com/v1
Kind:         TrainingJob
Metadata:
  Creation Timestamp:  2019-11-20T23:42:35Z
  Finalizers:
    sagemaker-operator-finalizer
  Generation:        2
  Resource Version:  23119
  Self Link:         /apis/sagemaker.aws.amazon.com/v1/namespaces/default/trainingjobs/xgboost-mnist-from-for-s3
  UID:               6d7uiui-0bef-11ea-b94e-0ed467example
Spec:
  Algorithm Specification:
    Training Image:       8256416981234.dkr.ecr.us-east-2.amazonaws.com/xgboost:1
    Training Input Mode:  File
  Hyper Parameters:
    Name:   eta
    Value:  0.2
    Name:   gamma
    Value:  4
    Name:   max_depth
    Value:  5
    Name:   min_child_weight
    Value:  6
    Name:   num_class
    Value:  10
    Name:   num_round
    Value:  10
    Name:   objective
    Value:  multi:softmax
    Name:   silent
    Value:  0
  Input Data Config:
    Channel Name:      train
    Compression Type:  None
    Content Type:      text/csv
    Data Source:
      S 3 Data Source:
        S 3 Data Distribution Type:  FullyReplicated
        S 3 Data Type:               S3Prefix
        S 3 Uri:                     https://s3-us-east-2.amazonaws.com/my-bucket/sagemaker/xgboost-mnist/train/
    Channel Name:                    validation
    Compression Type:                None
    Content Type:                    text/csv
    Data Source:
      S 3 Data Source:
        S 3 Data Distribution Type:  FullyReplicated
        S 3 Data Type:               S3Prefix
        S 3 Uri:                     https://s3-us-east-2.amazonaws.com/my-bucket/sagemaker/xgboost-mnist/validation/
  Output Data Config:
    S 3 Output Path:  s3://my-bucket/sagemaker/xgboost-mnist/xgboost/
  Region:             us-east-2
  Resource Config:
    Instance Count:     1
    Instance Type:      ml.m4.xlarge
    Volume Size In GB:  5
  Role Arn:             arn:aws:iam::12345678910:role/service-role/AmazonSageMaker-ExecutionRole
  Stopping Condition:
    Max Runtime In Seconds:  86400
  Training Job Name:         xgboost-mnist-from-for-s3-6d7fa0af0bef11eab94e0example
Status:
  Cloud Watch Log URL:           https://us-east-2.console.aws.amazon.com/cloudwatch/home?region=us-east-2#logStream:group=/aws/sagemaker/TrainingJobs;prefix=<example>;streamFilter=typeLogStreamPrefix
  Last Check Time:               2019-11-20T23:44:29Z
  Sage Maker Training Job Name:  xgboost-mnist-from-for-s3-6d7fa0af0bef11eab94eexample
  Secondary Status:              Downloading
  Training Job Status:           InProgress
Events:                          <none>

View Logs from TrainingJobs
Use the following command to see the logs from the kmeans-mnist training job: 

kubectl smlogs trainingjob xgboost-mnist-from-for-s3

Your output should look similar to the following. The logs from instances are ordered chronologically. 

"xgboost-mnist-from-for-s3" has SageMaker TrainingJobName "xgboost-mnist-from-for-s3-123456789" in region "us-east-2", status "InProgress" and secondary status "Starting"
xgboost-mnist-from-for-s3-6d7fa0af0bef11eab94e0ed46example/algo-1-1574293123 2019-11-20 23:45:24.7 +0000 UTC Arguments: train
xgboost-mnist-from-for-s3-6d7fa0af0bef11eab94e0ed46example/algo-1-1574293123 2019-11-20 23:45:24.7 +0000 UTC [2019-11-20:23:45:22:INFO] Running standalone xgboost training.
xgboost-mnist-from-for-s3-6d7fa0af0bef11eab94e0ed46example/algo-1-1574293123 2019-11-20 23:45:24.7 +0000 UTC [2019-11-20:23:45:22:INFO] File size need to be processed in the node: 1122.95mb. Available memory size in the node: 8586.0mb
xgboost-mnist-from-for-s3-6d7fa0af0bef11eab94e0ed46example/algo-1-1574293123 2019-11-20 23:45:24.7 +0000 UTC [2019-11-20:23:45:22:INFO] Determined delimiter of CSV input is ','
xgboost-mnist-from-for-s3-6d7fa0af0bef11eab94e0ed46example/algo-1-1574293123 2019-11-20 23:45:24.7 +0000 UTC [23:45:22] S3DistributionType set as FullyReplicated

Delete TrainingJobs
Use the following command to stop a training job on Amazon SageMaker: 

kubectl delete trainingjob xgboost-mnist-from-for-s3

This command removes the SageMaker training job from Kubernetes. This command returns the following output: 

trainingjob.sagemaker.aws.amazon.com "xgboost-mnist-from-for-s3" deleted

If the job is still in progress on SageMaker, the job stops. You do not incur any charges for SageMaker resources after your job stops or completes. 
Note: SageMaker does not delete training jobs. Stopped jobs continue to show on the SageMaker console. The delete command takes about 2 minutes to clean up the resources from SageMaker. 
HyperParameterTuningJob operator
Hyperparameter tuning job operators reconcile your specified hyperparameter tuning job spec to SageMaker by launching it in SageMaker. You can learn more about SageMaker hyperparameter tuning jobs in the SageMaker CreateHyperParameterTuningJob API documentation. 
Topics
+ Create a HyperparameterTuningJob Using a YAML File
+ Create a HyperparameterTuningJob using a Helm Chart
+ List HyperparameterTuningJobs
+ Describe a HyperparameterTuningJob
+ View Logs from HyperparameterTuningJobs
+ Delete a HyperparameterTuningJob
Create a HyperparameterTuningJob Using a YAML File

Download the sample YAML file for the hyperparameter tuning job using the following command: 

wget https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/samples/xgboost-mnist-hpo.yaml

Edit the xgboost-mnist-hpo.yaml file to replace the roleArn parameter with your sagemaker-execution-role. For the hyperparameter tuning job to succeed, you must also change the s3InputPath and s3OutputPath to values that correspond to your account. Apply the updates YAML file using the following command: 

kubectl apply -f xgboost-mnist-hpo.yaml


Create a HyperparameterTuningJob using a Helm Chart
You can use Helm Charts to run hyperparameter tuning jobs. 

Clone the GitHub repository to get the source using the following command: 

git clone https://github.com/aws/amazon-sagemaker-operator-for-k8s.git

Navigate to the amazon-sagemaker-operator-for-k8s/hack/charts/hyperparameter-tuning-jobs/ folder. 
Edit the values.yaml file to replace the roleArn parameter with your sagemaker-execution-role. For the hyperparameter tuning job to succeed, you must also change the s3InputPath and s3OutputPath to values that correspond to your account. 

Create the HyperparameterTuningJob
With the roles and Amazon S3 paths replaced with appropriate values in values.yaml, you can create a hyperparameter tuning job using the following command: 

helm install . --generate-name

Your output should look similar to the following: 

NAME: chart-1574292948
LAST DEPLOYED: Wed Nov 20 23:35:49 2019
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
Thanks for installing the sagemaker-k8s-hyperparametertuningjob.

Verify Chart Installation
To verify that the Helm Chart was created successfully, run the following command: 

helm ls

Your output should look like the following: 

NAME                    NAMESPACE       REVISION        UPDATED
chart-1474292948        default         1               2019-11-20 23:35:49.9136092 +0000 UTC   deployed        sagemaker-k8s-hyperparametertuningjob-0.1.0                               STATUS          CHART                           APP VERSION
chart-1574292948        default         1               2019-11-20 23:35:49.9136092 +0000 UTC   deployed        sagemaker-k8s-trainingjob-0.1.0
rolebased-1574291698    default         1               2019-11-20 23:14:59.6777082 +0000 UTC   deployed        sagemaker-k8s-operator-0.1.0

helm install creates a HyperParameterTuningJob Kubernetes resource. The operator launches the actual hyperparameter optimization job in SageMaker and updates the HyperParameterTuningJob Kubernetes resource to reflect the status of the job in SageMaker. You incur charges for SageMaker resources used during the duration of your job. You do not incur any charges once your job completes or stops. 
Note: SageMaker does not allow you to update a running hyperparameter tuning job. You cannot edit any parameter and re-apply the file/config. You must either change the metadata name or delete the existing job and create a new one. Similar to existing training job operators like TFJob in Kubeflow, update is not supported. 
List HyperparameterTuningJobs
Use the following command to list all jobs created using the Kubernetes operator: 

kubectl get hyperparametertuningjob

Your output should look like the following: 

NAME         STATUS      CREATION-TIME          COMPLETED   INPROGRESS   ERRORS   STOPPED   BEST-TRAINING-JOB                               SAGEMAKER-JOB-NAME
xgboost-mnist-hpo   Completed   2019-10-17T01:15:52Z   10          0            0        0         xgboostha92f5e3cf07b11e9bf6c06d6-009-4c7a123   xgboostha92f5e3cf07b11e9bf6c123

A hyperparameter tuning job continues to be listed after the job has completed or failed. You can remove a hyperparametertuningjob from the list by following the steps in Delete a Hyperparameter Tuning Job. Jobs that have completed or stopped do not incur any charges for SageMaker resources. 
Hyperparameter Tuning Job Status Values
The STATUS field can be one of the following values: 
+ Completed 
+ InProgress 
+ Failed 
+ Stopped 
+ Stopping 
These statuses come directly from the SageMaker official API documentation. 
In addition to the official SageMaker status, it is possible for STATUS to be SynchronizingK8sJobWithSageMaker. This means that the operator has not yet processed the job. 
Status Counters
The output has several counters, like COMPLETED and INPROGRESS. These represent how many training jobs have completed and are in progress, respectively. For more information about how these are determined, see TrainingJobStatusCounters in the SageMaker API documentation. 
Best TrainingJob
This column contains the name of the TrainingJob that best optimized the selected metric. 
To see a summary of the tuned hyperparameters, run: 

kubectl describe hyperparametertuningjob xgboost-mnist-hpo

To see detailed information about the TrainingJob, run: 

kubectl describe trainingjobs <job name>

Spawned TrainingJobs
You can also track all 10 training jobs in Kubernetes launched by HyperparameterTuningJob by running the following command: 

kubectl get trainingjobs

Describe a HyperparameterTuningJob
You can obtain debugging details using the describe kubectl command.

kubectl describe hyperparametertuningjob xgboost-mnist-hpo

In addition to information about the tuning job, the SageMaker Operator for Kubernetes also exposes the best training job found by the hyperparameter tuning job in the describe output as follows: 

Name:         xgboost-mnist-hpo
Namespace:    default
Labels:       <none>
Annotations:  kubectl.kubernetes.io/last-applied-configuration:
                {"apiVersion":"sagemaker.aws.amazon.com/v1","kind":"HyperparameterTuningJob","metadata":{"annotations":{},"name":"xgboost-mnist-hpo","namespace":...
API Version:  sagemaker.aws.amazon.com/v1
Kind:         HyperparameterTuningJob
Metadata:
  Creation Timestamp:  2019-10-17T01:15:52Z
  Finalizers:
    sagemaker-operator-finalizer
  Generation:        2
  Resource Version:  8167
  Self Link:         /apis/sagemaker.aws.amazon.com/v1/namespaces/default/hyperparametertuningjobs/xgboost-mnist-hpo
  UID:               a92f5e3c-f07b-11e9-bf6c-06d6f303uidu
Spec:
  Hyper Parameter Tuning Job Config:
    Hyper Parameter Tuning Job Objective:
      Metric Name:  validation:error
      Type:         Minimize
    Parameter Ranges:
      Integer Parameter Ranges:
        Max Value:     20
        Min Value:     10
        Name:          num_round
        Scaling Type:  Linear
    Resource Limits:
      Max Number Of Training Jobs:     10
      Max Parallel Training Jobs:      10
    Strategy:                          Bayesian
    Training Job Early Stopping Type:  Off
  Hyper Parameter Tuning Job Name:     xgboostha92f5e3cf07b11e9bf6c06d6
  Region:                              us-east-2
  Training Job Definition:
    Algorithm Specification:
      Training Image:       12345678910.dkr.ecr.us-east-2.amazonaws.com/xgboost:1
      Training Input Mode:  File
    Input Data Config:
      Channel Name:  train
      Content Type:  text/csv
      Data Source:
        s3DataSource:
          s3DataDistributionType:  FullyReplicated
          s3DataType:              S3Prefix
          s3Uri:                   https://s3-us-east-2.amazonaws.com/my-bucket/sagemaker/xgboost-mnist/train/
      Channel Name:                validation
      Content Type:                text/csv
      Data Source:
        s3DataSource:
          s3DataDistributionType:  FullyReplicated
          s3DataType:              S3Prefix
          s3Uri:                   https://s3-us-east-2.amazonaws.com/my-bucket/sagemaker/xgboost-mnist/validation/
    Output Data Config:
      s3OutputPath:  https://s3-us-east-2.amazonaws.com/my-bucket/sagemaker/xgboost-mnist/xgboost
    Resource Config:
      Instance Count:     1
      Instance Type:      ml.m4.xlarge
      Volume Size In GB:  5
    Role Arn:             arn:aws:iam::123456789012:role/service-role/AmazonSageMaker-ExecutionRole
    Static Hyper Parameters:
      Name:   base_score
      Value:  0.5
      Name:   booster
      Value:  gbtree
      Name:   csv_weights
      Value:  0
      Name:   dsplit
      Value:  row
      Name:   grow_policy
      Value:  depthwise
      Name:   lambda_bias
      Value:  0.0
      Name:   max_bin
      Value:  256
      Name:   max_leaves
      Value:  0
      Name:   normalize_type
      Value:  tree
      Name:   objective
      Value:  reg:linear
      Name:   one_drop
      Value:  0
      Name:   prob_buffer_row
      Value:  1.0
      Name:   process_type
      Value:  default
      Name:   rate_drop
      Value:  0.0
      Name:   refresh_leaf
      Value:  1
      Name:   sample_type
      Value:  uniform
      Name:   scale_pos_weight
      Value:  1.0
      Name:   silent
      Value:  0
      Name:   sketch_eps
      Value:  0.03
      Name:   skip_drop
      Value:  0.0
      Name:   tree_method
      Value:  auto
      Name:   tweedie_variance_power
      Value:  1.5
    Stopping Condition:
      Max Runtime In Seconds:  86400
Status:
  Best Training Job:
    Creation Time:  2019-10-17T01:16:14Z
    Final Hyper Parameter Tuning Job Objective Metric:
      Metric Name:        validation:error
      Value:
    Objective Status:     Succeeded
    Training End Time:    2019-10-17T01:20:24Z
    Training Job Arn:     arn:aws:sagemaker:us-east-2:123456789012:training-job/xgboostha92f5e3cf07b11e9bf6c06d6-009-4sample
    Training Job Name:    xgboostha92f5e3cf07b11e9bf6c06d6-009-4c7a3059
    Training Job Status:  Completed
    Training Start Time:  2019-10-17T01:18:35Z
    Tuned Hyper Parameters:
      Name:                                    num_round
      Value:                                   18
  Hyper Parameter Tuning Job Status:           Completed
  Last Check Time:                             2019-10-17T01:21:01Z
  Sage Maker Hyper Parameter Tuning Job Name:  xgboostha92f5e3cf07b11e9bf6c06d6
  Training Job Status Counters:
    Completed:            10
    In Progress:          0
    Non Retryable Error:  0
    Retryable Error:      0
    Stopped:              0
    Total Error:          0
Events:                   <none>

View Logs from HyperparameterTuningJobs
Hyperparameter tuning jobs do not have logs, but all training jobs launched by them do have logs. These logs can be accessed as if they were a normal training job. For more information, see View Logs from Training Jobs. 
Delete a HyperparameterTuningJob
Use the following command to stop a hyperparameter job in SageMaker. 

kubectl delete hyperparametertuningjob xgboost-mnist-hpo

This command removes the hyperparameter tuning job and associated training jobs from your Kubernetes cluster and stops them in SageMaker. Jobs that have stopped or completed do not incur any charges for SageMaker resources. SageMaker does not delete hyperparameter tuning jobs. Stopped jobs continue to show on the SageMaker Console. 
Your output should look like the following: 

hyperparametertuningjob.sagemaker.aws.amazon.com "xgboost-mnist-hpo" deleted

Note: The delete command takes about 2 minutes to clean up the resources from SageMaker. 
BatchTransformJob operator
Batch transform job operators reconcile your specified batch transform job spec to SageMaker by launching it in SageMaker. You can learn more about SageMaker batch transform job in the SageMaker CreateTransformJob API documentation. 
Topics
+ Create a BatchTransformJob Using a YAML File
+ Create a BatchTransformJob Using a Helm Chart
+ List BatchTransformJobs
+ Describe a BatchTransformJob
+ View Logs from BatchTransformJobs
+ Delete a BatchTransformJob
Create a BatchTransformJob Using a YAML File

Download the sample YAML file for the batch transform job using the following command: 

wget https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/samples/xgboost-mnist-batchtransform.yaml

Edit the file xgboost-mnist-batchtransform.yaml to change necessary parameters to replace the inputdataconfig with your input data and s3OutputPath with your Amazon S3 buckets that the SageMaker execution role has write access to. 
Apply the YAML file using the following command: 

kubectl apply -f xgboost-mnist-batchtransform.yaml


Create a BatchTransformJob Using a Helm Chart
You can use Helm Charts to run batch transform jobs. 
Get the Helm installer directory
Clone the GitHub repository to get the source using the following command: 

git clone https://github.com/aws/amazon-sagemaker-operator-for-k8s.git

Configure the Helm Chart
Navigate to the amazon-sagemaker-operator-for-k8s/hack/charts/batch-transform-jobs/ folder. 
Edit the values.yaml file to replace the inputdataconfig with your input data and outputPath with your S3 buckets to which the SageMaker execution role has write access. 
Create a BatchTransformJob

Use the following command to create a batch transform job: 

helm install . --generate-name

Your output should look like the following: 

NAME: chart-1574292948
LAST DEPLOYED: Wed Nov 20 23:35:49 2019
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
Thanks for installing the sagemaker-k8s-batch-transform-job.

To verify that the Helm Chart was created successfully, run the following command: 

helm ls
NAME                    NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                           APP VERSION
chart-1474292948        default         1               2019-11-20 23:35:49.9136092 +0000 UTC   deployed        sagemaker-k8s-batchtransformjob-0.1.0
chart-1474292948        default         1               2019-11-20 23:35:49.9136092 +0000 UTC   deployed        sagemaker-k8s-hyperparametertuningjob-0.1.0
chart-1574292948        default         1               2019-11-20 23:35:49.9136092 +0000 UTC   deployed        sagemaker-k8s-trainingjob-0.1.0
rolebased-1574291698    default         1               2019-11-20 23:14:59.6777082 +0000 UTC   deployed        sagemaker-k8s-operator-0.1.0

This command creates a BatchTransformJob Kubernetes resource. The operator launches the actual transform job in SageMaker and updates the BatchTransformJob Kubernetes resource to reflect the status of the job in SageMaker. You incur charges for SageMaker resources used during the duration of your job. You do not incur any charges once your job completes or stops. 

Note: SageMaker does not allow you to update a running batch transform job. You cannot edit any parameter and re-apply the file/config. You must either change the metadata name or delete the existing job and create a new one. Similar to existing training job operators like TFJob in Kubeflow, update is not supported. 
List BatchTransformJobs
Use the following command to list all jobs created using the Kubernetes operator: 

kubectl get batchtransformjob

Your output should look like the following: 

NAME                                STATUS      CREATION-TIME          SAGEMAKER-JOB-NAME
xgboost-mnist-batch-transform       Completed   2019-11-18T03:44:00Z   xgboost-mnist-a88fb19809b511eaac440aa8axgboost

A batch transform job will continue to be listed after the job has completed or failed. You can remove a hyperparametertuningjob from the list by following the Delete a Batch Transform Job steps. Jobs that have completed or stopped do not incur any charges for SageMaker resources. 
Batch Transform Status Values
The STATUS field can be one of the following values: 
+ Completed 
+ InProgress 
+ Failed 
+ Stopped 
+ Stopping 
These statuses come directly from the SageMaker official API documentation. 
In addition to the official SageMaker status, it is possible for STATUS to be SynchronizingK8sJobWithSageMaker. This means that the operator has not yet processed the job.
Describe a BatchTransformJob
You can obtain debugging details using the describe kubectl command.

kubectl describe batchtransformjob xgboost-mnist-batch-transform

Your output should look like the following: 

Name:         xgboost-mnist-batch-transform
Namespace:    default
Labels:       <none>
Annotations:  kubectl.kubernetes.io/last-applied-configuration:
                {"apiVersion":"sagemaker.aws.amazon.com/v1","kind":"BatchTransformJob","metadata":{"annotations":{},"name":"xgboost-mnist","namespace"...
API Version:  sagemaker.aws.amazon.com/v1
Kind:         BatchTransformJob
Metadata:
  Creation Timestamp:  2019-11-18T03:44:00Z
  Finalizers:
    sagemaker-operator-finalizer
  Generation:        2
  Resource Version:  21990924
  Self Link:         /apis/sagemaker.aws.amazon.com/v1/namespaces/default/batchtransformjobs/xgboost-mnist
  UID:               a88fb198-09b5-11ea-ac44-0aa8a9UIDNUM
Spec:
  Model Name:  TrainingJob-20190814SMJOb-IKEB
  Region:      us-east-1
  Transform Input:
    Content Type:  text/csv
    Data Source:
      S 3 Data Source:
        S 3 Data Type:  S3Prefix
        S 3 Uri:        s3://my-bucket/mnist_kmeans_example/input
  Transform Job Name:   xgboost-mnist-a88fb19809b511eaac440aa8a9SMJOB
  Transform Output:
    S 3 Output Path:  s3://my-bucket/mnist_kmeans_example/output
  Transform Resources:
    Instance Count:  1
    Instance Type:   ml.m4.xlarge
Status:
  Last Check Time:                2019-11-19T22:50:40Z
  Sage Maker Transform Job Name:  xgboost-mnist-a88fb19809b511eaac440aaSMJOB
  Transform Job Status:           Completed
Events:                           <none>

View Logs from BatchTransformJobs
Use the following command to see the logs from the xgboost-mnist batch transform job: 

kubectl smlogs batchtransformjob xgboost-mnist-batch-transform

Delete a BatchTransformJob
Use the following command to stop a batch transform job in SageMaker. 

kubectl delete batchTransformJob xgboost-mnist-batch-transform

Your output should look like the following: 

batchtransformjob.sagemaker.aws.amazon.com "xgboost-mnist" deleted

This command removes the batch transform job from your Kubernetes cluster, as well as stops them in SageMaker. Jobs that have stopped or completed do not incur any charges for SageMaker resources. Delete takes about 2 minutes to clean up the resources from SageMaker. 
Note: SageMaker does not delete batch transform jobs. Stopped jobs continue to show on the SageMaker console. 
HostingDeployment operator
HostingDeployment operators support creating and deleting an endpoint, as well as updating an existing endpoint, for real-time inference. The hosting deployment operator reconciles your specified hosting deployment job spec to SageMaker by creating models, endpoint-configs and endpoints in SageMaker. You can learn more about SageMaker inference in the SageMaker CreateEndpoint API documentation. 
Topics
+ Configure a HostingDeployment Resource
+ Create a HostingDeployment
+ List HostingDeployments
+ Describe a HostingDeployment
+ Invoking the Endpoint
+ Update HostingDeployment
+ Delete the HostingDeployment
Configure a HostingDeployment Resource
Download the sample YAML file for the hosting deployment job using the following command: 

wget https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/samples/xgboost-mnist-hostingdeployment.yaml

The xgboost-mnist-hostingdeployment.yaml file has the following components that can be edited as required: 
+ ProductionVariants. A production variant is a set of instances serving a single model. SageMaker load-balances between all production variants according to set weights. 
+ Models. A model is the containers and execution role ARN necessary to serve a model. It requires at least a single container. 
+ Containers. A container specifies the dataset and serving image. If you are using your own custom algorithm instead of an algorithm provided by SageMaker, the inference code must meet SageMaker requirements. For more information, see Using Your Own Algorithms with SageMaker. 
Create a HostingDeployment
To create a HostingDeployment, use kubectl to apply the file hosting.yaml with the following command: 

kubectl apply -f hosting.yaml

SageMaker creates an endpoint with the specified configuration. You incur charges for SageMaker resources used during the lifetime of your endpoint. You do not incur any charges once your endpoint is deleted. 
The creation process takes approximately 10 minutes. 
List HostingDeployments
To verify that the HostingDeployment was created, use the following command: 

kubectl get hostingdeployments

Your output should look like the following: 

NAME           STATUS     SAGEMAKER-ENDPOINT-NAME
host-xgboost   Creating   host-xgboost-def0e83e0d5f11eaaa450aSMLOGS

HostingDeployment Status Values
The status field can be one of several values: 
+ SynchronizingK8sJobWithSageMaker: The operator is preparing to create the endpoint. 
+ ReconcilingEndpoint: The operator is creating, updating, or deleting endpoint resources. If the HostingDeployment remains in this state, use kubectl describe to see the reason in the Additional field. 
+ OutOfService: Endpoint is not available to take incoming requests. 
+ Creating: CreateEndpoint is executing. 
+ Updating: UpdateEndpoint or UpdateEndpointWeightsAndCapacities is executing. 
+ SystemUpdating: Endpoint is undergoing maintenance and cannot be updated or deleted or re-scaled until it has completed. This maintenance operation does not change any customer-specified values such as VPC config, KMS encryption, model, instance type, or instance count. 
+ RollingBack: Endpoint fails to scale up or down or change its variant weight and is in the process of rolling back to its previous configuration. Once the rollback completes, endpoint returns to an InService status. This transitional status only applies to an endpoint that has autoscaling enabled and is undergoing variant weight or capacity changes as part of an UpdateEndpointWeightsAndCapacities call or when the UpdateEndpointWeightsAndCapacities operation is called explicitly. 
+ InService: Endpoint is available to process incoming requests. 
+ Deleting: DeleteEndpoint is executing. 
+ Failed: Endpoint could not be created, updated, or re-scaled. Use DescribeEndpoint:FailureReason for information about the failure. DeleteEndpoint is the only operation that can be performed on a failed endpoint. 
Describe a HostingDeployment
You can obtain debugging details using the describe kubectl command.

kubectl describe hostingdeployment

Your output should look like the following: 

Name:         host-xgboost
Namespace:    default
Labels:       <none>
Annotations:  kubectl.kubernetes.io/last-applied-configuration:
                {"apiVersion":"sagemaker.aws.amazon.com/v1","kind":"HostingDeployment","metadata":{"annotations":{},"name":"host-xgboost","namespace":"def..."
API Version:  sagemaker.aws.amazon.com/v1
Kind:         HostingDeployment
Metadata:
  Creation Timestamp:  2019-11-22T19:40:00Z
  Finalizers:
    sagemaker-operator-finalizer
  Generation:        1
  Resource Version:  4258134
  Self Link:         /apis/sagemaker.aws.amazon.com/v1/namespaces/default/hostingdeployments/host-xgboost
  UID:               def0e83e-0d5f-11ea-aa45-0a3507uiduid
Spec:
  Containers:
    Container Hostname:  xgboost
    Image:               123456789012.dkr.ecr.us-east-2.amazonaws.com/xgboost:latest
    Model Data URL:      s3://my-bucket/inference/xgboost-mnist/model.tar.gz
  Models:
    Containers:
      xgboost
    Execution Role Arn:  arn:aws:iam::123456789012:role/service-role/AmazonSageMaker-ExecutionRole
    Name:                xgboost-model
    Primary Container:   xgboost
  Production Variants:
    Initial Instance Count:  1
    Instance Type:           ml.c5.large
    Model Name:              xgboost-model
    Variant Name:            all-traffic
  Region:                    us-east-2
Status:
  Creation Time:         2019-11-22T19:40:04Z
  Endpoint Arn:          arn:aws:sagemaker:us-east-2:123456789012:endpoint/host-xgboost-def0e83e0d5f11eaaaexample
  Endpoint Config Name:  host-xgboost-1-def0e83e0d5f11e-e08f6c510d5f11eaaa450aexample
  Endpoint Name:         host-xgboost-def0e83e0d5f11eaaa450a350733ba06
  Endpoint Status:       Creating
  Endpoint URL:          https://runtime.sagemaker.us-east-2.amazonaws.com/endpoints/host-xgboost-def0e83e0d5f11eaaaexample/invocations
  Last Check Time:       2019-11-22T19:43:57Z
  Last Modified Time:    2019-11-22T19:40:04Z
  Model Names:
    Name:   xgboost-model
    Value:  xgboost-model-1-def0e83e0d5f11-df5cc9fd0d5f11eaaa450aexample
Events:     <none>

The status field provides more information using the following fields: 
+ Additional: Additional information about the status of the hosting deployment. This field is optional and only gets populated in case of error. 
+ Creation Time: When the endpoint was created in SageMaker. 
+ Endpoint ARN: The SageMaker endpoint ARN. 
+ Endpoint Config Name: The SageMaker name of the endpoint configuration. 
+ Endpoint Name: The SageMaker name of the endpoint. 
+ Endpoint Status: The status of the endpoint. 
+ Endpoint URL: The HTTPS URL that can be used to access the endpoint. For more information, see Deploy a Model on SageMaker Hosting Services. 
+ FailureReason: If a create, update, or delete command fails, the cause is shown here. 
+ Last Check Time: The last time the operator checked the status of the endpoint. 
+ Last Modified Time: The last time the endpoint was modified. 
+ Model Names: A key-value pair of HostingDeployment model names to SageMaker model names. 
Invoking the Endpoint
Once the endpoint status is InService, you can invoke the endpoint in two ways: using the AWS CLI, which does authentication and URL request signing, or using an HTTP client like cURL. If you use your own client, you need to do AWS v4 URL signing and authentication on your own. 
To invoke the endpoint using the AWS CLI, run the following command. Make sure to replace the Region and endpoint-name with your endpoint's Region and SageMaker endpoint name. This information can be obtained from the output of kubectl describe. 
```
Invoke the endpoint with mock input data.
aws sagemaker-runtime invoke-endpoint \
  --region us-east-2 \
  --endpoint-name  \
  --body $(seq 784 | xargs echo | sed 's/ /,/g') \

(cat) \
    --content-type text/csv > /dev/null
  ```

For example, if your Region is us-east-2 and your endpoint config name is host-xgboost-f56b6b280d7511ea824b129926example, then the following command would invoke the endpoint: 
```
aws sagemaker-runtime invoke-endpoint \
  --region us-east-2 \
  --endpoint-name host-xgboost-f56b6b280d7511ea824b1299example \
  --body $(seq 784 | xargs echo | sed 's/ /,/g') \

(cat) \
    --content-type text/csv > /dev/null
  4.95847082138
  ```

Here, 4.95847082138 is the prediction from the model for the mock data. 
Update HostingDeployment

Once a HostingDeployment has a status of InService, it can be updated. It might take about 10 minutes for HostingDeployment to be in service. To verify that the status is InService, use the following command: 

kubectl get hostingdeployments

The HostingDeployment can be updated before the status is InService. The operator waits until the SageMaker endpoint is InService before applying the update. 
To apply an update, modify the hosting.yaml file. For example, change the initialInstanceCount field from 1 to 2 as follows: 

apiVersion: sagemaker.aws.amazon.com/v1
kind: HostingDeployment
metadata:
  name: host-xgboost
spec:
    region: us-east-2
    productionVariants:
        - variantName: all-traffic
          modelName: xgboost-model
          initialInstanceCount: 2
          instanceType: ml.c5.large
    models:
        - name: xgboost-model
          executionRoleArn: arn:aws:iam::123456789012:role/service-role/AmazonSageMaker-ExecutionRole
          primaryContainer: xgboost
          containers:
            - xgboost
    containers:
        - containerHostname: xgboost
          modelDataUrl: s3://my-bucket/inference/xgboost-mnist/model.tar.gz
          image: 123456789012.dkr.ecr.us-east-2.amazonaws.com/xgboost:latest

Save the file, then use kubectl to apply your update as follows. You should see the status change from InService to ReconcilingEndpoint, then Updating. 
```
$ kubectl apply -f hosting.yaml
hostingdeployment.sagemaker.aws.amazon.com/host-xgboost configured
$ kubectl get hostingdeployments
NAME           STATUS                SAGEMAKER-ENDPOINT-NAME
host-xgboost   ReconcilingEndpoint   host-xgboost-def0e83e0d5f11eaaa450a350abcdef
$ kubectl get hostingdeployments
NAME           STATUS     SAGEMAKER-ENDPOINT-NAME
host-xgboost   Updating   host-xgboost-def0e83e0d5f11eaaa450a3507abcdef
```

SageMaker deploys a new set of instances with your models, switches traffic to use the new instances, and drains the old instances. As soon as this process begins, the status becomes Updating. After the update is complete, your endpoint becomes InService. This process takes approximately 10 minutes. 
Delete the HostingDeployment

Use kubectl to delete a HostingDeployment with the following command: 

kubectl delete hostingdeployments host-xgboost

Your output should look like the following: 

hostingdeployment.sagemaker.aws.amazon.com "host-xgboost" deleted

To verify that the hosting deployment has been deleted, use the following command: 

kubectl get hostingdeployments
No resources found.


Endpoints that have been deleted do not incur any charges for SageMaker resources. 
ProcessingJob operator
ProcessingJob operators are used to launch Amazon SageMaker processing jobs. For more information on SageMaker processing jobs, see CreateProcessingJob. 
Topics
+ Create a ProcessingJob Using a YAML File
+ List ProcessingJobs
+ Describe a ProcessingJob
+ Delete a ProcessingJob
Create a ProcessingJob Using a YAML File
Follow these steps to create an Amazon SageMaker processing job by using a YAML file:

Download the kmeans_preprocessing.py pre-processing script.

wget https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/samples/kmeans_preprocessing.py

In one of your Amazon Simple Storage Service (Amazon S3) buckets, create a mnist_kmeans_example/processing_code folder and upload the script to the folder.
Download the kmeans-mnist-processingjob.yaml file.

wget https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/samples/kmeans-mnist-processingjob.yaml

Edit the YAML file to specify your sagemaker-execution-role and replace all instances of my-bucket with your S3 bucket.

...
metadata:
  name: kmeans-mnist-processing
...
  roleArn: arn:aws:iam::<acct-id>:role/service-role/<sagemaker-execution-role>
  ...
  processingOutputConfig:
    outputs:
      ...
          s3Output:
            s3Uri: s3://<my-bucket>/mnist_kmeans_example/output/
  ...
  processingInputs:
    ...
        s3Input:
          s3Uri: s3://<my-bucket>/mnist_kmeans_example/processing_code/kmeans_preprocessing.py

The sagemaker-execution-role must have permissions so that SageMaker can access your S3 bucket, Amazon CloudWatch, and other services on your behalf. For more information on creating an execution role, see SageMaker Roles.
Apply the YAML file using one of the following commands.
For cluster-scoped installation:

kubectl apply -f kmeans-mnist-processingjob.yaml

For namespace-scoped installation:

kubectl apply -f kmeans-mnist-processingjob.yaml -n <NAMESPACE>


List ProcessingJobs
Use one of the following commands to list all the jobs created using the ProcessingJob operator. SAGEMAKER-JOB-NAME comes from the metadata section of the YAML file.
For cluster-scoped installation:

kubectl get ProcessingJob kmeans-mnist-processing

For namespace-scoped installation:

kubectl get ProcessingJob -n <NAMESPACE> kmeans-mnist-processing

Your output should look similar to the following:

NAME                    STATUS     CREATION-TIME        SAGEMAKER-JOB-NAME
kmeans-mnist-processing InProgress 2020-09-22T21:13:25Z kmeans-mnist-processing-7410ed52fd1811eab19a165ae9f9e385

The output lists all jobs regardless of their status. To remove a job from the list, see Delete a Processing Job.
ProcessingJob Status
+ SynchronizingK8sJobWithSageMaker – The job is first submitted to the cluster. The operator has received the request and is preparing to create the processing job.
+ Reconciling – The operator is initializing or recovering from transient errors, along with others. If the processing job remains in this state, use the kubectl describe command to see the reason in the Additional field.
+ InProgress | Completed | Failed | Stopping | Stopped – Status of the SageMaker processing job. For more information, see DescribeProcessingJob.
+ Error – The operator cannot recover by reconciling.
Jobs that have completed, stopped, or failed do not incur further charges for SageMaker resources.
Describe a ProcessingJob
Use one of the following commands to get more details about a processing job. These commands are typically used for debugging a problem or checking the parameters of a processing job.
For cluster-scoped installation:

kubectl describe processingjob kmeans-mnist-processing

For namespace-scoped installation:

kubectl describe processingjob kmeans-mnist-processing -n <NAMESPACE>

The output for your processing job should look similar to the following.

$ kubectl describe ProcessingJob kmeans-mnist-processing
Name:         kmeans-mnist-processing
Namespace:    default
Labels:       <none>
Annotations:  kubectl.kubernetes.io/last-applied-configuration:
                {"apiVersion":"sagemaker.aws.amazon.com/v1","kind":"ProcessingJob","metadata":{"annotations":{},"name":"kmeans-mnist-processing",...
API Version:  sagemaker.aws.amazon.com/v1
Kind:         ProcessingJob
Metadata:
  Creation Timestamp:  2020-09-22T21:13:25Z
  Finalizers:
    sagemaker-operator-finalizer
  Generation:        2
  Resource Version:  21746658
  Self Link:         /apis/sagemaker.aws.amazon.com/v1/namespaces/default/processingjobs/kmeans-mnist-processing
  UID:               7410ed52-fd18-11ea-b19a-165ae9f9e385
Spec:
  App Specification:
    Container Entrypoint:
      python
      /opt/ml/processing/code/kmeans_preprocessing.py
    Image Uri:  763104351884.dkr.ecr.us-west-2.amazonaws.com/pytorch-training:1.5.0-cpu-py36-ubuntu16.04
  Environment:
    Name:   MYVAR
    Value:  my_value
    Name:   MYVAR2
    Value:  my_value2
  Network Config:
  Processing Inputs:
    Input Name:  mnist_tar
    s3Input:
      Local Path:   /opt/ml/processing/input
      s3DataType:   S3Prefix
      s3InputMode:  File
      s3Uri:        s3://<s3bucket>-us-west-2/algorithms/kmeans/mnist/mnist.pkl.gz
    Input Name:     source_code
    s3Input:
      Local Path:   /opt/ml/processing/code
      s3DataType:   S3Prefix
      s3InputMode:  File
      s3Uri:        s3://<s3bucket>/mnist_kmeans_example/processing_code/kmeans_preprocessing.py
  Processing Output Config:
    Outputs:
      Output Name:  train_data
      s3Output:
        Local Path:    /opt/ml/processing/output_train/
        s3UploadMode:  EndOfJob
        s3Uri:         s3://<s3bucket>/mnist_kmeans_example/output/
      Output Name:     test_data
      s3Output:
        Local Path:    /opt/ml/processing/output_test/
        s3UploadMode:  EndOfJob
        s3Uri:         s3://<s3bucket>/mnist_kmeans_example/output/
      Output Name:     valid_data
      s3Output:
        Local Path:    /opt/ml/processing/output_valid/
        s3UploadMode:  EndOfJob
        s3Uri:         s3://<s3bucket>/mnist_kmeans_example/output/
  Processing Resources:
    Cluster Config:
      Instance Count:     1
      Instance Type:      ml.m5.xlarge
      Volume Size In GB:  20
  Region:                 us-west-2
  Role Arn:               arn:aws:iam::<acct-id>:role/m-sagemaker-role
  Stopping Condition:
    Max Runtime In Seconds:  1800
  Tags:
    Key:    tagKey
    Value:  tagValue
Status:
  Cloud Watch Log URL:             https://us-west-2.console.aws.amazon.com/cloudwatch/home?region=us-west-2#logStream:group=/aws/sagemaker/ProcessingJobs;prefix=kmeans-mnist-processing-7410ed52fd1811eab19a165ae9f9e385;streamFilter=typeLogStreamPrefix
  Last Check Time:                 2020-09-22T21:14:29Z
  Processing Job Status:           InProgress
  Sage Maker Processing Job Name:  kmeans-mnist-processing-7410ed52fd1811eab19a165ae9f9e385
Events:                            <none>

Delete a ProcessingJob
When you delete a processing job, the SageMaker processing job is removed from Kubernetes but the job isn't deleted from SageMaker. If the job status in SageMaker is InProgress the job is stopped. Processing jobs that are stopped do not incur any charges for SageMaker resources. Use one of the following commands to delete a processing job. 
For cluster-scoped installation:

kubectl delete processingjob kmeans-mnist-processing

For namespace-scoped installation:

kubectl delete processingjob kmeans-mnist-processing -n <NAMESPACE>

The output for your processing job should look similar to the following.

processingjob.sagemaker.aws.amazon.com "kmeans-mnist-processing" deleted

Note
SageMaker does not delete the processing job. Stopped jobs continue to show in the SageMaker console. The delete command takes a few minutes to clean up the resources from SageMaker.
HostingAutoscalingPolicy (HAP) Operator
The HostingAutoscalingPolicy (HAP) operator takes a list of resource IDs as input and applies the same policy to each of them. Each resource ID is a combination of an endpoint name and a variant name. The HAP operator performs two steps: it registers the resource IDs and then applies the scaling policy to each resource ID. Delete undoes both actions. You can apply the HAP to an existing SageMaker endpoint or you can create a new SageMaker endpoint using the HostingDeployment operator. You can read more about SageMaker autoscaling in the  Application Autoscaling Policy documentation.
Note
In your kubectl commands, you can use the short form, hap, in place of hostingautoscalingpolicy.
Topics
+ Create a HostingAutoscalingPolicy Using a YAML File
+ List HostingAutoscalingPolicies
+ Describe a HostingAutoscalingPolicy
+ Update a HostingAutoscalingPolicy
+ Delete a HostingAutoscalingPolicy
+ Update or Delete an Endpoint with a HostingAutoscalingPolicy
Create a HostingAutoscalingPolicy Using a YAML File
Use a YAML file to create a HostingAutoscalingPolicy (HAP) that applies a predefined or custom metric to one or multiple SageMaker endpoints.
Amazon SageMaker requires specific values in order to apply autoscaling to your variant. If these values are not specified in the YAML spec, the HAP operator applies the following default values.
```
Do not change
Namespace                    = "sagemaker"
Do not change
ScalableDimension            = "sagemaker:variant:DesiredInstanceCount"
Only one supported
PolicyType                   = "TargetTrackingScaling"
This is the default policy name but can be changed to apply a custom policy
DefaultAutoscalingPolicyName = "SageMakerEndpointInvocationScalingPolicy"
```
Use the following samples to create a HAP that applies a predefined or custom metric to one or multiple endpoints.
Sample 1: Apply a Predefined Metric to a Single Endpoint Variant

Download the sample YAML file for a predefined metric using the following command:

wget https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/samples/hap-predefined-metric.yaml

Edit the YAML file to specify your endpointName, variantName, and region.
Use one of the following commands to apply a predefined metric to a single resource ID (endpoint name and variant name combination).
For cluster-scoped installation:

kubectl apply -f hap-predefined-metric.yaml

For namespace-scoped installation:

kubectl apply -f hap-predefined-metric.yaml -n <NAMESPACE>


Sample 2: Apply a Custom Metric to a Single Endpoint Variant

Download the sample YAML file for a custom metric using the following command:

wget https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/samples/hap-custom-metric.yaml

Edit the YAML file to specify your endpointName, variantName, and region.
Use one of the following commands to apply a custom metric to a single resource ID (endpoint name and variant name combination) in place of the recommended SageMakerVariantInvocationsPerInstance.
Note
Amazon SageMaker does not check the validity of your YAML spec.
For cluster-scoped installation:

kubectl apply -f hap-custom-metric.yaml

For namespace-scoped installation:

kubectl apply -f hap-custom-metric.yaml -n <NAMESPACE>


Sample 3: Apply a Scaling Policy to Multiple Endpoints and Variants
You can use the HAP operator to apply the same scaling policy to multiple resource IDs. A separate scaling_policy request is created for each resource ID (endpoint name and variant name combination).

Download the sample YAML file for a predefined metric using the following command:

wget https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/samples/hap-predefined-metric.yaml

Edit the YAML file to specify your region and multiple endpointName and variantName values.
Use one of the following commands to apply a predefined metric to multiple resource IDs (endpoint name and variant name combinations).
For cluster-scoped installation:

kubectl apply -f hap-predefined-metric.yaml

For namespace-scoped installation:

kubectl apply -f hap-predefined-metric.yaml -n <NAMESPACE>


Considerations for HostingAutoscalingPolicies for Multiple Endpoints and Variants
The following considerations apply when you use multiple resource IDs:
+ If you apply a single policy across multiple resource IDs, one PolicyARN is created per resource ID. Five endpoints have five PolicyARNs. When you run the describe command on the policy, the responses show up as one job and include a single job status.
+ If you apply a custom metric to multiple resource IDs, the same dimension or value is used for all the resource ID (variant) values. For example, if you apply a customer metric for instances 1-5, and the endpoint variant dimension is mapped to variant 1, when variant 1 exceeds the metrics, all endpoints are scaled up or down.
+ The HAP operator supports updating the list of resource IDs. If you modify, add, or delete resource IDs to the spec, the autoscaling policy is removed from the previous list of variants and applied to the newly specified resource ID combinations. Use the https://docs.aws.amazon.com/sagemaker/latest/dg/kubernetes-hap-operator.html#kubernetes-hap-describe command to list the resource IDs to which the policy is currently applied.
List HostingAutoscalingPolicies
Use one of the following commands to list all HostingAutoscalingPolicies (HAPs) created using the HAP operator.
For cluster-scoped installation:

kubectl get hap

For namespace-scoped installation:

kubectl get hap -n <NAMESPACE>

Your output should look similar to the following:

NAME             STATUS   CREATION-TIME
hap-predefined   Created  2021-07-13T21:32:21Z

Use the following command to check the status of your HostingAutoscalingPolicy (HAP).

kubectl get hap <job-name>

One of the following values is returned:
+ Reconciling – Certain types of errors show the status as Reconciling instead of Error. Some examples are server-side errors and endpoints in the Creating or Updating state. Check the Additional field in status or operator logs for more details.
+ Created
+ Error
To view the autoscaling endpoint to which you applied the policy

Open the Amazon SageMaker console at https://console.aws.amazon.com/sagemaker/.
In the left side panel, expand Inference.
Choose Endpoints.
Select the name of the endpoint of interest.
Scroll to the Endpoint runtime settings section.

Describe a HostingAutoscalingPolicy
Use the following command to get more details about a HostingAutoscalingPolicy (HAP). These commands are typically used for debugging a problem or checking the resource IDs (endpoint name and variant name combinations) of a HAP.

kubectl describe hap <job-name>

Update a HostingAutoscalingPolicy
The HostingAutoscalingPolicy (HAP) operator supports updates. You can edit your YAML spec to change the values and then reapply the policy. The HAP operator deletes the existing policy and applies the new policy.
Delete a HostingAutoscalingPolicy
Use one of the following commands to delete a HostingAutoscalingPolicy (HAP) policy.
For cluster-scoped installation:

kubectl delete hap hap-predefined

For namespace-scoped installation:

kubectl delete hap hap-predefined -n <NAMESPACE>

This command deletes the scaling policy and deregisters the scaling target from Kubernetes. This command returns the following output:

hostingautoscalingpolicies.sagemaker.aws.amazon.com "hap-predefined" deleted

Update or Delete an Endpoint with a HostingAutoscalingPolicy
To update an endpoint that has a HostingAutoscalingPolicy (HAP), use the kubectl delete command to remove the HAP, update the endpoint, and then reapply the HAP.
To delete an endpoint that has a HAP, use the kubectl delete command to remove the HAP before you delete the endpoint.

Latest SageMaker Operators for Kubernetes
This section is based on the latest version of SageMaker Operators for Kubernetes using AWS Controllers for Kubernetes (ACK).
Important
If you are currently using version v1.2.2 or below of the original SageMaker Operators for Kubernetes, we recommend migrating your resources to the latest SageMaker Operators for Kubernetes, the ACK service controller for Amazon SageMaker based on AWS Controllers for Kubernetes (ACK).
For information about the migration steps, see Migrate resources to the latest Operators. For answers to frequently asked questions regarding the end of support of the original version of SageMaker Operators for Kubernetes, see Announcing the End of Support of the Original Version of SageMaker Operator for Kubernetes
The latest version of SageMaker Operators for Kubernetes is based on AWS Controllers for Kubernetes (ACK), a framework for building Kubernetes custom controllers where each controller communicates with an AWS service API. These controllers allow Kubernetes users to provision AWS resources like databases or message queues using the Kubernetes API.
Use the following steps to install and use ACK to train, tune, and deploy machine learning models with Amazon SageMaker.
Topics
+ Install SageMaker Operators for Kubernetes
+ Use SageMaker Operators for Kubernetes
+ Reference
Install SageMaker Operators for Kubernetes
To set up the latest available version of SageMaker Operators for Kubernetes, see the Setup section in  Machine Learning with the ACK SageMaker Controller.
Use SageMaker Operators for Kubernetes
For a tutorial on how to train a machine learning model with the ACK service controller for Amazon SageMaker using Amazon EKS, see Machine Learning with the ACK SageMaker Controller.
For an autoscaling example, see  Scale SageMaker Workloads with Application Auto Scaling
Reference
See also the ACK service controller for Amazon SageMaker GitHub repository or read AWS Controllers for Kubernetes Documentation. 

Old SageMaker Operators for Kubernetes
This section is based on the original version of SageMaker Operators for Kubernetes.
Important
We are stopping the development and technical support of SageMaker Operators for Kubernetes in its original version. If you are currently using version v1.2.2 or below of the original version of SageMaker Operators for Kubernetes, we recommend migrating your resources to the latest SageMaker Operators for Kubernetes, the ACK service controller for Amazon SageMaker based on AWS Controllers for Kubernetes (ACK).
For information about the migration steps, see Migrate resources to the latest Operators. For answers to frequently asked questions regarding the end of support of the original version of SageMaker Operators for Kubernetes, see Announcing the End of Support of the Original Version of SageMaker Operator for Kubernetes
Topics
+ Install SageMaker Operators for Kubernetes
+ Use Amazon SageMaker Jobs
+ Migrate resources to the latest Operators
+ Announcing the End of Support of the Original Version of SageMaker Operator for Kubernetes
Install SageMaker Operators for Kubernetes
Use the following steps to install and use SageMaker Operators for Kubernetes to train, tune, and deploy machine learning models with Amazon SageMaker.
Topics
+ IAM role-based setup and operator deployment
+ Clean up resources
+ Delete operators
+ Troubleshooting
+ Images and SMlogs in each Region
IAM role-based setup and operator deployment
The following sections describe the steps to set up and deploy the original version of the operator.
Warning
Reminder: The following steps do not install the latest version of SageMaker Operators for Kubernetes. To install the new ACK-based SageMaker Operators for Kubernetes, see Latest SageMaker Operators for Kubernetes.
Prerequisites
This guide assumes that you have completed the following prerequisites: 
+ Installed the following tools on the client machine used to access your Kubernetes cluster: 
  + https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html Version 1.13 or later. Use a kubectl version that is within one minor version of your Amazon EKS cluster control plane. For example, a 1.13 kubectl client works with Kubernetes 1.13 and 1.14 clusters. OpenID Connect (OIDC) is not supported in versions earlier than 1.13. 
  + https://github.com/weaveworks/eksctl Version 0.7.0 or later 
  + AWS CLI Version 1.16.232 or later 
  + (optional) Helm Version 3.0 or later 
  + aws-iam-authenticator 
+ Have IAM permissions to create roles and attach policies to roles. 
+ Created a Kubernetes cluster on which to run the operators. It should either be Kubernetes version 1.13 or 1.14. For automated cluster creation using eksctl, see Getting Started with eksctl. It takes 20 to 30 minutes to provision a cluster. 
Cluster-scoped deployment
Before you can deploy your operator using an IAM role, associate an OpenID Connect (OIDC) provider with your role to authenticate with the IAM service. 
Create an OpenID Connect Provider for Your Cluster
The following instructions show how to create and associate an OIDC provider with your Amazon EKS cluster. 

Set the local CLUSTER_NAME and AWS_REGION environment variables as follows: 
```
Set the Region and cluster
export CLUSTERNAME=""
  export AWSREGION=""
```
Use the following command to associate the OIDC provider with your cluster. For more information, see Enabling IAM Roles for Service Accounts on your Cluster. 

eksctl utils associate-iam-oidc-provider --cluster ${CLUSTER_NAME} \
      --region ${AWS_REGION} --approve

Your output should look like the following: 

[_]  eksctl version 0.10.1
  [_]  using region us-east-1
  [_]  IAM OpenID Connect provider is associated with cluster "my-cluster" in "us-east-1"


Now that the cluster has an OIDC identity provider, you can create a role and give a Kubernetes ServiceAccount permission to assume the role. 
Get the OIDC ID
To set up the ServiceAccount, obtain the OpenID Connect issuer URL using the following command: 

aws eks describe-cluster --name ${CLUSTER_NAME} --region ${AWS_REGION} \
      --query cluster.identity.oidc.issuer --output text

The command returns a URL like the following: 

https://oidc.eks.${AWS_REGION}.amazonaws.com/id/D48675832CA65BD10A532F597OIDCID

In this URL, the value D48675832CA65BD10A532F597OIDCID is the OIDC ID. The OIDC ID for your cluster is different. You need this OIDC ID value to create a role. 
If your output is None, it means that your client version is old. To work around this, run the following command: 

aws eks describe-cluster --region ${AWS_REGION} --query cluster --name ${CLUSTER_NAME} --output text | grep OIDC

The OIDC URL is returned as follows: 

OIDC https://oidc.eks.us-east-1.amazonaws.com/id/D48675832CA65BD10A532F597OIDCID

Create an IAM Role

Create a file named trust.json and insert the following trust relationship code block into it. Be sure to replace all <OIDC ID>, <AWS account number>, and <EKS Cluster region> placeholders with values corresponding to your cluster. 

{
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Principal": {
          "Federated": "arn:aws:iam::<AWS account number>:oidc-provider/oidc.eks.<EKS Cluster region>.amazonaws.com/id/<OIDC ID>"
        },
        "Action": "sts:AssumeRoleWithWebIdentity",
        "Condition": {
          "StringEquals": {
            "oidc.eks.<EKS Cluster region>.amazonaws.com/id/<OIDC ID>:aud": "sts.amazonaws.com",
            "oidc.eks.<EKS Cluster region>.amazonaws.com/id/<OIDC ID>:sub": "system:serviceaccount:sagemaker-k8s-operator-system:sagemaker-k8s-operator-default"
          }
        }
      }
    ]
  }

Run the following command to create a role with the trust relationship defined in trust.json. This role enables the Amazon EKS cluster to get and refresh credentials from IAM. 

aws iam create-role --region ${AWS_REGION} --role-name <role name> --assume-role-policy-document file://trust.json --output=text

Your output should look like the following: 

ROLE    arn:aws:iam::123456789012:role/my-role 2019-11-22T21:46:10Z    /       ABCDEFSFODNN7EXAMPLE   my-role
  ASSUMEROLEPOLICYDOCUMENT        2012-10-17
  STATEMENT       sts:AssumeRoleWithWebIdentity   Allow
  STRINGEQUALS    sts.amazonaws.com       system:serviceaccount:sagemaker-k8s-operator-system:sagemaker-k8s-operator-default
  PRINCIPAL       arn:aws:iam::123456789012:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/

Take note of ROLE ARN; you pass this value to your operator. 

Attach the AmazonSageMakerFullAccess Policy to the Role
To give the role access to SageMaker, attach the AmazonSageMakerFullAccess policy. If you want to limit permissions to the operator, you can create your own custom policy and attach it. 
To attach AmazonSageMakerFullAccess, run the following command: 

aws iam attach-role-policy --role-name <role name>  --policy-arn arn:aws:iam::aws:policy/AmazonSageMakerFullAccess

The Kubernetes ServiceAccount sagemaker-k8s-operator-default should have AmazonSageMakerFullAccess permissions. Confirm this when you install the operator. 
Deploy the Operator
When deploying your operator, you can use either a YAML file or Helm charts. 
Deploy the Operator Using YAML
This is the simplest way to deploy your operators. The process is as follows: 

Download the installer script using the following command: 

wget https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/release/rolebased/installer.yaml

Edit the installer.yaml file to replace eks.amazonaws.com/role-arn. Replace the ARN here with the Amazon Resource Name (ARN) for the OIDC-based role you’ve created. 
Use the following command to deploy the cluster: 

kubectl apply -f installer.yaml


Deploy the Operator Using Helm Charts
Use the provided Helm Chart to install the operator. 

Clone the Helm installer directory using the following command: 

git clone https://github.com/aws/amazon-sagemaker-operator-for-k8s.git

Navigate to the amazon-sagemaker-operator-for-k8s/hack/charts/installer folder. Edit the rolebased/values.yaml file, which includes high-level parameters for the chart. Replace the role ARN here with the Amazon Resource Name (ARN) for the OIDC-based role you’ve created. 
Install the Helm Chart using the following command: 

kubectl create namespace sagemaker-k8s-operator-system
  helm install --namespace sagemaker-k8s-operator-system sagemaker-operator rolebased/

If you decide to install the operator into a namespace other than the one specified, you need to adjust the namespace defined in the IAM role trust.json file to match. 
After a moment, the chart is installed with a randomly generated name. Verify that the installation succeeded by running the following command: 

helm ls

Your output should look like the following: 

NAME                    NAMESPACE                       REVISION        UPDATED                                 STATUS          CHART                           APP VERSION
  sagemaker-operator      sagemaker-k8s-operator-system   1               2019-11-20 23:14:59.6777082 +0000 UTC   deployed        sagemaker-k8s-operator-0.1.0


Verify the operator deployment

You should be able to see the SageMaker Custom Resource Definitions (CRDs) for each operator deployed to your cluster by running the following command: 

kubectl get crd | grep sagemaker

Your output should look like the following: 

batchtransformjobs.sagemaker.aws.amazon.com         2019-11-20T17:12:34Z
  endpointconfigs.sagemaker.aws.amazon.com            2019-11-20T17:12:34Z
  hostingdeployments.sagemaker.aws.amazon.com         2019-11-20T17:12:34Z
  hyperparametertuningjobs.sagemaker.aws.amazon.com   2019-11-20T17:12:34Z
  models.sagemaker.aws.amazon.com                     2019-11-20T17:12:34Z
  trainingjobs.sagemaker.aws.amazon.com               2019-11-20T17:12:34Z

Ensure that the operator pod is running successfully. Use the following command to list all pods: 

kubectl -n sagemaker-k8s-operator-system get pods

You should see a pod named sagemaker-k8s-operator-controller-manager-***** in the namespace sagemaker-k8s-operator-system as follows: 

NAME                                                         READY   STATUS    RESTARTS   AGE
  sagemaker-k8s-operator-controller-manager-12345678-r8abc     2/2     Running   0          23s


Namespace-scoped deployment
You have the option to install your operator within the scope of an individual Kubernetes namespace. In this mode, the controller only monitors and reconciles resources with SageMaker if the resources are created within that namespace. This allows for finer-grained control over which controller is managing which resources. This is useful for deploying to multiple AWS accounts or controlling which users have access to particular jobs. 
This guide outlines how to install an operator into a particular, predefined namespace. To deploy a controller into a second namespace, follow the guide from beginning to end and change out the namespace in each step. 
Create an OpenID Connect Provider for Your Amazon EKS cluster
The following instructions show how to create and associate an OIDC provider with your Amazon EKS cluster. 

Set the local CLUSTER_NAME and AWS_REGION environment variables as follows: 
```
Set the region and cluster
export CLUSTERNAME=""
  export AWSREGION=""
```
Use the following command to associate the OIDC provider with your cluster. For more information, see Enabling IAM Roles for Service Accounts on your Cluster. 

  eksctl utils associate-iam-oidc-provider --cluster ${CLUSTER_NAME} \
        --region ${AWS_REGION} --approve

Your output should look like the following: 

  [_]  eksctl version 0.10.1
    [_]  using region us-east-1
    [_]  IAM OpenID Connect provider is associated with cluster "my-cluster" in "us-east-1"

Now that the cluster has an OIDC identity provider, create a role and give a Kubernetes ServiceAccount permission to assume the role. 

Get your OIDC ID
To set up the ServiceAccount, first obtain the OpenID Connect issuer URL using the following command: 

aws eks describe-cluster --name ${CLUSTER_NAME} --region ${AWS_REGION} \
      --query cluster.identity.oidc.issuer --output text

The command returns a URL like the following: 

https://oidc.eks.${AWS_REGION}.amazonaws.com/id/D48675832CA65BD10A532F597OIDCID

In this URL, the value D48675832CA65BD10A532F597OIDCID is the OIDC ID. The OIDC ID for your cluster will be different. You need this OIDC ID value to create a role. 
If your output is None, it means that your client version is old. To work around this, run the following command: 

aws eks describe-cluster --region ${AWS_REGION} --query cluster --name ${CLUSTER_NAME} --output text | grep OIDC

The OIDC URL is returned as follows: 

OIDC https://oidc.eks.us-east-1.amazonaws.com/id/D48675832CA65BD10A532F597OIDCID

Create your IAM Role

Create a file named trust.json and insert the following trust relationship code block into it. Be sure to replace all <OIDC ID>, <AWS account number>, <EKS Cluster region>, and <Namespace> placeholders with values corresponding to your cluster. For the purposes of this guide, my-namespace is used for the <Namespace> value. 

{
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Principal": {
          "Federated": "arn:aws:iam::<AWS account number>:oidc-provider/oidc.eks.<EKS Cluster region>.amazonaws.com/id/<OIDC ID>"
        },
        "Action": "sts:AssumeRoleWithWebIdentity",
        "Condition": {
          "StringEquals": {
            "oidc.eks.<EKS Cluster region>.amazonaws.com/id/<OIDC ID>:aud": "sts.amazonaws.com",
            "oidc.eks.<EKS Cluster region>.amazonaws.com/id/<OIDC ID>:sub": "system:serviceaccount:<Namespace>:sagemaker-k8s-operator-default"
          }
        }
      }
    ]
  }

Run the following command to create a role with the trust relationship defined in trust.json. This role enables the Amazon EKS cluster to get and refresh credentials from IAM. 

aws iam create-role --region ${AWS_REGION} --role-name <role name> --assume-role-policy-document file://trust.json --output=text

Your output should look like the following: 

ROLE    arn:aws:iam::123456789012:role/my-role 2019-11-22T21:46:10Z    /       ABCDEFSFODNN7EXAMPLE   my-role
  ASSUMEROLEPOLICYDOCUMENT        2012-10-17
  STATEMENT       sts:AssumeRoleWithWebIdentity   Allow
  STRINGEQUALS    sts.amazonaws.com       system:serviceaccount:my-namespace:sagemaker-k8s-operator-default
  PRINCIPAL       arn:aws:iam::123456789012:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/


Take note of ROLE ARN. You pass this value to your operator. 
Attach the AmazonSageMakerFullAccess Policy to your Role
To give the role access to SageMaker, attach the AmazonSageMakerFullAccess policy. If you want to limit permissions to the operator, you can create your own custom policy and attach it. 
To attach AmazonSageMakerFullAccess, run the following command: 

aws iam attach-role-policy --role-name <role name>  --policy-arn arn:aws:iam::aws:policy/AmazonSageMakerFullAccess

The Kubernetes ServiceAccount sagemaker-k8s-operator-default should have AmazonSageMakerFullAccess permissions. Confirm this when you install the operator. 
Deploy the Operator to Your Namespace
When deploying your operator, you can use either a YAML file or Helm charts. 
Deploy the Operator to Your Namespace Using YAML
There are two parts to deploying an operator within the scope of a namespace. The first is the set of CRDs that are installed at a cluster level. These resource definitions only need to be installed once per Kubernetes cluster. The second part is the operator permissions and deployment itself. 
If you have not already installed the CRDs into the cluster, apply the CRD installer YAML using the following command: 

kubectl apply -f https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/release/rolebased/namespaced/crd.yaml

To install the operator onto the cluster: 

Download the operator installer YAML using the following command: 

wget https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/release/rolebased/namespaced/operator.yaml

Update the installer YAML to place the resources into your specified namespace using the following command: 

sed -i -e 's/PLACEHOLDER-NAMESPACE/<YOUR NAMESPACE>/g' operator.yaml

Edit the operator.yaml file to place resources into your eks.amazonaws.com/role-arn. Replace the ARN here with the Amazon Resource Name (ARN) for the OIDC-based role you’ve created. 
Use the following command to deploy the cluster: 

kubectl apply -f operator.yaml


Deploy the Operator to Your Namespace Using Helm Charts
There are two parts needed to deploy an operator within the scope of a namespace. The first is the set of CRDs that are installed at a cluster level. These resource definitions only need to be installed once per Kubernetes cluster. The second part is the operator permissions and deployment itself. When using helm charts you have to first create the namespace using kubectl. 

Clone the Helm installer directory using the following command: 

git clone https://github.com/aws/amazon-sagemaker-operator-for-k8s.git

Navigate to the amazon-sagemaker-operator-for-k8s/hack/charts/installer/namespaced folder. Edit the rolebased/values.yaml file, which includes high-level parameters for the chart. Replace the role ARN here with the Amazon Resource Name (ARN) for the OIDC-based role you’ve created. 
Install the Helm Chart using the following command: 

helm install crds crd_chart/

Create the required namespace and install the operator using the following command: 

kubectl create namespace <namespace>
  helm install --n <namespace> op operator_chart/

After a moment, the chart is installed with the name sagemaker-operator. Verify that the installation succeeded by running the following command: 

helm ls

Your output should look like the following: 

NAME                    NAMESPACE                       REVISION        UPDATED                                 STATUS          CHART                           APP VERSION
  sagemaker-operator      my-namespace                    1               2019-11-20 23:14:59.6777082 +0000 UTC   deployed        sagemaker-k8s-operator-0.1.0


Verify the operator deployment to your namespace

You should be able to see the SageMaker Custom Resource Definitions (CRDs) for each operator deployed to your cluster by running the following command: 

kubectl get crd | grep sagemaker

Your output should look like the following: 

batchtransformjobs.sagemaker.aws.amazon.com         2019-11-20T17:12:34Z
  endpointconfigs.sagemaker.aws.amazon.com            2019-11-20T17:12:34Z
  hostingdeployments.sagemaker.aws.amazon.com         2019-11-20T17:12:34Z
  hyperparametertuningjobs.sagemaker.aws.amazon.com   2019-11-20T17:12:34Z
  models.sagemaker.aws.amazon.com                     2019-11-20T17:12:34Z
  trainingjobs.sagemaker.aws.amazon.com               2019-11-20T17:12:34Z

Ensure that the operator pod is running successfully. Use the following command to list all pods: 

kubectl -n my-namespace get pods

You should see a pod named sagemaker-k8s-operator-controller-manager-***** in the namespace my-namespace as follows: 

NAME                                                         READY   STATUS    RESTARTS   AGE
  sagemaker-k8s-operator-controller-manager-12345678-r8abc     2/2     Running   0          23s


Install the SageMaker logs kubectl plugin
As part of the SageMaker Operators for Kubernetes, you can use the smlogs plugin for kubectl. This enables SageMaker CloudWatch logs to be streamed with kubectl. kubectl must be installed onto your PATH. The following commands place the binary in the sagemaker-k8s-bin directory in your home directory, and add that directory to your PATH. 
```
export os="linux"
wget https://amazon-sagemaker-operator-for-k8s-us-east-1.s3.amazonaws.com/kubectl-smlogs-plugin/v1/${os}.amd64.tar.gz
  tar xvzf ${os}.amd64.tar.gz
# Move binaries to a directory in your homedir.
  mkdir ~/sagemaker-k8s-bin
  cp ./kubectl-smlogs.${os}.amd64/kubectl-smlogs ~/sagemaker-k8s-bin/.
# This line adds the binaries to your PATH in your .bashrc.
echo 'export PATH=$PATH:~/sagemaker-k8s-bin' >> ~/.bashrc
# Source your .bashrc to update environment variables:
  source ~/.bashrc
```
Use the following command to verify that the kubectl plugin is installed correctly: 

kubectl smlogs

If the kubectl plugin is installed correctly, your output should look like the following: 
```
View SageMaker logs via Kubernetes
Usage:
    smlogs [command]
Aliases:
    smlogs, SMLogs, Smlogs
Available Commands:
    BatchTransformJob       View BatchTransformJob logs via Kubernetes
    TrainingJob             View TrainingJob logs via Kubernetes
    help                    Help about any command
Flags:
    -h, --help   help for smlogs
Use "smlogs [command] --help" for more information about a command.
```
Clean up resources
To uninstall the operator from your cluster, you must first make sure to delete all SageMaker resources from the cluster. Failure to do so causes the operator delete operation to hang. Run the following commands to stop all jobs: 
```
Delete all SageMaker jobs from Kubernetes
kubectl delete --all --all-namespaces hyperparametertuningjob.sagemaker.aws.amazon.com
  kubectl delete --all --all-namespaces trainingjobs.sagemaker.aws.amazon.com
  kubectl delete --all --all-namespaces batchtransformjob.sagemaker.aws.amazon.com
  kubectl delete --all --all-namespaces hostingdeployment.sagemaker.aws.amazon.com
```
You should see output similar to the following: 
```
$ kubectl delete --all --all-namespaces trainingjobs.sagemaker.aws.amazon.com
  trainingjobs.sagemaker.aws.amazon.com "xgboost-mnist-from-for-s3" deleted
$ kubectl delete --all --all-namespaces hyperparametertuningjob.sagemaker.aws.amazon.com
  hyperparametertuningjob.sagemaker.aws.amazon.com "xgboost-mnist-hpo" deleted
$ kubectl delete --all --all-namespaces batchtransformjob.sagemaker.aws.amazon.com
  batchtransformjob.sagemaker.aws.amazon.com "xgboost-mnist" deleted
$ kubectl delete --all --all-namespaces hostingdeployment.sagemaker.aws.amazon.com
  hostingdeployment.sagemaker.aws.amazon.com "host-xgboost" deleted
```
After you delete all SageMaker jobs, see Delete operators to delete the operator from your cluster.
Delete operators
Delete cluster-based operators
Operators installed using YAML
To uninstall the operator from your cluster, make sure that all SageMaker resources have been deleted from the cluster. Failure to do so causes the operator delete operation to hang.
Note
Before deleting your cluster, be sure to delete all SageMaker resources from the cluster. See Clean up resources for more information.
After you delete all SageMaker jobs, use kubectl to delete the operator from the cluster:
```
Delete the operator and its resources
kubectl delete -f /installer.yaml
```
You should see output similar to the following: 

$ kubectl delete -f raw-yaml/installer.yaml
  namespace "sagemaker-k8s-operator-system" deleted
  customresourcedefinition.apiextensions.k8s.io "batchtransformjobs.sagemaker.aws.amazon.com" deleted
  customresourcedefinition.apiextensions.k8s.io "endpointconfigs.sagemaker.aws.amazon.com" deleted
  customresourcedefinition.apiextensions.k8s.io "hostingdeployments.sagemaker.aws.amazon.com" deleted
  customresourcedefinition.apiextensions.k8s.io "hyperparametertuningjobs.sagemaker.aws.amazon.com" deleted
  customresourcedefinition.apiextensions.k8s.io "models.sagemaker.aws.amazon.com" deleted
  customresourcedefinition.apiextensions.k8s.io "trainingjobs.sagemaker.aws.amazon.com" deleted
  role.rbac.authorization.k8s.io "sagemaker-k8s-operator-leader-election-role" deleted
  clusterrole.rbac.authorization.k8s.io "sagemaker-k8s-operator-manager-role" deleted
  clusterrole.rbac.authorization.k8s.io "sagemaker-k8s-operator-proxy-role" deleted
  rolebinding.rbac.authorization.k8s.io "sagemaker-k8s-operator-leader-election-rolebinding" deleted
  clusterrolebinding.rbac.authorization.k8s.io "sagemaker-k8s-operator-manager-rolebinding" deleted
  clusterrolebinding.rbac.authorization.k8s.io "sagemaker-k8s-operator-proxy-rolebinding" deleted
  service "sagemaker-k8s-operator-controller-manager-metrics-service" deleted
  deployment.apps "sagemaker-k8s-operator-controller-manager" deleted
  secrets "sagemaker-k8s-operator-abcde" deleted

Operators installed using Helm Charts
To delete the operator CRDs, first delete all the running jobs. Then delete the Helm Chart that was used to deploy the operators using the following commands: 
```
get the helm charts
helm ls
# delete the charts
  helm delete 
```
Delete namespace-based operators
Operators installed with YAML
To uninstall the operator from your cluster, first make sure that all SageMaker resources have been deleted from the cluster. Failure to do so causes the operator delete operation to hang.
Note
Before deleting your cluster, be sure to delete all SageMaker resources from the cluster. See Clean up resources for more information.
After you delete all SageMaker jobs, use kubectl to first delete the operator from the namespace and then the CRDs from the cluster. Run the following commands to delete the operator from the cluster: 
```
Delete the operator using the same yaml file that was used to install the operator
kubectl delete -f operator.yaml
# Now delete the CRDs using the CRD installer yaml
  kubectl delete -f https://raw.githubusercontent.com/aws/amazon-sagemaker-operator-for-k8s/master/release/rolebased/namespaced/crd.yaml
# Now you can delete the namespace if you want
  kubectl delete namespace 
```
Operators installed with Helm Charts
To delete the operator CRDs, first delete all the running jobs. Then delete the Helm Chart that was used to deploy the operators using the following commands: 
```
Delete the operator
helm delete 
# delete the crds
  helm delete crds
# optionally delete the namespace
  kubectl delete namespace 
```
Troubleshooting
Debugging a Failed Job

Check the job status by running the following: 

kubectl get <CRD Type> <job name>

If the job was created in SageMaker, you can use the following command to see the STATUS and the SageMaker Job Name: 

kubectl get <crd type> <job name>

You can use smlogs to find the cause of the issue using the following command: 

kubectl smlogs <crd type> <job name>

You can also use the describe command to get more details about the job using the following command. The output has an additional field that has more information about the status of the job. 

kubectl describe <crd type> <job name>

If the job was not created in SageMaker, then use the logs of the operator’s pod to find the cause of the issue as follows: 
```
$ kubectl get pods -A | grep sagemaker
  # Output:
  sagemaker-k8s-operator-system   sagemaker-k8s-operator-controller-manager-5cd7df4d74-wh22z   2/2     Running   0          3h33m
$ kubectl logs -p  -c manager -n sagemaker-k8s-operator-system
```

Deleting an Operator CRD
If deleting a job is not working, check if the operator is running. If the operator is not running, then you have to delete the finalizer using the following steps: 

In a new terminal, open the job in an editor using kubectl edit as follows: 

kubectl edit <crd type> <job name>

Edit the job to delete the finalizer by removing the following two lines from the file. Save the file and the job is be deleted. 
```
finalizers:

sagemaker-operator-finalizer
```


Images and SMlogs in each Region
The following table lists the available operator images and SMLogs in each region. 
|  Region  |  Controller Image  |  Linux SMLogs  | 
| --- | --- | --- | 
|  us-east-1  |  957583890962.dkr.ecr.us-east-1.amazonaws.com/amazon-sagemaker-operator-for-k8s:v1  |  https://s3.us-east-1.amazonaws.com/amazon-sagemaker-operator-for-k8s-us-east-1/kubectl-smlogs-plugin/v1/linux.amd64.tar.gz  | 
|  us-east-2  |  922499468684.dkr.ecr.us-east-2.amazonaws.com/amazon-sagemaker-operator-for-k8s:v1  |  https://s3.us-east-2.amazonaws.com/amazon-sagemaker-operator-for-k8s-us-east-2/kubectl-smlogs-plugin/v1/linux.amd64.tar.gz  | 
|  us-west-2  |  640106867763.dkr.ecr.us-west-2.amazonaws.com/amazon-sagemaker-operator-for-k8s:v1  |  https://s3.us-west-2.amazonaws.com/amazon-sagemaker-operator-for-k8s-us-west-2/kubectl-smlogs-plugin/v1/linux.amd64.tar.gz  | 
|  eu-west-1  |  613661167059.dkr.ecr.eu-west-1.amazonaws.com/amazon-sagemaker-operator-for-k8s:v1  |  https://s3.eu-west-1.amazonaws.com/amazon-sagemaker-operator-for-k8s-eu-west-1/kubectl-smlogs-plugin/v1/linux.amd64.tar.gz  | 

Announcing the End of Support of the Original Version of SageMaker Operator for Kubernetes
This page announces the end of support of SageMaker Operator for Kubernetes in its original version and provides answers to frequently asked questions as well as migration information to the latest fully supported version of the SageMaker Operator for Kubernetes, the ACK service controller for Amazon SageMaker based on AWS Controllers for Kubernetes (ACK). For general information on SageMaker Operator for Kubernetes, see Latest SageMaker Operators for Kubernetes. 
End of Support Frequently Asked Questions
Topics
+ Why are we ending support for SageMaker Operator for Kubernetes in its original version?
+ Where can I find more information about the new SageMaker Operator for Kubernetes and ACK?
+ What does End-of-Support (EOS) mean?
+ How can I migrate my workload to the new SageMaker Operator for Kubernetes for training and inference?
+ Which version of ACK should I migrate to?
+ Are the initial SageMaker Operators for Kubernetes and the new Operators (ACK service controller for Amazon SageMaker) functionally equivalent?
Why are we ending support for SageMaker Operator for Kubernetes in its original version?
SageMaker Operators for Kubernetes has a new fully supported version, the ACK service controller for Amazon SageMaker based on AWS Controllers for Kubernetes (ACK), a framework for exposing AWS services via a Kubernetes operator. We are therefore announcing the end of support (EOS) of the previous version of SageMaker Operator for Kubernetes which does not use AWS ACK framework. The support will end on Feb 15, 2023 along with Amazon Elastic Kubernetes Service Kubernetes 1.21.
ACK is a community-driven project optimized for production, standardizing the way to expose AWS services via a Kubernetes operator. For more information, see ACK history and tenets.
Where can I find more information about the new SageMaker Operator for Kubernetes and ACK?

For more information on the new SageMaker Operator for Kubernetes, see ACK service controller for Amazon SageMaker GitHub Repository or read AWS Controllers for Kubernetes Documentation.
For a tutorial on how to train a machine learning model with the ACK service controller for Amazon SageMaker using Amazon EKS, see SageMaker example.
For an autoscaling example, see  Scale SageMaker Workloads with Application Auto Scaling
For information on the AWS Controller for Kubernetes the new Operator is based on, see the AWS Controllers for Kubernetes (ACK) documentation.
For a list of supported SageMaker resources, see ACK API Reference.

What does End-of-Support (EOS) mean?
While users can continue to use their current operators, we are no longer developing new features, nor will we release any patches or security updates for any issues found. v1.2.2 is the last release of SageMaker Operator for Kubernetes. Users should migrate their workloads to use the newer version of SageMaker Operator, the ACK service controller for Amazon SageMaker.
How can I migrate my workload to the new SageMaker Operator for Kubernetes for training and inference?
For information about migrating resources from the old to the new SageMaker Operators for Kubernetes, follow Migrate resources to the latest Operators.
Which version of ACK should I migrate to?
Users should migrate to the most recent released version of the ACK service controller for Amazon SageMaker.
Are the initial SageMaker Operators for Kubernetes and the new Operators (ACK service controller for Amazon SageMaker) functionally equivalent?
Yes, they are at feature parity.
A few highlights of the main notable differences between the two versions:
+  The Custom Resources Definitions (CRD) used by the ACK-based SageMaker Operators for Kubernetes follow the AWS API definition making it incompatible with the Custom Resources specifications from the SageMaker Operators for Kubernetes in its initial version. Refer to the CRDs in the new controller or use the migration guide to adopt the resources and use the new controller. 
+  The Hosting Autoscaling policy is no longer part of the new SageMaker Operators for Kubernetes and has been migrated to the Application autoscaling ACK controller. To learn about the Application autoscaling controller to configure autoscaling on SageMaker Endpoints, follow this autoscaling example. 
+  The HostingDeployment resource was used to create Models, Endpoint Configurations and Endpoints in one CRD. The new SageMaker Operators for Kubernetes has a separate CRD for each of these resources. 

Migrate resources to the latest Operators
We are stopping the development and technical support of SageMaker Operators for Kubernetes in its original version. If you are currently using version v1.2.2 or below of the original version of SageMaker Operators for Kubernetes, we recommend migrating your resources to the latest version of the SageMaker Operators for Kubernetes, the ACK service controller for Amazon SageMaker based on AWS Controllers for Kubernetes.
For answers to frequently asked questions regarding the end of support of the original version of SageMaker Operators for Kubernetes, see Announcing the End of Support of the Original Version of SageMaker Operator for Kubernetes.
Use the following steps to migrate your resources and use ACK to train, tune, and deploy machine learning models with Amazon SageMaker.
Note
The latest SageMaker Operators for Kubernetes are not backwards compatible.
Topics
+ Prerequisites
+ Adopt resources
+ Clean up old resources
+ Use the new SageMaker Operators for Kubernetes
Prerequisites
To successfully migrate resources to the latest SageMaker Operators for Kubernetes, you must:

Install the latest SageMaker Operators for Kubernetes. See Setup in Machine Learning with the ACK SageMaker Controller for step-by-step instructions.
If you are using HostingAutoscalingPolicy resources, install the new Application Auto Scaling Operator. See Setup in Scale SageMaker Workloads with Application Auto Scaling for step-by-step instructions. This step is optional if you are not using HostingAutoScalingPolicy resources.

If permissions are configured correctly, then the ACK SageMaker service controller can determine the specification and status of the AWS resource and reconcile the resource as if the ACK controller originally created it. 
Adopt resources
The new SageMaker Operators for Kubernetes provide the ability to adopt resources that were not originally created by the ACK service controller. For more information, see Adopt Existing AWS Resources in the ACK documentation.
The following steps show how the new SageMaker Operators for Kubernetes can adopt an existing SageMaker endpoint. Save the following sample to a file named adopt-endpoint-sample.yaml. 

apiVersion: services.k8s.aws/v1alpha1
kind: AdoptedResource
metadata:
  name: adopt-endpoint-sample
spec:  
  aws:
    # resource to adopt, not created by ACK
    nameOrID: xgboost-endpoint
  kubernetes:
    group: sagemaker.services.k8s.aws
    kind: Endpoint
    metadata:
      # target K8s CR name
      name: xgboost-endpoint

Submit the custom resource (CR) using kubectl apply:

kubectl apply -f adopt-endpoint-sample.yaml

Use kubectl describe to check the status conditions of your adopted resource.

kubectl describe adoptedresource adopt-endpoint-sample

Verify that the ACK.Adopted condition is True. The output should look similar to the following example:
```
kind: AdoptedResource
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"services.k8s.aws/v1alpha1","kind":"AdoptedResource","metadata":{"annotations":{},"name":"xgboost-endpoint","namespace":"default"},"spec":{"aws":{"nameOrID":"xgboost-endpoint"},"kubernetes":{"group":"sagemaker.services.k8s.aws","kind":"Endpoint","metadata":{"name":"xgboost-endpoint"}}}}'
  creationTimestamp: '2021-04-27T02:49:14Z'
  finalizers:
  - finalizers.services.k8s.aws/AdoptedResource
  generation: 1
  name: adopt-endpoint-sample
  namespace: default
  resourceVersion: '12669876'
  selfLink: "/apis/services.k8s.aws/v1alpha1/namespaces/default/adoptedresources/adopt-endpoint-sample"
  uid: 35f8fa92-29dd-4040-9d0d-0b07bbd7ca0b
spec:
  aws:
    nameOrID: xgboost-endpoint
  kubernetes:
    group: sagemaker.services.k8s.aws
    kind: Endpoint
    metadata:
      name: xgboost-endpoint
status:
  conditions:
  - status: 'True'
    type: ACK.Adopted
```
Check that your resource exists in your cluster:

kubectl describe endpoints.sagemaker xgboost-endpoint

HostingAutoscalingPolicy resources
The HostingAutoscalingPolicy (HAP) resource consists of multiple Application Auto Scaling resources: ScalableTarget and ScalingPolicy. When adopting a HAP resource with ACK, you need to first install the Application Auto Scaling controller. To adopt HAP resources, you need to adopt both ScalableTarget and ScalingPolicy resources. You can find the resource indentifier for these resources in the status of the HostingAutoscalingPolicy resource (status.ResourceIDList).
HostingDeployment resources
The HostingDeployment resource consists of multiple SageMaker resources: Endpoint, EndpointConfig, and each Model. If you adopt a SageMaker endpoint in ACK, you need to adopt the Endpoint, EndpointConfig, and each Model separately. The Endpoint, EndpointConfig, and Model names can be found in status of the HostingDeployment resource (status.endpointName, status.endpointConfigName, and status.modelNames).
For a list of all supported SageMaker resources, refer to the ACK API Reference.
Clean up old resources
After the new SageMaker Operators for Kubernetes adopt your resources, you can uninstall old operators and clean up old resources.
Step 1: Uninstall the old operator
To uninstall the old operator, see Delete operators.
Warning
Uninstall the old operator before deleting any old resources.
Step 2: Remove finalizers and delete old resources
Warning
Before deleting old resources, be sure that you have uninstalled the old operator.
After uninstalling the old operator, you must explicitly remove the finalizers to delete old operator resources. The following sample script shows how to delete all training jobs managed by the old operator in a given namespace. You can use a similar pattern to delete additional resources once they are adopted by the new operator.
Note
You must use full resource names to get resources. For example, use kubectl get trainingjobs.sagemaker.aws.amazon.com instead of kubectl get trainingjob.
```
namespace=sagemakernamespace
trainingjobs=$(kubectl get trainingjobs.sagemaker.aws.amazon.com -n $namespace -ojson | jq -r '.items | .[] | .metadata.name')
for job in $training_jobs
do
    echo "Deleting $job resource in $namespace namespace"
    kubectl patch trainingjobs.sagemaker.aws.amazon.com $job -n $namespace -p '{"metadata":{"finalizers":null}}' --type=merge
    kubectl delete trainingjobs.sagemaker.aws.amazon.com $job -n $namespace
done
```
Use the new SageMaker Operators for Kubernetes
For in-depth guides on using the new SageMaker Operators for Kubernetes, see Use SageMaker Operators for Kubernetes

SageMaker Operators for Kubernetes
SageMaker Operators for Kubernetes make it easier for developers and data scientists using Kubernetes to train, tune, and deploy machine learning (ML) models in SageMaker. You can install these SageMaker Operators on your Kubernetes cluster in Amazon Elastic Kubernetes Service (Amazon EKS) to create SageMaker jobs natively using the Kubernetes API and command-line Kubernetes tools such as kubectl. This guide shows how to set up and use the operators to run model training, hyperparameter tuning, or inference (real-time and batch) on SageMaker from a Kubernetes cluster. The procedures and guidelines in this chapter assume that you are familiar with Kubernetes and its basic commands.
Important
We are stopping the development and technical support of SageMaker Operators for Kubernetes in its original version. If you are currently using version v1.2.2 or below of the original version of SageMaker Operators for Kubernetes, we recommend migrating your resources to the latest SageMaker Operators for Kubernetes, the ACK service controller for Amazon SageMaker based on AWS Controllers for Kubernetes (ACK).
For information about the migration steps, see Migrate resources to the latest Operators.
For answers to frequently asked questions regarding the end of support of the original version of SageMaker Operators for Kubernetes, see Announcing the End of Support of the Original Version of SageMaker Operator for Kubernetes
Note
There is no additional charge to use these operators. You do incur charges for any SageMaker resources that you use through these operators.
What is an operator?
A Kubernetes operator is an application controller managing applications on behalf of a Kubernetes user. Controllers of the control plane encompass various control loops listening to a central state manager (ETCD) to regulate the state of the application they control. Examples of such applications include the Cloud-controller-manager and [kube\-controller\-manager](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/). Operators typically provide a higher-level abstraction than raw Kubernetes API, making it easier for users to deploy and manage applications. To add new capabilities to Kubernetes, developers can extend the Kubernetes API by creating a custom resource that contains their application-specific or domain-specific logic and components. Operators in Kubernetes allow users to natively invoke these custom resources and automate associated workflows.
How does AWS Controllers for Kubernetes (ACK) work?
The SageMaker Operators for Kubernetes allow you to manage jobs in SageMaker from your Kubernetes cluster. The latest version of SageMaker Operators for Kubernetes is based on AWS Controllers for Kubernetes (ACK). ACK includes a common controller runtime, a code generator, and a set of AWS service-specific controllers, one of which is the SageMaker controller.
The following diagram illustrates how ACK works.

In this diagram, a Kubernetes user wants to run model training on SageMaker from within the Kubernetes cluster using the Kubernetes API. The user issues a call to kubectl apply, passing in a file that describes a Kubernetes custom resource describing the SageMaker training job. kubectl apply passes this file, called a manifest, to the Kubernetes API server running in the Kubernetes controller node (Step 1 in the workflow diagram). The Kubernetes API server receives the manifest with the SageMaker training job specification and determines whether the user has permissions to create a custom resource of kind sageMaker.services.k8s.aws/TrainingJob, and whether the custom resource is properly formatted (Step 2). If the user is authorized and the custom resource is valid, the Kubernetes API server writes (Step 3) the custom resource to its etcd data store and then responds back (Step 4) to the user that the custom resource has been created. The SageMaker controller, which is running on a Kubernetes worker node within the context of a normal Kubernetes Pod, is notified (Step 5) that a new custom resource of kind sageMaker.services.k8s.aws/TrainingJob has been created. The SageMaker controller then communicates (Step 6) with the SageMaker API, calling the SageMaker CreateTrainingJob API to create the training job in AWS. After communicating with the SageMaker API, the SageMaker controller calls the Kubernetes API server to update (Step 7) the custom resource’s status with information it received from SageMaker. The SageMaker controller therefore provides the same information to the developers that they would have received using the AWS SDK.
Permissions overview
The operators access SageMaker resources on your behalf. The IAM role that the operator assumes to interact with AWS resources differs from the credentials you use to access the Kubernetes cluster. The role also differs from the role that AWS assumes when running your machine learning jobs. 
The following image explains the various authentication layers.


Creating your Amazon SageMaker resource
To publish a model package or algorithm product, you must create the respective  model package resource or  algorithm resource in Amazon SageMaker. 
When you create your resource for an AWS Marketplace product, it must be certified through a validation step. The validation step requires that you provide data to test your model package or algorithm resource before it can be published. 
Note
If you haven't yet created the images for your product and uploaded them to Amazon Elastic Container Registry (Amazon ECR), see Packaging your code into images and Uploading your images for information about how to do so.
Creating your model package
The following are requirements for creating a model package for AWS Marketplace: 
+  An inference image stored in Amazon ECR 
+  (Optional) Model artifacts, stored separately in Amazon S3 
+ Your test data used for inferences, stored in Amazon Simple Storage Service (Amazon S3) 
Note
 The following is about creating a model package product. For more information about model packages in SageMaker, see Create a Model Package Resource. 
Creating the model package resources
The following procedures step you through creating the model package resources.
Step 1: To create the model package resources

Open the  Amazon SageMaker console.
Ensure that you are in the AWS Region that you want to publish from by looking at the top right of the page. For publishing, see the Supported AWS Regions for publishing section. The inference image you uploaded to Amazon ECR in previous steps must be in the same Region. 
In the left navigation menu, choose Model packages.
Choose Create model package.

After you create the package, you need to set the specifications of the inference package.
Step 2: To set inference specifications

Provide a Name for your model package (for example, my-model-package). 
For Location of inference image, enter the URI of your inference image that was uploaded to Amazon ECR. You can retrieve the URI by locating your image in the Amazon ECR console. 
If your model artifacts from training are bundled with your logic in your inference image, leave the Location of model data artifacts empty. Otherwise, specify the full Amazon S3 location of the compressed file (.tar.gz) of your model artifacts. 
Using the dropdown box, choose the supported instance types of your inference image for both real-time inference (also known as endpoint) and batch-transform jobs. 
Choose Next. 
Before your model package can be created and published, validation is necessary to ensure that it functions as expected. This requires that you run a batch transform job with test data for inference that you provide. The validation specifications tell SageMaker how to perform the validation. 

Step 3: To set validation specifications

Set Publish this model package in AWS Marketplace to Yes. If you set this to No, you can't publish this model package later. Choosing Yes  certifies your model package for AWS Marketplace and requires the validation step. 
If this is the first time completing this process, choose Create a new role for the IAM role. Amazon SageMaker uses this role when it deploys your model package. This includes actions, such as pulling images from Amazon ECR and artifacts from Amazon S3. Review the settings, and choose Create role. Creating a role here grants permissions described by the  AmazonSageMakerFullAccess IAM policy to the role that you create. 
Edit the JSON in the validation profile. For details about allowed values, see TransformJobDefinition. 

TransformInput.DataSource.S3Uri: Set to where your test data for inference is stored. 
TransformInput.ContentType: Specify your test data content type (for example, application/json, text/plain, image/png, or any other value). SageMaker does not validate the actual input data. This value is passed to your container HTTP endpoint in the Content-type header value. 
TransformInput.CompressionType: Set to None if your test data for inference in Amazon S3 is not compressed. 
TransformInput.SplitType: Set to None to pass each object in Amazon S3 as a whole for inference. 
TransformOutput.S3OutputPath: Set to the location that the inference output is stored. 
TransformOutput.AssembleWith: Set to None to output each inference as separate objects in Amazon S3. 

Choose Create model package. 
SageMaker pulls the inference image from Amazon ECR, copies any artifacts to the inference container, and runs a batch transform job using your test data for inference. After the validation succeeds, the status changes to Completed. 

Note
 The validation step does not evaluate the accuracy of the model with your test data. The validation step checks if the container runs and responds as expected. 
You have completed creating your model product resources. Continue to Publishing your product in AWS Marketplace. 
Creating your algorithm
The following are requirements for creating an algorithm for AWS Marketplace: 
+ An inference image, stored in Amazon ECR 
+ A training image, stored in Amazon ECR 
+  Your test data for training, stored in Amazon S3 
+ Your test data for inference, stored in Amazon S3 
Note
 The following walkthrough creates an algorithm product. For more information, see Create an Algorithm Resource. 
Creating the algorithm resources
The following procedures step you through creating the resources in your algorithm package.
Step 1: To create the algorithm resources

Open the  Amazon SageMaker console. 
Ensure that you are in the AWS Region that you want to publish from by looking at the top right of the page (see Supported AWS Regions for publishing). The training and inference images you uploaded to Amazon ECR in previous steps must be in this same Region. 
In the left navigation menu, choose Algorithms. 
Choose Create algorithm. 

After you have created the algorithm package, you must set the specifications for the training and tuning of your model.
Step 2: To set the training and tuning specifications

Enter the Name for your algorithm (for example, my-algorithm). 
For Training image, paste the full URI location of your training image that was uploaded to Amazon ECR. You can retrieve the URI by locating your image in the Amazon ECR console. 
Using the dropdown box, choose the instance types for training that your training image supports. 
Under the Channel specification section, add a channel for each input dataset that your algorithm supports, up to 20 channels of input sources. For more information, see  Input Data Configuration. 
Choose Next. 
If your algorithm supports hyperparameters and hyperparameter tuning, you must specify the tuning parameters.
Choose Next. 

Note
 We highly recommend that your algorithm supports hyperparameter tuning and makes appropriate parameters tunable. This allows data scientists to tune models to get the best results. 
After you have set the tuning parameters, if any, you must set the specifications for your inference image.
Step 3: To set inference image specification

For Location of inference image, paste the URI of the inference image that was uploaded to Amazon ECR. You can retrieve the URI by locating your image in the Amazon ECR Console. 
Using the dropdown box, choose the supported instance types for your inference image for both real-time inference (also known as endpoint) and batch-transform jobs. 
Choose Next. 
Before your algorithm can be created and published, validation is necessary to ensure that it functions as expected. This requires that you run both a training job with test data for training and a batch transform job with test data for inference that you provide. The validation specifications tell SageMaker how to perform the validation. 

Step 4: To set validation specifications

Set Publish this algorithm in AWS Marketplace to Yes. If you set this to No, you can't publish this algorithm later. Choosing Yes  certifies your algorithm for AWS Marketplace and requires the validation specification.
If this is your first time creating a machine learning package for AWS Marketplace, choose Create a new role for the IAM role. Amazon SageMaker uses this role when training your algorithm and deploying the subsequent model package. This includes actions such as pulling images from Amazon ECR, storing artifacts in Amazon S3, and copying training data from Amazon S3. Review the settings, and choose Create role. Creating a role here grants permissions described by the  AmazonSageMakerFullAccess IAM policy to the role that you create. 
Edit the JSON file in the validation profile for Training job definition. For more information about allowed values, see  TrainingJobDefinition. 

InputDataConfig: In this JSON array, add a Channel object for each channel that you specified in the training-specification step. For each channel, specify where your test data for training is stored. 
OutputDataConfig: After the training completes, the model artifacts in the training container directory path /opt/ml/model/ are compressed and copied out to Amazon S3. Specify the Amazon S3 location of where the compressed file (.tar.gz) is stored. 

Edit the JSON file in the validation profile for Transform job definition. For more information about allowed values, see  TransformJobDefinition. 

TransformInput.DataSource.S3Uri: Set to where your test data for inference is stored. 
TransformInput.ContentType: Specify your test data content type. For example, application/json, text/plain, image/png, or any other value. Amazon SageMaker does not validate the actual input data. This value is passed to your container HTTP endpoint in the Content-type header value. 
TransformInput.CompressionType: Set to None if your test data for inference in Amazon S3 is not compressed. 
TransformInput.SplitType: Choose how you want objects in S3 split. For example, None passes each object in Amazon S3 as a whole for inference. For more details, see  SplitType in the Amazon SageMaker API Reference. 
TransformOutput.S3OutputPath: Set to the location where the inference output is stored. 
TransformOutput.AssembleWith: Set to None to output each inference as separate objects in Amazon S3. 

Choose Create algorithm package.
SageMaker pulls the training image from Amazon ECR, runs a test-training job using your data, and stores the model artifacts in Amazon S3. It then pulls the inference image from Amazon ECR, copies the artifacts from Amazon S3 into the inference container, and runs a batch transform job using your test data for inference. After the validation succeeds, the status changes to Completed. 

Note
 The validation step does not evaluate the accuracy of the training or the model with your test data. The validation step checks if the containers run and respond as expected.
The validation step only validates batch processing. It is up to you to validate that real-time processing works with your product.
You have completed creating your algorithm product resources. Continue to Publishing your product in AWS Marketplace. 

Prepare your product in SageMaker
Before publishing your product in AWS Marketplace, you must prepare it in Amazon SageMaker. There are three steps to preparing your product:

Packaging your code into images – To prepare a model package or algorithm product, you must create the Docker container images for your product. 
Uploading your images – After packaging your code in container images and testing them locally, upload the images and scan them for known vulnerabilities. Fix any vulnerabilities before continuing. 
Creating your Amazon SageMaker resource – After your images are scanned successfully, they can be used to create a model package or algorithm resource in SageMaker. 


Compile a Model (Amazon SageMaker SDK)
You can use the https://sagemaker.readthedocs.io/en/stable/api/training/estimators.html?#sagemaker.estimator.Estimator.compile_model API in the Amazon SageMaker SDK for Python to compile a trained model and optimize it for specific target hardware. The API should be invoked on the estimator object used during model training. 
Note
You must set MMS_DEFAULT_RESPONSE_TIMEOUT environment variable to 500 when compiling the model with MXNet or PyTorch. The environment variable is not needed for TensorFlow. 
The following is an example of how you can compile a model using the trained_model_estimator object: 
```
Replace the value of expectedtrainedmodel_input below and
specify the name & shape of the expected inputs for your trained model
in json dictionary form
expectedtrainedmodel_input = {'data':[1, 784]}
Replace the example targetinstancefamily below to your preferred targetinstancefamily
compiledmodel = trainedmodelestimator.compilemodel(targetinstancefamily='mlc5',
        inputshape=expectedtrainedmodelinput,
        outputpath='insert s3 output path',
        env={'MMSDEFAULTRESPONSE_TIMEOUT': '500'})
```
The code compiles the model, saves the optimized model at output_path, and creates a SageMaker model that can be deployed to an endpoint. Sample notebooks of using the SDK for Python are provided in the Neo Model Compilation Sample Notebooks section. 


This is documentation for the developer preview release of the AWS SDK for Rust. Do not use it in production as it is subject to breaking changes. 

SageMaker examples using SDK for Rust
The following code examples show you how to perform actions and implement common scenarios by using the AWS SDK for Rust with SageMaker.
Actions are code excerpts that show you how to call individual SageMaker functions.
Scenarios are code examples that show you how to accomplish a specific task by calling multiple SageMaker functions.
Each example includes a link to GitHub, where you can find instructions on how to set up and run the code in context.
Topics
+ Actions
Actions
List notebook instances
The following code example shows how to list SageMaker notebook instances.
SDK for Rust
This documentation is for an SDK in preview release. The SDK is subject to change and should not be used in production.
 To learn how to set up and run this example, see GitHub. 
```
async fn showinstances(client: &Client) -> Result<(), Error> {
    let notebooks = client.listnotebook_instances().send().await?;
println!("Notebooks:");

for n in notebooks.notebook_instances().unwrap_or_default() {
    let n_instance_type = n.instance_type().unwrap();
    let n_status = n.notebook_instance_status().unwrap();
    let n_name = n.notebook_instance_name().unwrap_or_default();

    println!("  Name :          {}", n_name);
    println!("  Status :        {}", n_status.as_ref());
    println!("  Instance Type : {}", n_instance_type.as_ref());
    println!();
}

Ok(())

}
```
+  For API details, see ListNotebookInstances in AWS SDK for Rust API reference. 
List training jobs
The following code example shows how to list SageMaker training jobs.
SDK for Rust
This documentation is for an SDK in preview release. The SDK is subject to change and should not be used in production.
 To learn how to set up and run this example, see GitHub. 
```
async fn showjobs(client: &Client) -> Result<(), Error> {
    let jobdetails = client.listtrainingjobs().send().await?;
println!("Jobs:");

for j in job_details.training_job_summaries().unwrap_or_default() {
    let name = j.training_job_name().unwrap_or_default();
    let creation_time = j.creation_time().unwrap().to_chrono_utc();
    let training_end_time = j.training_end_time().unwrap().to_chrono_utc();

    let status = j.training_job_status().unwrap();
    let duration = training_end_time - creation_time;

    println!("  Name:               {}", name);
    println!(
        "  Creation date/time: {}",
        creation_time.format("%Y-%m-%d@%H:%M:%S")
    );
    println!("  Duration (seconds): {}", duration.num_seconds());
    println!("  Status:             {}", status.as_ref());

    println!();
}

Ok(())

}
```
+  For API details, see ListTrainingJobs in AWS SDK for Rust API reference. 

Common Data Formats for Built-in Algorithms
The following topics explain the data formats for the algorithms provided by Amazon SageMaker.
Topics
+ Common Data Formats for Training
+ Common Data Formats for Inference

Docker Registry Paths and Example Code
The following topics list the Docker registry path and other parameters for each of the Amazon SageMaker provided algorithms and Deep Learning Containers (DLC).
Use the path as follows:
+ To create a training job (create_training_job), specify the Docker registry path (TrainingImage) and the training input mode (TrainingInputMode) for the training image. You create a training job to train a model using a specific dataset.
+ To create a model (create_model), specify the Docker registry path (Image) for the inference image (PrimaryContainer Image). SageMaker launches machine learning compute instances that are based on the endpoint configuration and deploys the model, which includes the artifacts (the result of model training).
Note
For the registry path, use the :1 version tag to ensure that you are using a stable version of the algorithm/DLC. You can reliably host a model trained using an image with the :1 tag on an inference image that has the :1 tag. Using the :latest tag in the registry path provides you with the most up-to-date version of the algorithm/DLC, but might cause problems with backward compatibility. Avoid using the :latest tag for production purposes.
Important
When you retrieve the SageMaker XGBoost image URI, do not use :latest or :1 for the image URI tag. You must specify one of the Supported versions to choose the SageMaker-managed XGBoost container with the native XGBoost package version that you want to use. To find the package version migrated into the SageMaker XGBoost containers, see Docker Registry Paths and Example Code, choose your AWS Region, and navigate to the XGBoost (algorithm) section.
To find the registry path, choose the AWS Region, then choose the algorithm or DLC.
Topics
+ US East (Ohio)
+ US East (N. Virginia)
+ US West (N. California)
+ US West (Oregon)
+ Africa (Cape Town)
+ Asia Pacific (Hong Kong)
+ Asia Pacific (Mumbai)
+ Asia Pacific (Osaka)
+ Asia Pacific (Seoul)
+ Asia Pacific (Singapore)
+ Asia Pacific (Sydney)
+ Asia Pacific (Jakarta)
+ Asia Pacific (Tokyo)
+ Canada (Central)
+ China (Beijing)
+ China (Ningxia)
+ Europe (Frankfurt)
+ Europe (Ireland)
+ Europe (London)
+ Europe (Paris)
+ Europe (Stockholm)
+ Europe (Milan)
+ Middle East (Bahrain)
+ South America (São Paulo)
+ AWS GovCloud (US-West)

Compliance Validation for Amazon SageMaker
Third-party auditors assess the security and compliance of Amazon SageMaker as part of multiple AWS compliance programs. These include SOC, PCI, FedRAMP, HIPAA, and others.
Note
If your use of Amazon SageMaker Studio in AWS East/West regions is subject to FedRAMP Moderate, use AWS Identity and Access Management (IAM) to configure authentication for Studio. AWS IAM Identity Center (successor to AWS Single Sign-On) is currently not in scope for FedRAMP Moderate (East/West).
For a list of AWS services in scope of specific compliance programs, see AWS Services in Scope by Compliance Program. For general information, see AWS Compliance Programs.
You can download third-party audit reports using AWS Artifact. For more information, see Downloading Reports in AWS Artifact.
Your compliance responsibility when using Amazon SageMaker is determined by the sensitivity of your data, your company's compliance objectives, and applicable laws and regulations. AWS provides the following resources to help with compliance:
+ Security and Compliance Quick Start Guides – These deployment guides discuss architectural considerations and provide steps for deploying security- and compliance-focused baseline environments on AWS.
+ Architecting for HIPAA Security and Compliance Whitepaper  – This whitepaper describes how companies can use AWS to create HIPAA-compliant applications.
+ AWS Compliance Resources – This collection of workbooks and guides might apply to your industry and location.
+ AWS Config – This AWS service assesses how well your resource configurations comply with internal practices, industry guidelines, and regulations.
+ AWS Security Hub – This AWS service provides a comprehensive view of your security state within AWS that helps you check your compliance with security industry standards and best practices.

Amazon SageMaker controls
These controls are related to SageMaker resources.
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
Related requirements: PCI DSS v3.2.1/1.2.1, PCI DSS v3.2.1/1.3.1, PCI DSS v3.2.1/1.3.2, PCI DSS v3.2.1/1.3.4, PCI DSS v3.2.1/1.3.6, NIST.800-53.r5 AC-21, NIST.800-53.r5 AC-3, NIST.800-53.r5 AC-3(7), NIST.800-53.r5 AC-4, NIST.800-53.r5 AC-4(21), NIST.800-53.r5 AC-6, NIST.800-53.r5 SC-7, NIST.800-53.r5 SC-7(11), NIST.800-53.r5 SC-7(16), NIST.800-53.r5 SC-7(20), NIST.800-53.r5 SC-7(21), NIST.800-53.r5 SC-7(3), NIST.800-53.r5 SC-7(4), NIST.800-53.r5 SC-7(9)
Category: Protect > Secure network configuration
Severity: High
Resource type: AWS::SageMaker::NotebookInstance
AWS Config rule: https://docs.aws.amazon.com/config/latest/developerguide/sagemaker-notebook-no-direct-internet-access.html
Schedule type: Periodic
Parameters: None
This control checks whether direct internet access is disabled for an SageMaker notebook instance. To do this, it checks whether the DirectInternetAccess field is disabled for the notebook instance. 
If you configure your SageMaker instance without a VPC, then by default direct internet access is enabled on your instance. You should configure your instance with a VPC and change the default setting to Disable—Access the internet through a VPC.
To train or host models from a notebook, you need internet access. To enable internet access, make sure that your VPC has a NAT gateway and your security group allows outbound connections. To learn more about how to connect a notebook instance to resources in a VPC, see Connect a notebook instance to resources in a VPC in the Amazon SageMaker Developer Guide.
You should also ensure that access to your SageMaker configuration is limited to only authorized users. Restrict users' IAM permissions to modify SageMaker settings and resources.
Note
This control is not supported in the following Regions:
Africa (Cape Town)
China (Beijing)
China (Ningxia)
Europe (Milan)
Middle East (UAE)
 AWS GovCloud (US-East)
Remediation
Note that you cannot change the internet access setting after a notebook instance is created. It must be stopped, deleted, and recreated.
To configure an SageMaker notebook instance to deny direct internet access

Open the SageMaker console at https://console.aws.amazon.com/sagemaker/
Navigate to Notebook instances.
Delete the instance that has direct internet access enabled. Choose the instance, choose Actions, then choose stop.
After the instance is stopped, choose Actions, then choose delete.
Choose Create notebook instance. Provide the configuration details.
Expand the network section, then choose a VPC, subnet, and security group. Under Direct internet access, choose Disable—Access the internet through a VPC.
Choose Create notebook instance.

For more information, see Connect a notebook instance to resources in a VPC in the Amazon SageMaker Developer Guide.
[SageMaker.2] SageMaker notebook instances should be launched in a custom VPC
Related requirements: NIST.800-53.r5 AC-21, NIST.800-53.r5 AC-3, NIST.800-53.r5 AC-3(7), NIST.800-53.r5 AC-4, NIST.800-53.r5 AC-4(21), NIST.800-53.r5 AC-6, NIST.800-53.r5 SC-7, NIST.800-53.r5 SC-7(11), NIST.800-53.r5 SC-7(16), NIST.800-53.r5 SC-7(20), NIST.800-53.r5 SC-7(21), NIST.800-53.r5 SC-7(3), NIST.800-53.r5 SC-7(4), NIST.800-53.r5 SC-7(9)
Category: Protect > Secure network configuration > Resources within VPC
Severity: High
Resource type: AWS::SageMaker::NotebookInstance
AWS Config rule: sagemaker-notebook-instance-inside-vpc
Schedule type: Change triggered
Parameters: None
This control checks if an Amazon SageMaker notebook instance is launched within a custom virtual private cloud (VPC). This control fails if a SageMaker notebook instance is not launched within a custom VPC or if it is launched in the SageMaker service VPC.
Subnets are a range of IP addresses within a VPC. We recommend keeping your resources inside a custom VPC whenever possible to ensure secure network protection of your infrastructure. An Amazon VPC is a virtual network dedicated to your AWS account. With an Amazon VPC, you can control the network access and internet connectivity of your SageMaker Studio and notebook instances.
Note
This control is not supported in the following Regions:
Asia Pacific (Jakarta)
China (Beijing)
China (Ningxia)
Middle East (UAE)
AWS GovCloud (US-East)
AWS GovCloud (US-West)
Remediation
You can't change the VPC setting after creating a notebook instance. Instead, you can delete and recreate the instance. For instructions on deleting and creating a notebook instance, see Get started with Amazon SageMaker notebook instances in the Amazon SageMaker Developer Guide.
[SageMaker.3] Users should not have root access to SageMaker notebook instances
Related requirements: NIST.800-53.r5 AC-2(1), NIST.800-53.r5 AC-3(15), NIST.800-53.r5 AC-3(7), NIST.800-53.r5 AC-6, NIST.800-53.r5 AC-6(10), NIST.800-53.r5 AC-6(2)
Category: Protect > Secure access management > Root user access restrictions
Severity: High
Resource type: AWS::SageMaker::NotebookInstance
AWS Config rule: sagemaker-notebook-instance-root-access-check
Schedule type: Change triggered
Parameters: None
This control checks whether root access is turned on for an Amazon SageMaker notebook instance. The control fails if root access is turned on for a SageMaker notebook instance.
In adherence to the principal of least privilege, it is a recommended security best practice to restrict root access to instance resources to avoid unintentionally over provisioning permissions.
Note
This control is not supported in the following Regions:
Asia Pacific (Jakarta)
China (Beijing)
China (Ningxia)
Middle East (UAE)
AWS GovCloud (US-East)
AWS GovCloud (US-West)
Remediation
To restrict root access to SageMaker notebook instances, see Control root access to a SageMaker notebook instance in the Amazon SageMaker Developer Guide.

SageMaker Edge Manager
The Amazon SageMaker Edge Manager component (aws.greengrass.SageMakerEdgeManager) installs the SageMaker Edge Manager agent binary. 
SageMaker Edge Manager provides model management for edge devices so you can optimize, secure, monitor, and maintain machine learning models on fleets of edge devices. The SageMaker Edge Manager component installs and manages the lifecycle of the SageMaker Edge Manager agent on your core device. You can also use SageMaker Edge Manager to package and use SageMaker Neo-compiled models as model components on Greengrass core devices. For more information about using SageMaker Edge Manager agent on your core device, see Use Amazon SageMaker Edge Manager on Greengrass core devices.
SageMaker Edge Manager component v1.3.x installs Edge Manager agent binary v1.20220822.836f3023. For more information about Edge Manager agent binary versions, see Edge Manager Agent.
Note
The SageMaker Edge Manager component is available only in the following AWS Regions:
US East (Ohio)
US East (N. Virginia)
US West (Oregon)
EU (Frankfurt)
EU (Ireland)
Asia Pacific (Tokyo)
Topics
+ Versions
+ Type
+ Operating system
+ Requirements
+ Dependencies
+ Configuration
+ Local log file
+ Changelog
Versions
This component has the following versions:
+ 1.3.x
+ 1.2.x
+ 1.1.x
+ 1.0.x
Type
This component is a generic component (aws.greengrass.generic). The Greengrass nucleus runs the component's lifecycle scripts.
For more information, see Component types.
Operating system
This component can be installed on core devices that run the following operating systems:
+ Linux
+ Windows
Requirements
This component has the following requirements:
+ A Greengrass core device running on Amazon Linux 2, a Debian-based Linux platform (x86_64 or Armv8), or Windows (x86_64). If you don't have one, see Tutorial: Getting started with AWS IoT Greengrass V2.
+ Python 3.6 or later, including pip for your version of Python, installed on your core device.
+ The Greengrass device role configured with the following: 
  + A trust relationship that allows credentials.iot.amazonaws.com and sagemaker.amazonaws.com to assume the role, as shown in the following IAM policy example.
```
{ 
  "Version": "2012-10-17",
  "Statement": [ 
    { 
      "Effect": "Allow", 
      "Principal": {
        "Service": "credentials.iot.amazonaws.com"
       }, 
      "Action": "sts:AssumeRole" 
    },
    { 
      "Effect": "Allow", 
      "Principal": {
        "Service": "sagemaker.amazonaws.com"
      }, 
      "Action": "sts:AssumeRole" 
    } 
  ] 
}
```

+ The AmazonSageMakerEdgeDeviceFleetPolicy IAM managed policy.
  + The s3:PutObject action, as shown in the following IAM policy example.
```
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "s3:PutObject"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    }
  ]
}
```

+ An Amazon S3 bucket created in the same AWS account and AWS Region as your Greengrass core device. SageMaker Edge Manager requires an S3 bucket to create an edge device fleet, and to store sample data from running inference on your device. For information about creating S3 buckets, see Getting started with Amazon S3.
+ A SageMaker edge device fleet that uses the same AWS IoT role alias as your Greengrass core device. For more information, see Create an edge device fleet.
+ Your Greengrass core device registered as an edge device in your SageMaker Edge device fleet. The edge device name must match the AWS IoT thing name for your core device. For more information, see Register your Greengrass core device.
Endpoints and ports
This component must be able to perform outbound requests to the following endpoints and ports, in addition to endpoints and ports required for basic operation. For more information, see Allow device traffic through a proxy or firewall.
| Endpoint | Port | Required | Description | 
| --- | --- | --- | --- | 
|  edge.sagemaker.region.amazonaws.com  | 443 | Yes |  Check device registration status and send metrics to SageMaker.  | 
|  *.s3.amazonaws.com  | 443 | Yes |  Upload capture data to the S3 bucket that you specify. You can replace * with the name of each bucket where you upload data.  | 
Dependencies
When you deploy a component, AWS IoT Greengrass also deploys compatible versions of its dependencies. This means that you must meet the requirements for the component and all of its dependencies to successfully deploy the component. This section lists the dependencies for the released versions of this component and the semantic version constraints that define the component versions for each dependency. You can also view the dependencies for each version of the component in the AWS IoT Greengrass console. On the component details page, look for the Dependencies list.

[ 1.3.2 ]
The following table lists the dependencies for version 1.3.2 of this component.
| Dependency | Compatible versions | Dependency type | 
| --- | --- | --- | 
| Greengrass nucleus | >=2.0.0 <3.0.0 | Soft | 
| Token exchange service | >=0.0.0 | Hard | 

[ 1.3.1 ]
The following table lists the dependencies for version 1.3.1 of this component.
| Dependency | Compatible versions | Dependency type | 
| --- | --- | --- | 
| Greengrass nucleus | >=2.0.0 <2.9.0 | Soft | 
| Token exchange service | >=0.0.0 | Hard | 

[ 1.1.1 - 1.3.0 ]
The following table lists the dependencies for versions 1.1.1 - 1.3.0 of this component.
| Dependency | Compatible versions | Dependency type | 
| --- | --- | --- | 
| Greengrass nucleus | >=2.0.0 <2.8.0 | Soft | 
| Token exchange service | >=0.0.0 | Hard | 

[ 1.1.0 ]
The following table lists the dependencies for version 1.1.0 of this component.
| Dependency | Compatible versions | Dependency type | 
| --- | --- | --- | 
| Greengrass nucleus | >=2.0.0 <2.6.0 | Soft | 
| Token exchange service | >=0.0.0 | Hard | 

[ 1.0.3 ]
The following table lists the dependencies for version 1.0.3 of this component.
| Dependency | Compatible versions | Dependency type | 
| --- | --- | --- | 
| Greengrass nucleus | >=2.0.0 <2.5.0 | Soft | 
| Token exchange service | >=0.0.0 | Hard | 

[ 1.0.1 and 1.0.2 ]
The following table lists the dependencies for versions 1.0.1 and 1.0.2 of this component.
| Dependency | Compatible versions | Dependency type | 
| --- | --- | --- | 
| Greengrass nucleus | >=2.0.0 <2.4.0 | Soft | 
| Token exchange service | >=0.0.0 | Hard | 

[ 1.0.0 ]
The following table lists the dependencies for version 1.0.0 of this component.
| Dependency | Compatible versions | Dependency type | 
| --- | --- | --- | 
| Greengrass nucleus | >=2.0.0 <2.3.0 | Soft | 
| Token exchange service | >=0.0.0 | Hard | 

For more information about component dependencies, see the component recipe reference.
Configuration
This component provides the following configuration parameters that you can customize when you deploy the component.
Note
This section describes the configuration parameters that you set in the component. For more information about the corresponding SageMaker Edge Manager configuration, see Edge Manager Agent in the Amazon SageMaker Developer Guide.
DeviceFleetName
The name of the SageMaker Edge Manager device fleet that contains your Greengrass core device.
You must specify a value for this parameter in the configuration update when you deploy this component.
BucketName
The name of the S3 bucket to which you upload captured inference data. The bucket name must contain the string sagemaker.
If you set CaptureDataDestination to Cloud, or if you set CaptureDataPeriodicUpload to true, then you must specify a value for this parameter in the configuration update when you deploy this component.
Capture data is an SageMaker feature that you use to upload inference input, inference results, and additional inference data to an S3 bucket or a local directory for future analysis. For more information about using capture data with SageMaker Edge Manager, see Manage Model in the Amazon SageMaker Developer Guide.
CaptureDataBatchSize
(Optional) The size of a batch of capture data requests that the agent handles. This value must be less than the buffer size that you specify in CaptureDataBufferSize. We recommend that you don't exceed half the buffer size.
The agent handles a request batch when the number of requests in the buffer meets the CaptureDataBatchSize number, or when the CaptureDataPushPeriodSeconds interval elapses, whichever occurs first.
Default: 10
CaptureDataBufferSize
(Optional) The maximum number of capture data requests stored in the buffer.
Default: 30
CaptureDataDestination
(Optional) The destination where you store captured data. This parameter can have the following values:
+ Cloud—Uploads captured data to the S3 bucket that you specify in BucketName.
+ Disk—Writes captured data to the component's work directory. 
If you specify Disk, you can also choose to periodically upload the captured data to your S3 bucket by setting CaptureDataPeriodicUpload to true.
Default: Cloud
CaptureDataPeriodicUpload
(Optional) String value that specifies whether to periodically upload captured data. Supported values are true and false.
Set this parameter to true if you set CaptureDataDestination to Disk, and you also want the agent to periodically upload the captured data your S3 bucket.
Default: false
CaptureDataPeriodicUploadPeriodSeconds
(Optional) The interval in seconds at which SageMaker Edge Manager agent uploads captured data to the S3 bucket. Use this parameter if you set CaptureDataPeriodicUpload to true.
Default: 8
CaptureDataPushPeriodSeconds
(Optional) The interval in seconds at which SageMaker Edge Manager agent handles a batch of capture data requests from the buffer.
The agent handles a request batch when the number of requests in the buffer meets the CaptureDataBatchSize number, or when the CaptureDataPushPeriodSeconds interval elapses, whichever occurs first.
Default: 4
CaptureDataBase64EmbedLimit
(Optional) The maximum size in bytes of captured data that SageMaker Edge Manager agent uploads.
Default: 3072
FolderPrefix
(Optional) The name of the folder to which the agent writes the captured data. If you set CaptureDataDestination to Disk, the agent creates the folder in the directory that is specified by CaptureDataDiskPath. If you set CaptureDataDestination to Cloud, or if you set CaptureDataPeriodicUpload to true, the agent creates the folder in your S3 bucket.
Default: sme-capture
CaptureDataDiskPath
This feature is available in v1.1.0 and later versions of the SageMaker Edge Manager component.
(Optional) The path to the folder to which the agent creates the captured data folder. If you set CaptureDataDestination to Disk, the agent creates the captured data folder in this directory. If you don't specify this value, the agent creates the captured data folder in the component's work directory. Use the FolderPrefix parameter to specify the name of the captured data folder.
Default: /greengrass/v2/work/aws.greengrass.SageMakerEdgeManager/capture
LocalDataRootPath
This feature is available in v1.2.0 and later versions of the SageMaker Edge Manager component.
(Optional) The path where this component stores the following data on the core device:
+ The local database for runtime data when you set DbEnable to true.
+ SageMaker Neo-compiled models that this component automatically downloads when you set DeploymentEnable to true.
Default: /greengrass/v2/work/aws.greengrass.SageMakerEdgeManager
DbEnable
(Optional) You can enable this component to store runtime data in a local database to preserve the data, in case the component fails or the device loses power.
This database requires 5 MB of storage on the core device's file system.
Default: false
DeploymentEnable
This feature is available in v1.2.0 and later versions of the SageMaker Edge Manager component.
(Optional) You can enable this component to automatically retrieve SageMaker Neo-compiled models from that you upload to Amazon S3. After you upload a new model to Amazon S3, use SageMaker Studio or the SageMaker API to deploy the new model to this core device. When you enable this feature, you can deploy new models to core devices without needing to create a AWS IoT Greengrass deployment.
To use this feature, you must set DbEnable to true. This feature uses the local database to track models that it retrieves from the AWS Cloud.
Default: false
DeploymentPollInterval
This feature is available in v1.2.0 and later versions of the SageMaker Edge Manager component.
(Optional) The amount of time (in minutes) between which this component checks for new models to download. This option applies when you set DeploymentEnable to true.
Default: 1440 (1 day)
DLRBackendOptions
This feature is available in v1.2.0 and later versions of the SageMaker Edge Manager component.
(Optional) The DLR runtime flags to set in the DLR runtime that this component uses. You can set the following flag:
+ TVM_TENSORRT_CACHE_DIR – Enable TensorRT model caching. Specify an absolute path to an existing folder that has read/write permissions.
+ TVM_TENSORRT_CACHE_DISK_SIZE_MB – Assigns the upper limit of the TensorRT model cache folder. When the directory size grows beyond this limit the cached engines that are used the least are deleted. The default value is 512 MB.
For example, you can set this parameter to the following value to enable TensorRT model caching and limit the cache size to 800 MB.  

TVM_TENSORRT_CACHE_DIR=/data/secured_folder/trt/cache; TVM_TENSORRT_CACHE_DISK_SIZE_MB=800

SagemakerEdgeLogVerbose
(Optional) String value that specifies whether to enable debug logging. Supported values are true and false.
Default: false
UnixSocketName
(Optional) The location of the SageMaker Edge Manager socket file descriptor on the core device.
Default: /tmp/aws.greengrass.SageMakerEdgeManager.sock
Example: Configuration merge update
The following example configuration specifies that the core device is part of the MyEdgeDeviceFleet and that the agent writes capture data both to the device and to an S3 bucket. This configuration also enables debug logging.  

{
    "DeviceFleetName": "MyEdgeDeviceFleet",
    "BucketName": "DOC-EXAMPLE-BUCKET",
    "CaptureDataDestination": "Disk",
    "CaptureDataPeriodicUpload": "true",
    "SagemakerEdgeLogVerbose": "true"    
}

Local log file
This component uses the following log file.

[ Linux ]

/greengrass/v2/logs/aws.greengrass.SageMakerEdgeManager.log


[ Windows ]

C:\greengrass\v2\logs\aws.greengrass.SageMakerEdgeManager.log


To view this component's logs
+ Run the following command on the core device to view this component's log file in real time. Replace /greengrass/v2 or C:\greengrass\v2 with the path to the AWS IoT Greengrass root folder.

[ Linux ]

  sudo tail -f /greengrass/v2/logs/aws.greengrass.SageMakerEdgeManager.log


[ Windows (PowerShell) ]

  Get-Content C:\greengrass\v2\logs\aws.greengrass.SageMakerEdgeManager.log -Tail 10 -Wait


Changelog
The following table describes the changes in each version of the component.
|  Version  |  Changes  | 
| --- | --- | 
|  1.3.1  | Version updated for Greengrass nucleus version 2.8.0 release. | 
|  1.3.0  |  [See the AWS documentation website for more details]  | 
|  1.2.0  |  [See the AWS documentation website for more details]  | 
|  1.1.1  |  Version updated for Greengrass nucleus version 2.7.0 release.  | 
|  1.1.0  |  [See the AWS documentation website for more details]  | 
|  1.0.3  |  Version updated for Greengrass nucleus version 2.4.0 release.  | 
|  1.0.2  |  [See the AWS documentation website for more details]  | 
|  1.0.1  |  Version updated for Greengrass nucleus version 2.3.0 release.  | 
|  1.0.0  |  Initial version.  | 

sagemaker-endpoint-configuration-kms-key-configured
Checks whether AWS Key Management Service (KMS) key is configured for an Amazon SageMaker endpoint configuration. The rule is NON_COMPLIANT if 'KmsKeyId' is not specified for the Amazon SageMaker endpoint configuration. 
Identifier: SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED
Trigger type: Periodic
AWS Region: All supported AWS regions except China (Beijing), Asia Pacific (Jakarta), Africa (Cape Town), Middle East (UAE), Asia Pacific (Hyderabad), Asia Pacific (Osaka), Asia Pacific (Melbourne), Europe (Milan), AWS GovCloud (US-East), Europe (Spain), China (Ningxia), Europe (Zurich) Region
Parameters:
kmsKeyArns (Optional)Type: String
Comma-separated list of specific AWS KMS key ARNs allowed for an Amazon SageMaker endpoint configuration.
AWS CloudFormation template
To create AWS Config managed rules with AWS CloudFormation templates, see Creating AWS Config Managed Rules With AWS CloudFormation Templates.

SageMaker geospatial capabilities roles
As a managed service, Amazon SageMaker geospatial capabilities perform operations on your behalf on the AWS hardware that is managed by SageMaker. It can perform only operations that the user permits.
A user can grant these permissions with an IAM role (referred to as an execution role). 
To create and use a locally available execution role, you can use the following procedures.
Create an execution role
To work with SageMaker geospatial capabilities you need to setup a user role and an execution role. A user role is an AWS identity with permission policies that determine what the user can and can not do within AWS. An execution role is an IAM role that grants the service permission to access your AWS resources. An execution role consists of permissions and trust policy. The trust policy specifies which principals have the permission to assume the role.
Use the following procedure to create an execution role with the IAM managed policy, AmazonSageMakerGeospatialFullAccess, attached. If your use case requires more granular permissions, use other sections of this guide to create an execution role that meets your business needs.
Important
The IAM managed policy, AmazonSageMakerGeospatialFullAccess, used in the following procedure only grants the execution role permission to perform certain Amazon S3 actions on buckets or objects with SageMaker, Sagemaker, sagemaker, or aws-glue in the name. To learn how to add an additional policy to an execution role to grant it access to other Amazon S3 buckets and objects, see Add Additional Amazon S3 Permissions to a SageMaker Execution Role.
To create a new role

Open the IAM console at https://console.aws.amazon.com/iam/.
Select Roles and then select Create role.
Select SageMaker.
Select Next: Permissions.
The IAM managed policy, AmazonSageMakerGeospatialFullAccess is automatically attached to this role. To see the permissions included in this policy, select the sideways arrow next to the policy name. Select Next: Tags.
(Optional) Add tags and select Next: Review.
Give the role a name in the text field under Role name and select Create role.
In the Roles section of the IAM console, select the role you just created. If needed, use the text box to search for the role using the role name you entered in step 7.
On the role summary page, make note of the ARN.

Passing Roles
Actions like passing a role between services are a common function within SageMaker. You can find more details on Actions, Resources, and Condition Keys for SageMaker in the IAM User Guide.
You pass the role (iam:PassRole) when making these API calls: https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIgeospatialStartEarthObservationJob.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIgeospatialStartVectorEnrichmentJob.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIgeospatialExportEarthObservationJob.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIgeospatialExportVectorEnrichmentJob.html.
You attach the following trust policy to the IAM role, which grants SageMaker principal permissions to assume the role, and is the same for all of the execution roles: 

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "Service": [
                    "sagemaker-geospatial.amazonaws.com"
                ]
            },
            "Action": "sts:AssumeRole"
        }
    ]
}

The permissions that you need to grant to the role may vary depending on the API that you call. The following sections explain these permissions.
Note
Instead of managing permissions by crafting a permission policy, you can use the AWS managed AmazonSageMakerFullAccess permission policy. The permissions in this policy are fairly broad, to allow for any actions you might want to perform in SageMaker. For a listing of the policy including information about the reasons for adding many of the permissions, see AWS managed policy: AmazonSageMakerFullAccess. If you prefer to create custom policies and manage permissions to scope the permissions only to the actions you need to perform with the execution role, see the following topics.
Important
If you're running into issues, see Troubleshooting Amazon SageMaker Identity and Access.
For more information about IAM roles, see IAM Roles in the IAM User Guide.
Topics
+ Create an execution role
+ Passing Roles
+ StartEarthObservationJob API: Execution Role Permissions
+ StartVectorEnrichmentJob API: Execution Role Permissions
+ ExportEarthObservationJob API: Execution Role Permissions
+ ExportVectorEnrichmentJob API: Execution Role Permissions
StartEarthObservationJob API: Execution Role Permissions
For an execution role that you can pass in a StartEarthObservationJob API request, you can attach the following minimum permission policy to the role:
```
{
            {
                "Version": "2012-10-17",
                "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": [
                          "s3:AbortMultipartUpload",
                          "s3:PutObject",
                          "s3:GetObject",
                          "s3:ListBucketMultipartUploads"
                      ],
                      "Resource": [
                        "arn:aws:s3:::SageMaker",
                        "arn:aws:s3:::Sagemaker",
                        "arn:aws:s3:::sagemaker"
                      ]
                  },
                  {
                    "Effect": "Allow",
                    "Action": "sagemaker-geospatial:GetEarthObservationJob",
                    "Resource":  "arn:aws:sagemaker-geospatial:::earth-observation-job/*"
                  }
                ]
              }
}
```
If your input Amazon S3 bucket is encrypted using server-side encryption with an AWS KMS managed key (SSE-KMS), see Using Amazon S3 Bucket Keys for more information.
StartVectorEnrichmentJob API: Execution Role Permissions
For an execution role that you can pass in a StartVectorEnrichmentJob API request, you can attach the following minimum permission policy to the role:
```
{
            {
                "Version": "2012-10-17",
                "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": [
                          "s3:AbortMultipartUpload",
                          "s3:PutObject",
                          "s3:GetObject",
                          "s3:ListBucketMultipartUploads"
                      ],
                      "Resource": [
                        "arn:aws:s3:::SageMaker",
                        "arn:aws:s3:::Sagemaker",
                        "arn:aws:s3:::sagemaker"
                      ]
                  },
                  {
                    "Effect": "Allow",
                    "Action": "sagemaker-geospatial:GetVectorEnrichmentJob",
                    "Resource":  "arn:aws:sagemaker-geospatial:::vector-enrichment-job/*"
                  }
                ]
              }
}
```
If your input Amazon S3 bucket is encrypted using server-side encryption with an AWS KMS managed key (SSE-KMS), see Using Amazon S3 Bucket Keys for more information.
ExportEarthObservationJob API: Execution Role Permissions
For an execution role that you can pass in a ExportEarthObservationJob API request, you can attach the following minimum permission policy to the role:
```
{
            {
                "Version": "2012-10-17",
                "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": [
                          "s3:AbortMultipartUpload",
                          "s3:PutObject",
                          "s3:GetObject",
                          "s3:ListBucketMultipartUploads"
                      ],
                      "Resource": [
                        "arn:aws:s3:::SageMaker",
                        "arn:aws:s3:::Sagemaker",
                        "arn:aws:s3:::sagemaker"
                      ]
                  },
                  {
                    "Effect": "Allow",
                    "Action": "sagemaker-geospatial:GetEarthObservationJob",
                    "Resource":  "arn:aws:sagemaker-geospatial:::earth-observation-job/*"
                  }
                ]
              }
}
```
If your input Amazon S3 bucket is encrypted using server-side encryption with an AWS KMS managed key (SSE-KMS), see Using Amazon S3 Bucket Keys for more information.
ExportVectorEnrichmentJob API: Execution Role Permissions
For an execution role that you can pass in a ExportVectorEnrichmentJob API request, you can attach the following minimum permission policy to the role:
```
{
            {
                "Version": "2012-10-17",
                "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": [
                          "s3:AbortMultipartUpload",
                          "s3:PutObject",
                          "s3:GetObject",
                          "s3:ListBucketMultipartUploads"
                      ],
                      "Resource": [
                        "arn:aws:s3:::SageMaker",
                        "arn:aws:s3:::Sagemaker",
                        "arn:aws:s3:::sagemaker"
                      ]
                  },
                  {
                    "Effect": "Allow",
                    "Action": "sagemaker-geospatial:GetVectorEnrichmentJob",
                    "Resource":  "arn:aws:sagemaker-geospatial:::vector-enrichment-job/*"
                  }
                ]
              }
}
```
If your input Amazon S3 bucket is encrypted using server-side encryption with an AWS KMS managed key (SSE-KMS), see Using Amazon S3 Bucket Keys for more information.

Amazon SageMaker
These example templates show how AWS Step Functions generates IAM policies based on the resources in your state machine definition. For more information, see:
+ IAM Policies for integrated services
+ Service Integration Patterns
Note
For these examples, [[roleArn]] refers to the Amazon Resource Name (ARN) of the IAM role that SageMaker uses to access model artifacts and docker images for deployment on ML compute instances, or for batch transform jobs. For more information, see Amazon SageMaker Roles.
Topics
+ CreateTrainingJob
+ CreateTransformJob
CreateTrainingJob
Static resources

[ Run a Job (.sync) ]

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:CreateTrainingJob",
        "sagemaker:DescribeTrainingJob",
        "sagemaker:StopTrainingJob"
      ],
      "Resource": [
        "arn:aws:sagemaker:[[region]]:[[accountId]]:training-job/[[trainingJobName]]*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:ListTags"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:PassRole"
      ],
      "Resource": [
        "[[roleArn]]"
      ],
      "Condition": {
        "StringEquals": {
          "iam:PassedToService": "sagemaker.amazonaws.com"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "events:PutTargets",
        "events:PutRule",
        "events:DescribeRule"
      ],
      "Resource": [
        "arn:aws:events:[[region]]:[[accountId]]:rule/StepFunctionsGetEventsForSageMakerTrainingJobsRule"
      ]
    }
  ]
}


[ Request Response and Callback (.waitForTaskToken) ]

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:CreateTrainingJob"
      ],
      "Resource": [
        "arn:aws:sagemaker:[[region]]:[[accountId]]:training-job/[[trainingJobName]]*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:ListTags"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:PassRole"
      ],
      "Resource": [
        "[[roleArn]]"
      ],
      "Condition": {
        "StringEquals": {
          "iam:PassedToService": "sagemaker.amazonaws.com"
        }
      }
    }
  ]
}


Dynamic resources

[ .sync or .waitForTaskToken ]

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:CreateTrainingJob",
        "sagemaker:DescribeTrainingJob",
        "sagemaker:StopTrainingJob"
      ],
      "Resource": [
        "arn:aws:sagemaker:[[region]]:[[accountId]]:training-job/*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:ListTags"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:PassRole"
      ],
      "Resource": [
        "[[roleArn]]"
      ],
      "Condition": {
        "StringEquals": {
          "iam:PassedToService": "sagemaker.amazonaws.com"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "events:PutTargets",
        "events:PutRule",
        "events:DescribeRule"
      ],
      "Resource": [
        "arn:aws:events:[[region]]:[[accountId]]:rule/StepFunctionsGetEventsForSageMakerTrainingJobsRule"
      ]
    }
  ]
}


[ Request Response and Callback (.waitForTaskToken) ]

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:CreateTrainingJob"
      ],
      "Resource": [
        "arn:aws:sagemaker:[[region]]:[[accountId]]:training-job/*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:ListTags"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:PassRole"
      ],
      "Resource": [
        "[[roleArn]]"
      ],
      "Condition": {
        "StringEquals": {
          "iam:PassedToService": "sagemaker.amazonaws.com"
        }
      }
    }
  ]
}


CreateTransformJob
Note
AWS Step Functions will not automatically create a policy for CreateTransformJob when you create a state machine that integrates with SageMaker. You must attach an inline policy to the created role based on one of the following IAM examples.
Static resources

[ Run a Job (.sync) ]

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:CreateTransformJob",
        "sagemaker:DescribeTransformJob",
        "sagemaker:StopTransformJob"
      ],
      "Resource": [
        "arn:aws:sagemaker:[[region]]:[[accountId]]:transform-job/[[transformJobName]]*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:ListTags"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:PassRole"
      ],
      "Resource": [
        "[[roleArn]]"
      ],
      "Condition": {
        "StringEquals": {
          "iam:PassedToService": "sagemaker.amazonaws.com"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "events:PutTargets",
        "events:PutRule",
        "events:DescribeRule"
      ],
      "Resource": [
        "arn:aws:events:[[region]]:[[accountId]]:rule/StepFunctionsGetEventsForSageMakerTransformJobsRule"
      ]
    }
  ]
}


[ Request Response and Callback (.waitForTaskToken) ]

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:CreateTransformJob"
      ],
      "Resource": [
        "arn:aws:sagemaker:[[region]]:[[accountId]]:transform-job/[[transformJobName]]*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:ListTags"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:PassRole"
      ],
      "Resource": [
        "[[roleArn]]"
      ],
      "Condition": {
        "StringEquals": {
          "iam:PassedToService": "sagemaker.amazonaws.com"
        }
      }
    }
  ]
}


Dynamic resources

[ Run a Job (.sync) ]

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:CreateTransformJob",
        "sagemaker:DescribeTransformJob",
        "sagemaker:StopTransformJob"
      ],
      "Resource": [
        "arn:aws:sagemaker:[[region]]:[[accountId]]:transform-job/*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:ListTags"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:PassRole"
      ],
      "Resource": [
        "[[roleArn]]"
      ],
      "Condition": {
        "StringEquals": {
          "iam:PassedToService": "sagemaker.amazonaws.com"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "events:PutTargets",
        "events:PutRule",
        "events:DescribeRule"
      ],
      "Resource": [
        "arn:aws:events:[[region]]:[[accountId]]:rule/StepFunctionsGetEventsForSageMakerTransformJobsRule"
      ]
    }
  ]
}


[ Request Response and Callback (.waitForTaskToken) ]

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:CreateTransformJob"
      ],
      "Resource": [
        "arn:aws:sagemaker:[[region]]:[[accountId]]:transform-job/*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "sagemaker:ListTags"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:PassRole"
      ],
      "Resource": [
        "[[roleArn]]"
      ],
      "Condition": {
        "StringEquals": {
          "iam:PassedToService": "sagemaker.amazonaws.com"
        }
      }
    }
  ]
}



Logging and Monitoring
You can monitor Amazon SageMaker using Amazon CloudWatch, which collects raw data and processes it into readable, near real-time metrics. These statistics are kept for 15 months, so that you can access historical information and gain a better perspective on how your web application or service is performing. You can also set alarms that watch for certain thresholds and send notifications or take actions when those thresholds are met. For more information, see Monitor Amazon SageMaker with Amazon CloudWatch.
Amazon CloudWatch Logs enables you to monitor, store, and access your log files from Amazon EC2 instances, AWS CloudTrail, and other sources. You can collect and track metrics, create customized dashboards, and set alarms that notify you or take actions when a specified metric reaches a threshold that you specify. CloudWatch Logs can monitor information in the log files and notify you when certain thresholds are met. You can also archive your log data in highly durable storage. For more information, see Log Amazon SageMaker Events with Amazon CloudWatch.
AWS CloudTrail provides a record of actions taken by a user, role, or an AWS service in SageMaker. Using the information collected by CloudTrail, you can determine the request that was made to SageMaker, the IP address from which the request was made, who made the request, when it was made, and additional details. For more information, Log Amazon SageMaker API Calls with AWS CloudTrail.
Note
CloudTrail does not monitor calls to https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIruntimeInvokeEndpoint.html.
You can create rules in Amazon CloudWatch Events to react to status changes in status in a SageMaker training, hyperperparameter tuning, or batch transform job. For more information, see Automating Amazon SageMaker with Amazon EventBridge.

Develop Algorithms and Models in Amazon SageMaker
Before you can create algorithm and model package resources to use in Amazon SageMaker or list on AWS Marketplace, you have to develop them and package them in Docker containers.
Note
When algorithms and model packages are created for listing on AWS Marketplace, SageMaker scans the containers for security vulnerabilities on supported operating systems.
Only the following operating system versions are supported:
Debian: 6.0, 7, 8, 9, 10
Ubuntu: 12.04, 12.10, 13.04, 14.04, 14.10, 15.04, 15.10, 16.04, 16.10, 17.04, 17.10, 18.04, 18.10
CentOS: 5, 6, 7
Oracle Linux: 5, 6, 7
Alpine: 3.3, 3.4, 3.5
Amazon Linux
Topics
+ Develop Algorithms in SageMaker
+ Develop Models in SageMaker
Develop Algorithms in SageMaker
An algorithm should be packaged as a docker container and stored in Amazon ECR to use it in SageMaker. The Docker container contains the training code used to run training jobs and, optionally, the inference code used to get inferences from models trained by using the algorithm.
For information about developing algorithms in SageMaker and packaging them as containers, see Using Docker containers with SageMaker. For a complete example of how to create an algorithm container, see the sample notebook at https://sagemaker-examples.readthedocs.io/en/latest/advanced_functionality/scikit_bring_your_own/scikit_bring_your_own.html. You can also find the sample notebook in a SageMaker notebook instance. The notebook is in the Advanced Functionality section, and is named scikit_bring_your_own.ipynb. For information about using the sample notebooks in a notebook instance, see Example Notebooks.
Always thoroughly test your algorithms before you create algorithm resources to publish on AWS Marketplace.
Note
When a buyer subscribes to your containerized product, the Docker containers run in an isolated (internet-free) environment. When you create your containers, do not rely on making outgoing calls over the internet. Calls to AWS services are also not allowed.
Develop Models in SageMaker
A deployable model in SageMaker consists of inference code, model artifacts, an IAM role that is used to access resources, and other information required to deploy the model in SageMaker. Model artifacts are the results of training a model by using a machine learning algorithm. The inference code must be packaged in a Docker container and stored in Amazon ECR. You can either package the model artifacts in the same container as the inference code, or store them in Amazon S3. 
You create a model by running a training job in SageMaker, or by training a machine learning algorithm outside of SageMaker. If you run a training job in SageMaker, the resulting model artifacts are available in the ModelArtifacts field in the response to a call to the DescribeTrainingJob operation. For information about how to develop a SageMaker model container, see Use your own inference code. For a complete example of how to create a model container from a model trained outside of SageMaker, see the sample notebook at https://sagemaker-examples.readthedocs.io/en/latest/advanced_functionality/xgboost_bring_your_own_model/xgboost_bring_your_own_model.html. You can also find the sample notebook in a SageMaker notebook instance. The notebook is in the Advanced Functionality section, and is named xgboost_bring_your_own_model.ipynb. For information about using the sample notebooks in a notebook instance, see Example Notebooks.
Always thoroughly test your models before you create model packages to publish on AWS Marketplace.
Note
When a buyer subscribes to your containerized product, the Docker containers run in an isolated (internet-free) environment. When you create your containers, do not rely on making outgoing calls over the internet. Calls to AWS services are also not allowed.

Sell Amazon SageMaker Algorithms and Model Packages
Selling Amazon SageMaker algorithms and model packages is a three-step process:

Develop your algorithm or model, and package it in a Docker container. For information, see Develop Algorithms and Models in Amazon SageMaker.
Create an algorithm or model package resource in SageMaker. For information, see Create Algorithm and Model Package Resources.
Register as a seller on AWS Marketplace and list your algorithm or model package on AWS Marketplace. For information about registering as a seller, see Getting Started as a Seller in the User Guide for AWS Marketplace Providers. For information about listing and monetizing your algorithms and model packages, see Listing Algorithms and Model Packages in AWS Marketplace for Machine Learning in the User Guide for AWS Marketplace Providers.


Topics

Develop Algorithms and Models in Amazon SageMaker
Create Algorithm and Model Package Resources
List Your Algorithm or Model Package on AWS Marketplace


Buy and Sell Amazon SageMaker Algorithms and Models in AWS Marketplace
Amazon SageMaker integrates with AWS Marketplace, enabling developers to charge other SageMaker users for the use of their algorithms and model packages. AWS Marketplace is a curated digital catalog that makes it easy for customers to find, buy, deploy, and manage third-party software and services that customers need to build solutions and run their businesses. AWS Marketplace includes thousands of software listings in popular categories, such as security, networking, storage, machine learning, business intelligence, database, and DevOps. It simplifies software licensing and procurement with flexible pricing options and multiple deployment methods. 
For information, see AWS Marketplace Documentation.
Topics

SageMaker Algorithms
SageMaker Model Packages
Sell Amazon SageMaker Algorithms and Model Packages
Find and Subscribe to Algorithms and Model Packages on AWS Marketplace
Use Algorithm and Model Package Resources

SageMaker Algorithms
An algorithm enables you to perform end-to-end machine learning. It has two logical components: training and inference. Buyers can use the training component to create training jobs in SageMaker and build a machine learning model. SageMaker saves the model artifacts generated by the algorithm during training to an Amazon S3 bucket. For more information, see Train a Model with Amazon SageMaker.
Buyers use the inference component with the model artifacts generated during a training job to create a deployable model in their SageMaker account. They can use the deployable model for real-time inference by using SageMaker hosting services. Or, they can get inferences for an entire dataset by running batch transform jobs. For more information, see Deploy a Model in Amazon SageMaker.
SageMaker Model Packages
Buyers use a model package to build a deployable model in SageMaker. They can use the deployable model for real-time inference by using SageMaker hosting services. Or, they can get inferences for an entire dataset by running batch transform jobs. For more information, see Deploy a Model in Amazon SageMaker. As a seller, you can build your model artifacts by training in SageMaker, or you can use your own model artifacts from a model that you trained outside of SageMaker. You can charge buyers for inference.
Topics

Use an Algorithm to Run a Training Job
You can create use an algorithm resource to create a training job by using the Amazon SageMaker console, the low-level Amazon SageMaker API, or the Amazon SageMaker Python SDK.
Topics
+ Use an Algorithm to Run a Training Job (Console)
+ Use an Algorithm to Run a Training Job (API)
+ Use an Algorithm to Run a Training Job ([Amazon SageMaker Python SDK](https://sagemaker.readthedocs.io))
Use an Algorithm to Run a Training Job (Console)
To use an algorithm to run a training job (console)

Open the SageMaker console at https://console.aws.amazon.com/sagemaker/.
Choose Algorithms.
Choose an algorithm that you created from the list on the My algorithms tab or choose an algorithm that you subscribed to on the AWS Marketplace subscriptions tab.
Choose Create training job.
The algorithm you chose will automatically be selected.
On the Create training job page, provide the following information:

For Job name, type a name for the training job.
For IAM role, choose an IAM role that has the required permissions to run training jobs in SageMaker, or choose Create a new role to allow SageMaker to create a role that has the AmazonSageMakerFullAccess managed policy attached. For information, see SageMaker Roles.
For Resource configuration, provide the following information:

For Instance type, choose the instance type to use for training.
For Instance count, type the number of ML instances to use for the training job.
For Additional volume per instance (GB), type the size of the ML storage volume that you want to provision. ML storage volumes store model artifacts and incremental states.
For Encryption key, if you want Amazon SageMaker to use an AWS Key Management Service key to encrypt data in the ML storage volume attached to the training instance, specify the key.
For Stopping condition, specify the maximum amount of time in seconds, minutes, hours, or days, that you want the training job to run.

For VPC, choose a Amazon VPC that you want to allow your training container to access. For more information, see Give SageMaker Training Jobs Access to Resources in Your Amazon VPC.
For Hyperparameters, specify the values of the hyperparameters to use for the training job.
For Input data configuration, specify the following values for each channel of input data to use for the training job. You can see what channels the algorithm you're using for training support, and the content type, supported compression type, and supported input modes for each channel, under Channel specification section of the Algorithm summary page for the algorithm.

For Channel name, type the name of the input channel.
For Content type, type the content type of the data that the algorithm expects for the channel.
For Compression type, choose the data compression type to use, if any.
For Record wrapper, choose RecordIO if the algorithm expects data in the RecordIO format.
For S3 data type, S3 data distribution type, and S3 location, specify the appropriate values. For information about what these values mean, see https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_S3DataSource.html.
For Input mode, choose File to download the data from to the provisioned ML storage volume, and mount the directory to a Docker volume. Choose PipeTo stream data directly from Amazon S3 to the container.
To add another input channel, choose Add channel. If you are finished adding input channels, choose Done.

For Output location, specify the following values:

For S3 output path, choose the S3 location where the training job stores output, such as model artifacts.
Note
You use the model artifacts stored at this location to create a model or model package from this training job.
For Encryption key, if you want SageMaker to use a AWS KMS key to encrypt output data at rest in the S3 location.

For Tags, specify one or more tags to manage the training job. Each tag consists of a key and an optional value. Tag keys must be unique per resource.
Choose Create training job to run the training job.


Use an Algorithm to Run a Training Job (API)
To use an algorithm to run a training job by using the SageMaker API, specify either the name or the Amazon Resource Name (ARN) as the AlgorithmName field of the https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIAlgorithmSpecification.html object that you pass to https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateTrainingJob.html. For information about training models in SageMaker, see Train a Model with Amazon SageMaker.
Use an Algorithm to Run a Training Job (Amazon SageMaker Python SDK)
Use an algorithm that you created or subscribed to on AWS Marketplace to create a training job, create an AlgorithmEstimator object and specify either the Amazon Resource Name (ARN) or the name of the algorithm as the value of the algorithm_arn argument. Then call the fit method of the estimator. For example:
```
from sagemaker import AlgorithmEstimator
datapath = os.path.join(DATADIR, 'marketplace', 'training')
algo = AlgorithmEstimator(
algorithmarn='arn:aws:sagemaker:us-east-2:012345678901:algorithm/my-algorithm',
        role='SageMakerRole',
        instancecount=1,
        instancetype='ml.c4.xlarge',
        sagemakersession=sagemakersession,
        basejob_name='test-marketplace')
traininput = algo.sagemakersession.uploaddata(
path=datapath, key_prefix='integ-test-data/marketplace/train')
algo.fit({'training': train_input})
```

Use an Algorithm to Run a Hyperparameter Tuning Job
A hyperparameter tuning job finds the best version of a model by running many training jobs on your dataset using the algorithm and ranges of hyperparameters that you specify. It then chooses the hyperparameter values that result in a model that performs the best, as measured by a metric that you choose. For more information, see Perform Automatic Model Tuning with SageMaker.
You can create use an algorithm resource to create a hyperparameter tuning job by using the Amazon SageMaker console, the low-level Amazon SageMaker API, or the Amazon SageMaker Python SDK.
Topics
+ Use an Algorithm to Run a Hyperparameter Tuning Job (Console)
+ Use an Algorithm to Run a Hyperparameter Tuning Job (API)
+ Use an Algorithm to Run a Hyperparameter Tuning Job ([Amazon SageMaker Python SDK](https://sagemaker.readthedocs.io))
Use an Algorithm to Run a Hyperparameter Tuning Job (Console)
To use an algorithm to run a hyperparameter tuning job (console)

Open the SageMaker console at https://console.aws.amazon.com/sagemaker/.
Choose Algorithms.
Choose an algorithm that you created from the list on the My algorithms tab or choose an algorithm that you subscribed to on the AWS Marketplace subscriptions tab.
Choose Create hyperparameter tuning job.
The algorithm you chose will automatically be selected.
On the Create hyperparameter tuning job page, provide the following information:

For Warm start, choose Enable warm start to use the information from previous hyperparameter tuning jobs as a starting point for this hyperparameter tuning job. For more information, see Run a Warm Start Hyperparameter Tuning Job.

Choose Identical data and algorithm if your input data is the same as the input data for the parent jobs of this hyperparameter tuning job, or choose Transfer learning to use additional or different input data for this hyperparameter tuning job.
For Parent hyperparameter tuning job(s), choose up to 5 hyperparameter tuning jobs to use as parents to this hyperparameter tuning job.

For Hyperparameter tuning job name, type a name for the tuning job.
For IAM role, choose an IAM role that has the required permissions to run hyperparameter tuning jobs in SageMaker, or choose Create a new role to allow SageMaker to create a role that has the AmazonSageMakerFullAccess managed policy attached. For information, see SageMaker Roles.
For VPC, choose a Amazon VPC that you want to allow the training jobs that the tuning job launches to access. For more information, see Give SageMaker Training Jobs Access to Resources in Your Amazon VPC.
Choose Next.
For Objective metric, choose the metric that the hyperparameter tuning job uses to determine the best combination of hyperparameters, and choose whether to minimize or maximize this metric. For more information, see View the Best Training Job.
For Hyperparameter configuration, choose ranges for the tunable hyperparameters that you want the tuning job to search, and set static values for hyperparameters that you want to remain constant in all training jobs that the hyperparameter tuning job launches. For more information, see Define Hyperparameter Ranges.
Choose Next.
For Input data configuration, specify the following values for each channel of input data to use for the hyperparameter tuning job. You can see what channels the algorithm you're using for hyperparameter tuning supports, and the content type, supported compression type, and supported input modes for each channel, under Channel specification section of the Algorithm summary page for the algorithm.

For Channel name, type the name of the input channel.
For Content type, type the content type of the data that the algorithm expects for the channel.
For Compression type, choose the data compression type to use, if any.
For Record wrapper, choose RecordIO if the algorithm expects data in the RecordIO format.
For S3 data type, S3 data distribution type, and S3 location, specify the appropriate values. For information about what these values mean, see https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_S3DataSource.html.
For Input mode, choose File to download the data from to the provisioned ML storage volume, and mount the directory to a Docker volume. Choose PipeTo stream data directly from Amazon S3 to the container.
To add another input channel, choose Add channel. If you are finished adding input channels, choose Done.

For Output location, specify the following values:

For S3 output path, choose the S3 location where the training jobs that this hyperparameter tuning job launches store output, such as model artifacts.
Note
You use the model artifacts stored at this location to create a model or model package from this hyperparameter tuning job.
For Encryption key, if you want SageMaker to use a AWS KMS key to encrypt output data at rest in the S3 location.

For Resource configuration, provide the following information:

For Instance type, choose the instance type to use for each training job that the hyperparameter tuning job launches.
For Instance count, type the number of ML instances to use for each training job that the hyperparameter tuning job launches.
For Additional volume per instance (GB), type the size of the ML storage volume that you want to provision each training job that the hyperparameter tuning job launches. ML storage volumes store model artifacts and incremental states.
For Encryption key, if you want Amazon SageMaker to use an AWS Key Management Service key to encrypt data in the ML storage volume attached to the training instances, specify the key.

For Resource limits, provide the following information:

For Maximum training jobs, specify the maximum number of training jobs that you want the hyperparameter tuning job to launch. A hyperparameter tuning job can launch a maximum of 500 training jobs.
For Maximum parallel training jobs, specify the maximum number of concurrent training jobs that the hyperparameter tuning job can launch. A hyperparameter tuning job can launch a maximum of 10 concurrent training jobs.
For Stopping condition, specify the maximum amount of time in seconds, minutes, hours, or days, that you want each training job that the hyperparameter tuning job launches to run.

For Tags, specify one or more tags to manage the hyperparameter tuning job. Each tag consists of a key and an optional value. Tag keys must be unique per resource.
Choose Create jobs to run the hyperparameter tuning job.


Use an Algorithm to Run a Hyperparameter Tuning Job (API)
To use an algorithm to run a hyperparameter tuning job by using the SageMaker API, specify either the name or the Amazon Resource Name (ARN) of the algorithm as the AlgorithmName field of the https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIAlgorithmSpecification.html object that you pass to https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateHyperParameterTuningJob.html. For information about hyperparameter tuning in SageMaker, see Perform Automatic Model Tuning with SageMaker.
Use an Algorithm to Run a Hyperparameter Tuning Job (Amazon SageMaker Python SDK)
Use an algorithm that you created or subscribed to on AWS Marketplace to create a hyperparameter tuning job, create an AlgorithmEstimator object and specify either the Amazon Resource Name (ARN) or the name of the algorithm as the value of the algorithm_arn argument. Then initialize a HyperparameterTuner object with the AlgorithmEstimator you created as the value of the estimator argument. Finally, call the fit method of the AlgorithmEstimator. For example:
```
from sagemaker import AlgorithmEstimator
from sagemaker.tuner import HyperparameterTuner
datapath = os.path.join(DATADIR, 'marketplace', 'training')
algo = AlgorithmEstimator(
            algorithmarn='arn:aws:sagemaker:us-east-2:764419575721:algorithm/scikit-decision-trees-1542410022',
            role='SageMakerRole',
            instancecount=1,
            instancetype='ml.c4.xlarge',
            sagemakersession=sagemakersession,
            basejob_name='test-marketplace')
traininput = algo.sagemakersession.uploaddata(
    path=datapath, key_prefix='integ-test-data/marketplace/train')
algo.sethyperparameters(maxleafnodes=10)
tuner = HyperparameterTuner(estimator=algo, basetuningjobname='some-name',
                                objectivemetricname='validation:accuracy',
                                hyperparameterranges=hyperparameterranges,
                                maxjobs=2, maxparallel_jobs=2)
tuner.fit({'training': traininput}, includecls_metadata=False)
tuner.wait()
```

Use Algorithm and Model Package Resources
You can create algorithms and model packages as resources in your Amazon SageMaker account, and you can find and subscribe to algorithms and model packages on AWS Marketplace.
Use algorithms to:
+ Run training jobs. For information, see Use an Algorithm to Run a Training Job.
+ Run hyperparameter tuning jobs. For information, see Use an Algorithm to Run a Hyperparameter Tuning Job.
+ Create model packages. After you use an algorithm resource to run a training job or a hyperparameter tuning job, you can use the model artifacts that these jobs output along with the algorithm to create a model package. For information, see Create a Model Package Resource.
Note
If you subscribe to an algorithm on AWS Marketplace, you must create a model package before you can use it to get inferences by creating hosted endpoint or running a batch transform job.

Use model packages to:
+ Create models that you can use to get real-time inference or run batch transform jobs. For information, see Use a Model Package to Create a Model.
+ Create hosted endpoints to get real-time inference. For information, see Deploy the Model to SageMaker Hosting Services.
+ Create batch transform jobs. For information, see (Optional) Make Prediction with Batch Transform.
Topics
+ Use an Algorithm to Run a Training Job
+ Use an Algorithm to Run a Hyperparameter Tuning Job
+ Use a Model Package to Create a Model

Create an Algorithm Resource
To create an algorithm resource that you can use to run training jobs in Amazon SageMaker and publish on AWS Marketplace specify the following information:
+ The Docker containers that contains the training and, optionally, inference code.
+ The configuration of the input data that your algorithm expects for training.
+ The hyperparameters that your algorithm supports.
+ Metrics that your algorithm sends to Amazon CloudWatch during training jobs.
+ The instance types that your algorithm supports for training and inference, and whether it supports distributed training across multiple instances.
+ Validation profiles, which are training jobs that SageMaker uses to test your algorithm's training code and batch transform jobs that SageMaker runs to test your algorithm's inference code.
To ensure that buyers and sellers can be confident that products work in SageMaker, we require that you validate your algorithms before listing them on AWS Marketplace. You can list products in the AWS Marketplace only if validation succeeds. To validate your algorithms, SageMaker uses your validation profile and sample data to run the following validations tasks:

Create a training job in your account to verify that your training image works with SageMaker.
If you included inference code in your algorithm, create a model in your account using the algorithm's inference image and the model artifacts produced by the training job.
If you included inference code in your algorithm, create a transform job in your account using the model to verify that your inference image works with SageMaker.
When you list your product on AWS Marketplace, the inputs and outputs of this validation process persist as part of your product and are made available to your buyers. This helps buyers understand and evaluate the product before they buy it. For example, buyers can inspect the input data that you used, the outputs generated, and the logs and metrics emitted by your code. The more comprehensive your validation specification, the easier it is for customers to evaluate your product.
Note
In your validation profile, provide only data that you want to expose publicly.
Validation can take up to a few hours. To see the status of the jobs in your account, in the SageMaker console, see the Training jobs and Transform jobs pages. If validation fails, you can access the scan and validation reports from the SageMaker console. If any issues are found, you will have to create the algorithm again.
Note
To publish your algorithm on AWS Marketplace, at least one validation profile is required.

You can create an algorithm by using either the SageMaker console or the SageMaker API.
Topics
+ Create an Algorithm Resource (Console)
+ Create an Algorithm Resource (API)
Create an Algorithm Resource (Console)
To create an algorithm resource (console)

Open the SageMaker console at https://console.aws.amazon.com/sagemaker/.
From the left menu, choose Training.
From the dropdown menu, choose Algorithms, then choose Create algorithm.
On the Training specifications page, provide the following information:

For Algorithm name, type a name for your algorithm. The algorithm name must be unique in your account and in the AWS region. The name must have 1 to 64 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).
Type a description for your algorithm. This description appears in the SageMaker console and in the AWS Marketplace.
For Training image, type the path in Amazon ECR where your training container is stored.
For Support distributed training, Choose Yes if your algorithm supports training on multiple instances. Otherwise, choose No.
For Support instance types for training, choose the instance types that your algorithm supports.
For Channel specification, specify up to 8 channels of input data for your algorithm. For example, you might specify 3 input channels named train, validation, and test. For each channel, specify the following information:

For Channel name, type a name for the channel. The name must have 1 to 64 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).
To require the channel for your algorithm, choose Channel required.
Type a description for the channel.
For Supported input modes, choose Pipe mode if your algorithm supports streaming the input data, and File mode if your algorithm supports downloading the input data as a file. You can choose both.
For Supported content types, type the MIME type that your algorithm expects for input data.
For Supported compression type, choose Gzip if your algorithm supports Gzip compression. Otherwise, choose None.
Choose Add channel to add another data input channel, or choose Next if you are done adding channels.


On the Tuning specifications page, provide the following information:

For Hyperparameter specification, specify the hyperparameters that your algorithm supports by editing the JSON object. For each hyperparameter that your algorithm supports, construct a JSON block similar to the following:

{
"DefaultValue": "5",
"Description": "The first hyperparameter",
"IsRequired": true,
"IsTunable": false,
"Name": "intRange",
"Range": {
"IntegerParameterRangeSpecification": {
"MaxValue": "10",
"MinValue": "1"
},
"Type": "Integer"
}

In the JSON, supply the following:

For DefaultValue, specify a default value for the hyperparameter, if there is one.
For Description, specify a description for the hyperparameter.
For IsRequired, specify whether the hyperparameter is required.
For IsTunable, specify true if this hyperparameter can be tuned when a user runs a hyperparameter tuning job that uses this algorithm. For information, see Perform Automatic Model Tuning with SageMaker.
For Name, specify a name for the hyperparameter.
For Range, specify one of the following:

IntegerParameterRangeSpecification - the values of the hyperparameter are integers. Specify minimum and maximum values for the hyperparameter.


ContinuousParameterRangeSpecification - the values of the hyperparameter are floating-point values. Specify minimum and maximum values for the hyperparameter.

CategoricalParameterRangeSpecification - the values of the hyperparameter are categorical values. Specify a list of all of the possible values.

For Type, specify Integer, Continuous, or Categorical. The value must correspond to the type of Range that you specified.

For Metric definitions, specify any training metrics that you want your algorithm to emit. SageMaker uses the regular expression that you specify to find the metrics by parsing the logs from your training container during training. Users can view these metrics when they run training jobs with your algorithm, and they can monitor and plot the metrics in Amazon CloudWatch. For information, see Monitor and Analyze Training Jobs Using Amazon CloudWatch Metrics. For each metric, provide the following information:

For Metric name, type a name for the metric.
For Regex, type the regular expression that SageMaker uses to parse training logs so that it can find the metric value.
For Objective metric support choose Yes if this metric can be used as the objective metric for a hyperparameter tuning job. For information, see Perform Automatic Model Tuning with SageMaker.
Choose Add metric to add another metric, or choose Next if you are done adding metrics.


On the Inference specifications page, provide the following information if your algorithm supports inference:

For Location of inference image, type the path in Amazon ECR where your inference container is stored.
For Container DNS host name, type the name of a DNS host for your image.
For Supported instance types for real-time inference, choose the instance types that your algorithm supports for models deployed as hosted endpoints in SageMaker. For information, see Deploy Models for Inference.
For Supported instance types for batch transform jobs, choose the instance types that your algorithm supports for batch transform jobs. For information, see Use Batch Transform.
For Supported content types, type the type of input data that your algorithm expects for inference requests.
For Supported response MIME types, type the MIME types that your algorithm supports for inference responses.
Choose Next.

On the Validation specifications page, provide the following information:

For Publish this algorithm on AWS Marketplace, choose Yes to publish the algorithm on AWS Marketplace.
For Validate this resource, choose Yes if you want SageMaker to run training jobs and/or batch transform jobs that you specify to test the training and/or inference code of your algorithm.
Note
To publish your algorithm on AWS Marketplace, your algorithm must be validated.
For IAM role, choose an IAM role that has the required permissions to run training jobs and batch transform jobs in SageMaker, or choose Create a new role to allow SageMaker to create a role that has the AmazonSageMakerFullAccess managed policy attached. For information, see SageMaker Roles.
For Validation profile, specify the following:

A name for the validation profile.
A Training job definition. This is a JSON block that describes a training job. This is in the same format as the https://docs.aws.amazon.com/sagemaker/latest/APIReference/APITrainingJobDefinition.html input parameter of the https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateAlgorithm.html API.
A Transform job definition. This is a JSON block that describes a batch transform job. This is in the same format as the https://docs.aws.amazon.com/sagemaker/latest/APIReference/APITransformJobDefinition.html input parameter of the https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateAlgorithm.html API.

Choose Create algorithm.


Create an Algorithm Resource (API)
To create an algorithm resource by using the SageMaker API, call the https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateAlgorithm.html API. 

Create a Model Package Resource
To create a model package resource that you can use to create deployable models in Amazon SageMaker and publish on AWS Marketplace specify the following information:
+ The Docker container that contains the inference code, or the algorithm resource that was used to train the model.
+ The location of the model artifacts. Model artifacts can either be packaged in the same Docker container as the inference code or stored in Amazon S3.
+ The instance types that your model package supports for both real-time inference and batch transform jobs.
+ Validation profiles, which are batch transform jobs that SageMaker runs to test your model package's inference code.
Before listing model packages on AWS Marketplace, you must validate them. This ensures that buyers and sellers can be confident that products work in Amazon SageMaker. You can list products on AWS Marketplace only if validation succeeds. 
The validation procedure uses your validation profile and sample data to run the following validations tasks:

Create a model in your account using the model package's inference image and the optional model artifacts that are stored in Amazon S3.
Note
A model package is specific to the region in which you create it. The S3 bucket where the model artifacts are stored must be in the same region where your created the model package.
Create a transform job in your account using the model to verify that your inference image works with SageMaker.
Create a validation profile.
Note
In your validation profile, provide only data that you want to expose publicly.
Validation can take up to a few hours. To see the status of the jobs in your account, in the SageMaker console, see the Transform jobs pages. If validation fails, you can access the scan and validation reports from the SageMaker console. After fixing issues, recreate the algorithm. When the status of the algorithm is COMPLETED, find it in the SageMaker console and start the listing process
Note
To publish your model package on AWS Marketplace, at least one validation profile is required.

You can create an model package either by using the SageMaker console or by using the SageMaker API.
Topics
+ Create a Model Package Resource (Console)
+ Create a Model Package Resource (API)
Create a Model Package Resource (Console)
To create a model package in the SageMaker console:

Open the SageMaker console at https://console.aws.amazon.com/sagemaker/.
From the left menu, choose Inference.
Choose Marketplace model packages, then choose Create marketplace model package.
On the Inference specifications page, provide the following information:

For Model package name, type a name for your model package. The model package name must be unique in your account and in the AWS region. The name must have 1 to 64 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).
Type a description for your model package. This description appears in the SageMaker console and in the AWS Marketplace.
For Inference specification options, choose Provide the location of the inference image and model artifacts to create a model package by using an inference container and model artifacts. Choose Provide the algorithm used for training and its model artifacts to create a model package from an algorithm resource that you created or subscribe to from AWS Marketplace.
If you chose Provide the location of the inference image and model artifacts for Inference specification options, provide the following information for Container definition and Supported resources:

For Location of inference image, type the path to the image that contains your inference code. The image must be stored as a Docker container in Amazon ECR.
For Location of model data artifacts, type the location in S3 where your model artifacts are stored.
For *Container DNS host name *, type the name of the DNS host to use for your container.
For Supported instance types for real-time inference, choose the instance types that your model package supports for real-time inference from SageMaker hosted endpoints.
For Supported instance types for batch transform jobs, choose the instance types that your model package supports for batch transform jobs.
Supported content types, type the content types that your model package expects for inference requests.
For Supported response MIME types, type the MIME types that your model package uses to provide inferences.

If you chose Provide the algorithm used for training and its model artifacts for Inference specification options, provide the following information:

For Algorithm ARN, type the Amazon Resource Name (ARN) of the algorithm resource to use to create the model package.
For Location of model data artifacts, type the location in S3 where your model artifacts are stored.

Choose Next.

On the Validation and scanning page, provide the following information:

For Publish this model package on AWS Marketplace, choose Yes to publish the model package on AWS Marketplace.
For Validate this resource, choose Yes if you want SageMaker to run batch transform jobs that you specify to test the inference code of your model package.
Note
To publish your model package on AWS Marketplace, your model package must be validated.
For IAM role, choose an IAM role that has the required permissions to run batch transform jobs in SageMaker, or choose Create a new role to allow SageMaker to create a role that has the AmazonSageMakerFullAccess managed policy attached. For information, see SageMaker Roles.
For Validation profile, specify the following:

A name for the validation profile.
A Transform job definition. This is a JSON block that describes a batch transform job. This is in the same format as the https://docs.aws.amazon.com/sagemaker/latest/APIReference/APITransformJobDefinition.html input parameter of the https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateAlgorithm.html API.


Choose Create marketplace model package.

Create a Model Package Resource (API)
To create a model package by using the SageMaker API, call the https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateModelPackage.html API. 

Create Algorithm and Model Package Resources
After your training and/or inference code is packaged in Docker containers, create algorithm and model package resources that you can use in your Amazon SageMaker account and, optionally, publish on AWS Marketplace.
Topics
+ Create an Algorithm Resource
+ Create a Model Package Resource

Find and Subscribe to Algorithms and Model Packages on AWS Marketplace
With AWS Marketplace, you can browse and search for hundreds of machine learning algorithms and models in a broad range of categories, such as computer vision, natural language processing, speech recognition, text, data, voice, image, video analysis, fraud detection, predictive analysis, and more.

To find algorithms on AWS Marketplace

Open the Amazon SageMaker console at https://console.aws.amazon.com/sagemaker/.
Choose Algorithms, then choose Find algorithms.
This takes you to the AWS Marketplace algorithms page. For information about finding and subscribing to algorithms on AWS Marketplace, see Machine Learning Products in the AWS Marketplace User Guide for AWS Consumers.

To find model packages on AWS Marketplace

Open the SageMaker console at https://console.aws.amazon.com/sagemaker/.
Choose Model packages, then choose Find model packages.
This takes you to the AWS Marketplace model packages page. For information about finding and subscribing to model packages on AWS Marketplace, see Machine Learning Products in the AWS Marketplace User Guide for AWS Consumers.

Use Algorithms and Model Packages
For information about using algorithms and model packages that you subscribe to in SageMaker, see Use Algorithm and Model Package Resources.
Note
When you create a training job, inference endpoint, and batch transform job from an algorithm or model package that you subscribe to on AWS Marketplace, the training and inference containers do not have access to the internet. Because the containers do not have access to the internet, the seller of the algorithm or model package does not have access to your data.

List Your Algorithm or Model Package on AWS Marketplace
After creating and validating your algorithm or model in Amazon SageMaker, list your product on AWS Marketplace. The listing process makes your products available in the AWS Marketplace and the SageMaker console. 
To list products on AWS Marketplace, you must be a registered seller. To register, use the self-registration process from the AWS Marketplace Management Portal (AMMP). For information, see Getting Started as a Seller in the User Guide for AWS Marketplace Providers. When you start the product listing process from the Amazon SageMaker console, we check your seller registration status. If you have not registered, we direct you to do so.
To start the listing process, do one of the following:
+ From the SageMaker console, choose the product, choose Actions, and choose Publish new ML Marketplace listing. This carries over your product reference, the Amazon Resource Name (ARN), and directs you to the AMMP to create the listing.
+ Go to ML listing process, manually enter the Amazon Resource Name (ARN), and start your product listing. This process carries over the product metadata that you entered when creating the product in SageMaker. For an algorithm listing, the information includes the supported instance types and hyperparameters. In addition, you can enter a product description, promotional information, and support information as you would with other AWS Marketplace products.

Use a Model Package to Create a Model
Use a model package to create a deployable model that you can use to get real-time inferences by creating a hosted endpoint or to run batch transform jobs. You can create a deployable model from a model package by using the Amazon SageMaker console, the low-level SageMaker API), or the Amazon SageMaker Python SDK.
Topics
+ Use a Model Package to Create a Model (Console)
+ Use a Model Package to Create a Model (API)
+ Use a Model Package to Create a Model ([Amazon SageMaker Python SDK](https://sagemaker.readthedocs.io))
Use a Model Package to Create a Model (Console)
To create a deployable model from a model package (console)

Open the SageMaker console at https://console.aws.amazon.com/sagemaker/.
Choose Model packages.
Choose a model package that you created from the list on the My model packages tab or choose a model package that you subscribed to on the AWS Marketplace subscriptions tab.
Choose Create model.
For Model name, type a name for the model.
For IAM role, choose an IAM role that has the required permissions to call other services on your behalf, or choose Create a new role to allow SageMaker to create a role that has the AmazonSageMakerFullAccess managed policy attached. For information, see SageMaker Roles.
For VPC, choose a Amazon VPC that you want to allow the model to access. For more information, see Give SageMaker Hosted Endpoints Access to Resources in Your Amazon VPC.
Leave the default values for Container input options and Choose model package.
For environment variables, provide the names and values of environment variables you want to pass to the model container.
For Tags, specify one or more tags to manage the model. Each tag consists of a key and an optional value. Tag keys must be unique per resource.
Choose Create model.

After you create a deployable model, you can use it to set up an endpoint for real-time inference or create a batch transform job to get inferences on entire datasets. For information about hosting endpoints in SageMaker, see Deploy Models for Inference.
Use a Model Package to Create a Model (API)
To use a model package to create a deployable model by using the SageMaker API, specify the name or the Amazon Resource Name (ARN) of the model package as the ModelPackageName field of the https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIContainerDefinition.html object that you pass to the https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateModel.html API.
After you create a deployable model, you can use it to set up an endpoint for real-time inference or create a batch transform job to get inferences on entire datasets. For information about hosted endpoints in SageMaker, see Deploy Models for Inference.
Use a Model Package to Create a Model (Amazon SageMaker Python SDK)
To use a model package to create a deployable model by using the SageMaker Python SDK, initialize a ModelPackage object, and pass the Amazon Resource Name (ARN) of the model package as the model_package_arn argument. For example:

from sagemaker import ModelPackage
model = ModelPackage(role='SageMakerRole',
         model_package_arn='training-job-scikit-decision-trees-1542660466-6f92',
         sagemaker_session=sagemaker_session)

After you create a deployable model, you can use it to set up an endpoint for real-time inference or create a batch transform job to get inferences on entire datasets. For information about hosting endpoints in SageMaker, see Deploy Models for Inference.

sagemaker-notebook-instance-inside-vpc
Checks if an Amazon SageMaker notebook instance is launched within a VPC or within a list of approved subnets. The rule is NON_COMPLIANT if a notebook instance is not launched within a VPC or if its subnet ID is not included in the parameter list. 
Identifier: SAGEMAKER_NOTEBOOK_INSTANCE_INSIDE_VPC
Resource Types: AWS::SageMaker::NotebookInstance
Trigger type: Configuration changes
AWS Region: All supported AWS regions except China (Beijing), Asia Pacific (Jakarta), Middle East (UAE), Asia Pacific (Hyderabad), Asia Pacific (Melbourne), AWS GovCloud (US-East), AWS GovCloud (US-West), Europe (Spain), China (Ningxia), Europe (Zurich) Region
Parameters:
SubnetIds (Optional)Type: CSV
Comma-separated list of subnet IDs that notebook instances can be launched in.
AWS CloudFormation template
To create AWS Config managed rules with AWS CloudFormation templates, see Creating AWS Config Managed Rules With AWS CloudFormation Templates.

sagemaker-notebook-instance-kms-key-configured
Check whether an AWS Key Management Service (KMS) key is configured for an Amazon SageMaker notebook instance. The rule is NON_COMPLIANT if 'KmsKeyId' is not specified for the Amazon SageMaker notebook instance. 
Identifier: SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED
Trigger type: Periodic
AWS Region: All supported AWS regions except China (Beijing), Asia Pacific (Jakarta), Africa (Cape Town), Middle East (UAE), Asia Pacific (Hyderabad), Asia Pacific (Osaka), Asia Pacific (Melbourne), Europe (Milan), AWS GovCloud (US-East), Europe (Spain), China (Ningxia), Europe (Zurich) Region
Parameters:
kmsKeyArns (Optional)Type: String
Comma-separated list of AWS KMS key ARNs allowed for an Amazon SageMaker notebook instance.
AWS CloudFormation template
To create AWS Config managed rules with AWS CloudFormation templates, see Creating AWS Config Managed Rules With AWS CloudFormation Templates.

sagemaker-notebook-instance-root-access-check
Checks if the Amazon SageMaker RootAccess setting is enabled for Amazon SageMaker notebook instances. The rule is NON_COMPLIANT if the RootAccess setting is set to ‘Enabled’ for an Amazon SageMaker notebook instance. 
Identifier: SAGEMAKER_NOTEBOOK_INSTANCE_ROOT_ACCESS_CHECK
Resource Types: AWS::SageMaker::NotebookInstance
Trigger type: Configuration changes
AWS Region: All supported AWS regions except China (Beijing), Asia Pacific (Jakarta), Middle East (UAE), Asia Pacific (Hyderabad), Asia Pacific (Melbourne), AWS GovCloud (US-East), AWS GovCloud (US-West), Europe (Spain), China (Ningxia), Europe (Zurich) Region
Parameters:
None  
AWS CloudFormation template
To create AWS Config managed rules with AWS CloudFormation templates, see Creating AWS Config Managed Rules With AWS CloudFormation Templates.

sagemaker-notebook-no-direct-internet-access
Checks whether direct internet access is disabled for an Amazon SageMaker notebook instance. The rule is NON_COMPLIANT if Amazon SageMaker notebook instances are internet-enabled. 
Identifier: SAGEMAKER_NOTEBOOK_NO_DIRECT_INTERNET_ACCESS
Trigger type: Periodic
AWS Region: All supported AWS regions except Asia Pacific (Jakarta), Africa (Cape Town), Middle East (UAE), Asia Pacific (Hyderabad), Asia Pacific (Osaka), Asia Pacific (Melbourne), Europe (Milan), AWS GovCloud (US-East), Europe (Spain), Europe (Zurich) Region
Parameters:
None  
AWS CloudFormation template
To create AWS Config managed rules with AWS CloudFormation templates, see Creating AWS Config Managed Rules With AWS CloudFormation Templates.

Create an MLOps Project using Amazon SageMaker Studio
This procedure demonstrates how to create an MLOps project using Amazon SageMaker Studio.
Prerequisites
+ An IAM account or IAM Identity Center to sign in to Studio. For information, see Onboard to Amazon SageMaker Domain.
+ Permission to use SageMaker-provided project templates. For information, see SageMaker Studio Permissions Required to Use Projects.
+ Basic familiarity with the Studio user interface. For information, see Amazon SageMaker Studio UI Overview.
To create a project in Studio

Sign in to Studio. For more information, see Onboard to Amazon SageMaker Domain.
In the Studio sidebar, choose the Home icon ( ).
Select Deployments from the menu, and then select Projects.
Choose Create project.
The Create project tab opens displaying a list of available templates.
If not selected already, choose SageMaker templates. For more information about project templates, see MLOps Project Templates.
Choose MLOps template for model building, training, and deployment.
Choose Select project template.
The Create project tab changes to display Project details.
Enter the following information:

For Project details, enter a name and description for your project.
Optionally, add tags, which are key-value pairs that you can use to track your projects.

Choose Create project and wait for the project to appear in the Projects list.


Delete an MLOps Project using Amazon SageMaker Studio
This procedure demonstrates how to delete an MLOps project using Amazon SageMaker Studio.
Prerequisites
Note
You can only delete projects in Studio that you have created. This condition is part of the service catalog permission servicecatalog:TerminateProvisionedProduct in the AmazonSageMakerFullAccess policy. If needed, you can update this policy to remove this condition.
+ An IAM account or IAM Identity Center to sign in to Studio. For information, see Onboard to Amazon SageMaker Domain.
+ Basic familiarity with the Studio user interface. For information, see Amazon SageMaker Studio UI Overview.
To delete a project in Amazon SageMaker Studio

Sign in to Studio. For more information, see Onboard to Amazon SageMaker Domain.
In the Studio sidebar, choose the Home icon ( ).
Select Deployments from the menu, and then select Projects.
Select the target project from the dropdown list. If you don’t see your project, type the project name and apply the filter to find your project.
Once you've found your project, select the project name to view details.
Choose Delete from the Actions menu.
Confirm your choice by choosing Delete from the Delete Project window.


View Project Resources
After you create a project, view the resources associated with the project in Amazon SageMaker Studio.
To create a project in Studio

Sign in to Studio. For more information, see Onboard to Amazon SageMaker Domain.
In the Studio sidebar, choose the Home icon ( ).
Select Deployments from the menu, and then select Projects.
Select the name of the project for which you want to view details.
A tab with the project details appears.

On the project details tab, you can view the following entities associated with the project.
+ Repositories: Code repositories (repos) associated with this project. If you use a SageMaker-provided template when you create your project, it creates a AWS CodeCommit repo or a third-party Git repo. For more information about CodeCommit, see What is AWS CodeCommit.
+ Pipelines: SageMaker ML pipelines that define steps to prepare data, train, and deploy models. For information about SageMaker ML pipelines, see Create and Manage SageMaker Pipelines.
+ Experiments: One or more Amazon SageMaker Autopilot experiments associated with the project. For information about Autopilot, see Automate model development with Amazon SageMaker Autopilot.
+ Model groups: Groups of model versions that were created by pipeline executions in the project. For information about model groups, see Create a Model Group.
+ Endpoints: SageMaker endpoints that host deployed models for real-time inference. When a model version is approved, it is deployed to an endpoint.
+ Settings: Settings for the project. This includes the name and description of the project, information about the project template and SourceModelPackageGroupName, and metadata about the project.

SageMaker Studio Permissions Required to Use Projects
Users can view SageMaker provided project templates and create projects with those templates when you grant Projects permissions for users. You can grant these permissions when you onboard or update Amazon SageMaker Studio. There are two permissions to grant.

Grant Projects permissions for the Studio administrator to permit the Studio administrator to view the SageMaker-provided templates in the Service Catalog console. The administrator can see what other Studio users create if you grant them permission to use SageMaker projects. The administrator can also view the AWS CloudFormation template that the SageMaker-provided project templates define in the Service Catalog console. For information about using the Service Catalog console, see What Is Service Catalog in the Service Catalog User Guide.
Allow Studio users who are configured to use the same execution role as the domain to create projects. This grants Studio users permission to use the SageMaker-provided project templates to create a project from within Studio.

Important
Do not manually create your roles. Always create roles through Studio Settings using the steps described in the following procedure.
For users who use any role other than the domain's execution role to view and use SageMaker-provided project templates, you need to grant Projects permissions to the individual user profiles.
The following procedures show how to grant Projects permissions after you onboard to Studio. For more information about onboarding to Studio, see Onboard to Amazon SageMaker Domain.
To grant *Projects permissions for the administrator and domain execution role users*

Open the SageMaker console.
Choose Control Panel.
If you choose Quick setup to set up your SageMaker Domain, you have permissions to use project templates by default.
If you choose Standard setup to set up your SageMaker Domain, make sure you turn on the following options when you configure Studio settings:

Enable Amazon SageMaker project templates and Amazon SageMaker JumpStart for this account
Enable Amazon SageMaker project templates and Amazon SageMaker JumpStart for Studio users
Create the roles which are needed to use the latest updated AWS Service catalog of products for Projects and JumpStart

To confirm that your SageMaker Domain has active project template permissions:

Open the SageMaker console.
Choose Control Panel.
Choose the Settings icon in the upper-right corner of the Domain card.
Choose Studio Settings in the left side panel.
Under Projects and JumpStart, make sure the following options are turned on:

Enable Amazon SageMaker project templates and Amazon SageMaker JumpStart for this account
Enable Amazon SageMaker project templates and Amazon SageMaker JumpStart for Studio users
Create the roles which are needed to use the latest updated AWS Service catalog of products for Projects and JumpStart


To view a list of your roles:

Open the SageMaker console.
Choose Control Panel.
A list of your roles appears in the Apps card under Projects.
Important
As of July 25, we require additional roles to use project templates. Here is the complete list of roles you should see under Projects:
AmazonSageMakerServiceCatalogProductsLaunchRole AmazonSageMakerServiceCatalogProductsUseRole AmazonSageMakerServiceCatalogProductsApiGatewayRole AmazonSageMakerServiceCatalogProductsCloudformationRole AmazonSageMakerServiceCatalogProductsCodeBuildRole AmazonSageMakerServiceCatalogProductsCodePipelineRole AmazonSageMakerServiceCatalogProductsEventsRole AmazonSageMakerServiceCatalogProductsFirehoseRole AmazonSageMakerServiceCatalogProductsGlueRole AmazonSageMakerServiceCatalogProductsLambdaRole AmazonSageMakerServiceCatalogProductsExecutionRole



Create Custom Project Templates
If the SageMaker-provided templates do not meet your needs (for example, you want to have more complex orchestration in the CodePipeline with multiple stages or custom approval steps), create your own templates.
We recommend starting by using SageMaker-provided templates to understand how to organize your code and resources and build on top of it. To do this, after you enable administrator access to the SageMaker templates, log in to the https://console.aws.amazon.com/servicecatalog/, choose Portfolios, then choose Imported. For information about Service Catalog, see Overview of Service Catalog in the Service Catalog User Guide.
Create your own project templates to customize your MLOps project. SageMaker project templates are Service Catalog–provisioned products to provision the resources for your MLOps project. 
To create a custom project template, complete the following steps.

Create a portfolio. For information, see Step 3: Create an Service Catalog Portfolio.
Create a product. A product is a CloudFormation template. You can create multiple versions of the product. For information, see Step 4: Create an Service Catalog Product.
For the product to work with SageMaker projects, add the following parameters to your product template.
```
SageMakerProjectName:
Type: String
Description: Name of the project
SageMakerProjectId:
Type: String
Description: Service generated Id of the project.
```
Important
We recommend that you wrap the CodeCommit repository into the SageMaker code repository for the project's repositories to be visible in VPC mode. The sample template and required addition are shown in the following code samples.
Original (sample) template:  

ModelBuildCodeCommitRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      # Max allowed length: 100 chars
      RepositoryName: !Sub sagemaker-${SageMakerProjectName}-${SageMakerProjectId}-modelbuild # max: 10+33+15+10=68
      RepositoryDescription: !Sub SageMaker Model building workflow infrastructure as code for the Project ${SageMakerProjectName}
      Code:
        S3:
          Bucket: SEEDCODE_BUCKETNAME
          Key: toolchain/model-building-workflow-v1.0.zip
        BranchName: main

Additional content to add in VPC mode:  

SageMakerRepository:
    Type: AWS::SageMaker::CodeRepository
    Properties:
        GitConfig:
            RepositoryUrl: !GetAtt ModelBuildCodeCommitRepository.CloneUrlHttp
            Branch: main

Add a launch constraint. A launch constraint designates an IAM role that Service Catalog assumes when a user launches a product. For information, see Step 6: Add a Launch Constraint to Assign an IAM Role.
Provision the product on https://console.aws.amazon.com/servicecatalog/ to test the template. If you are satisfied with your template, continue to the next step to make the template available in Studio.
Grant access to the Service Catalog portfolio that you created in step 1 to your Studio execution role. Use either the Studio domain execution role or a user role that has Studio access. For information about adding a role to the portfolio, see Step 7: Grant End Users Access to the Portfolio.
To make your project template available in your Organization templates list in Studio, create a tag with the following key and value to the Service Catalog product you created in step 2.

key: sagemaker:studio-visibility
value: true


After you complete these steps, Studio users in your organization can create a project with the template you created by following the steps in Create an MLOps Project using Amazon SageMaker Studio and choosing Organization templates when you choose a template.

Use SageMaker-Provided Project Templates
Amazon SageMaker provides project templates that create the infrastructure you need to create an MLOps solution for continuous integration and continuous deployment (CI/CD) of ML models. Use these templates to process data, extract features, train and test models, register the models in the SageMaker model registry, and deploy the models for inference. You can customize the seed code and the configuration files to suit your requirements.
Important
As of July 25, 2022, we require additional roles to use project templates. For a complete list of required roles and instructions on how to create them, see SageMaker Studio Permissions Required to Use Projects. If you do not have the new roles, you will get the error message CodePipeline is not authorized to perform AssumeRole on role arn:aws:iam::xxx:role/service-role/AmazonSageMakerServiceCatalogProductsCodePipelineRole when you try to create a new project and cannot proceed.
SageMaker project templates offer you the following choice of code repositories, workflow automation tools, and pipeline stages:
+ Code repository: AWS CodeCommit or third-party Git repositories such as GitHub and Bitbucket
+ CI/CD workflow automation: AWS CodePipeline or Jenkins
+ Pipeline stages: Model building and training, model deployment, or both
The following discussion provides an overview of each template you can choose when you create your SageMaker project. You can also view the available templates in Studio by following  Step 1: Create the Project of the Project walkthrough.
For step-by-step instructions on how to create a real project, you can follow one of the project walkthroughs:
+ If you want to use the template MLOps template for model building, training, and deployment, see SageMaker MLOps Project Walkthrough.
+ If you want to use the template MLOps template for model building, training, and deployment with third-party Git repositories using CodePipeline, see SageMaker MLOps Project Walkthrough Using Third-party Git Repos.
+ If you want to use the template MLOps template for model building, training, and deployment with third-party Git repositories using Jenkins, see Create Amazon SageMaker projects using third-party source control and Jenkins.
Topics
+ MLOps template for model building, training, and deployment
+ MLOps template for model building, training, deployment, and Amazon SageMaker Model Monitor
+ MLOps template for image building, model building, and model deployment
+ MLOps template for model building, training, and deployment with third-party Git repositories using CodePipeline
+ MLOps template for model building, training, and deployment with third-party Git repositories using Jenkins
+ Update SageMaker Projects to Use Third-Party Git Repositories
MLOps template for model building, training, and deployment
This template is a combination of the following two templates, each of which can be used independently, and contains all of the resources provided in those templates.
+ Code repository: AWS CodeCommit
+ CI/CD workflow automation: AWS CodePipeline
MLOps template for model building and training
Use this template when you want an MLOps solution to process data, extract features, train and test models, and register the models in the SageMaker model registry.
This template provides the following resources:
+ An AWS CodeCommit repository that contains sample code that creates an Amazon SageMaker Model Building Pipelines pipeline in Python code and shows how to create and update the SageMaker pipeline. This repository also has a Python Jupyter Notebook that you can open and run in Studio.
+ An AWS CodePipeline pipeline that has source and build steps. The source step points to the CodeCommit repository. The build step gets the code from that repository, creates and updates the SageMaker pipeline, starts a pipeline execution, and waits for the pipeline execution to complete.
+ An Amazon S3 bucket to store artifacts, including CodePipeline and CodeBuild artifacts, and any artifacts generated from the SageMaker pipeline runs.
The following diagram illustrates the workflow and AWS resources used by this template to help you build and train your models.  

MLOps template for model deployment
Use this template to automate the deployment of models in the SageMaker model registry to SageMaker endpoints for real-time inference. This template recognizes changes in the model registry. When a new model version is registered and approved, it automatically initiates a deployment.
The template provisions a CodeCommit repository with configuration files to specify the model deployment steps, AWS CloudFormation templates to define endpoints as infrastructure, and seed code for testing the endpoint.
This template provides the following resources:
+ An AWS CodeCommit repository that contains sample code that deploys models to endpoints in staging and production environments.
+ An AWS CodePipeline pipeline that has source, build, deploy-to-staging, and deploy-to-production steps. The source step points to the CodeCommit repository, and the build step gets the code from that repository and generates CloudFormation stacks to deploy. The deploy-to-staging and deploy-to-production steps deploy the CloudFormation stacks to their respective environments. There is a manual approval step between the staging and production build steps, so that a MLOps engineer must approve the model before it is deployed to production.
There is also a programmatic approval step with placeholder tests in the example code in the CodeCommit repository. You can add additional tests to replace the placeholders tests.
+ An Amazon S3 bucket to store artifacts, including CodePipeline and CodeBuild artifacts, and any artifacts generated from the SageMaker pipeline runs.
+ A CloudWatch event to initiate the pipeline when a model package version is approved or rejected.
The following diagram illustrates the workflow and AWS resources used by this template to help you deploy your models.  

As previously mentioned, see Project Walkthrough for a demonstration that uses this template to create a real project.
MLOps template for model building, training, deployment, and Amazon SageMaker Model Monitor
This template is an extension of the MLOps template for model building, training, and deployment. It includes both the model building, training, and deployment components of the template, and an additional Amazon SageMaker Model Monitor template that provides the following types of monitoring: 
+ Data Quality – Monitor drift in data quality.
+ Model Quality – Monitor drift in model quality metrics, such as accuracy.
+  Bias Drift for Models in Production – Monitor bias in a model's predictions.
+ Code repository: AWS CodeCommit
+ CI/CD workflow automation: AWS CodePipeline
MLOps template for Amazon SageMaker Model Monitor
You can use this template for an MLOps solution to deploy one or more of the Amazon SageMaker data quality, model quality, model bias, and model explainability monitors to monitor a deployed model on a SageMaker inference endpoint. 
This template provides the following resources:
+ An AWS CodeCommit repository that contains sample Python code that gets the baselines used by the monitors from the SageMaker Model Registry, and updates the template’s parameters for the staging and production environments. It also contains a AWS CloudFormation template to create the Amazon SageMaker Model Monitors.
+ An AWS CodePipeline pipeline that has source, build, and deploy steps. The source step points to the CodePipeline repository. The build step gets the code from that repository, gets the baseline from the Model Registry, and updates template parameters for the staging and production environments. The deploy steps deploy the configured monitors into the staging and production environments. The manual approval step, within the DeployStaging stage, requires you to verify that the production SageMaker endpoint is InService before approving and moving to the DeployProd stage.
+ The template uses the same S3 bucket created by the MLOps template for model building, training, and deployment to store the monitors' outputs. 
+ Two Amazon EventBridge events rules initiate the Amazon SageMaker Model Monitor AWS CodePipeline every time the staging SageMaker endpoint is updated, or a code change is committed to the CodePipeline repository. 
MLOps template for image building, model building, and model deployment
This template is an extension of the MLOps template for model building, training, and deployment. It includes both the model building, training, and deployment components of that template and the following options:
+ Include processing image–building pipeline
+ Include training image–building pipeline
+ Include inference image–building pipeline
For each of the components selected during project creation, the following are created by using the template:
+ An Amazon ECR repository
+ A SageMaker Image
+ A CodeCommit repository containing a Dockerfile that you can customize
+ A CodePipeline that is initiated by changes to the CodePipeline repository
+ A CodeBuild project that builds a Docker image and registers it in the Amazon ECR repository
+ An EventBridge rule that initiates the CodePipeline on a schedule
When the CodePipeline is initiated, it builds a new Docker container and registers it with an Amazon ECR repository. When a new container is registered with the Amazon ECR repository, a new ImageVersion is added to the SageMaker image. This initiates the model building pipeline, which in turn initiates the deployment pipeline.
The newly created image is used in the model building, training, and deployment portions of the workflow where applicable.
MLOps template for model building, training, and deployment with third-party Git repositories using CodePipeline

Code repository: Third-party Git. Establish the AWS CodeStar connection from your AWS account to your GitHub user or organization. Add a tag with the key sagemaker and value true to this AWS CodeStar connection.
CI/CD workflow automation: AWS CodePipeline

This template provides the following resources:
+ Associations with one or more customer-specified Git repositories.
+ An AWS CodePipeline pipeline that has source, build, deploy-to-staging, and deploy-to-production steps. The source step points to the third-party Git repository and the build step gets the code from that repository and generates CloudFormation stacks to deploy. The deploy-to-staging and deploy-to-production steps deploy the CloudFormation stacks to their respective environments. There is a manual approval step between the staging and production build steps, so that a MLOps engineer must approve the model before it is deployed to production.
+ An AWS CodeBuild project to populate the Git repositories with the seed code information. This requires an AWS CodeStar connection from your AWS account to your account on the Git repository host.
+ An Amazon S3 bucket to store artifacts, including CodePipeline and CodeBuild artifacts, and any artifacts generated from the SageMaker pipeline runs.
As previously mentioned, see Project Walkthrough Using Third-party Git Repos for a demonstration that uses this template to create a real project.
MLOps template for model building, training, and deployment with third-party Git repositories using Jenkins

Code repository: Third-party Git. Establish the AWS CodeStar connection from your AWS account to your GitHub user or organization. Add a tag with the key sagemaker and value true to this AWS CodeStar connection.
CI/CD workflow automation: Jenkins

This template provides the following resources:
+ Associations with one or more customer-specified Git repositories.
+ Seed code to generate Jenkins pipelines that have source, build, deploy-to-staging, and deploy-to-production steps. The source step points to the customer-specified Git repository. The build step gets the code from that repository and generates two CloudFormation stacks. The deploy steps deploy the CloudFormation stacks to their respective environments. There is an approval step between the staging step and the production step.
+ An AWS CodeBuild project to populate the Git repositories with the seed code information. This requires an AWS CodeStar connection from your AWS account to your account on the Git repository host.
+ An Amazon S3 bucket to store artifacts of the SageMaker project and SageMaker pipeline.
The template creates the association between your project and the source control repositories, but you need to perform additional manual steps to establish communication between your AWS account and Jenkins. For the detailed steps, see Create Amazon SageMaker projects using third-party source control and Jenkins.
The instructions help you build the architecture shown in the following diagram, with GitHub as the source control repository in this example. As shown, you are attaching your Git repository to the project to check in and manage code versions. Jenkins initiates the model build pipeline when it detects changes to the model build code in the Git repository. You are also connecting the project to Jenkins to orchestrate your model deployment steps, which start when you approve the model registered in the model registry, or when Jenkins detects changes to the model deployment code.

In summary, the steps guide you through the following tasks:

Establish the connection between your AWS and GitHub accounts.
Create the Jenkins account and import needed plugins.
Create the Jenkins IAM user and permissions policy.
Set the AWS credentials for the Jenkins IAM user on your Jenkins server.
Create an API token for communication with your Jenkins server.
Use a CloudFormation template to set up an EventBridge rule to monitor the model registry for newly-approved models.
Create the SageMaker project, which seeds your GitHub repositories with model build and deploy code.
Create your Jenkins model build pipeline with the model build seed code.
Create your Jenkins model deploy pipeline with the model deploy seed code.

Update SageMaker Projects to Use Third-Party Git Repositories
The managed policy attached to the AmazonSageMakerServiceCatalogProductsUseRole role was updated on July 27, 2021 for use with the third-party Git templates. Users who onboard to Amazon SageMaker Studio after this date and enable project templates use the new policy. Users who onboarded prior to this date must update the policy to use these templates. Use one of the following options to update the policy:
+ Delete role and toggle Studio settings

In the IAM console, delete AmazonSageMakerServiceCatalogProductsUseRole.
In the Studio control panel, choose Edit Settings.
Toggle both settings and then choose Submit.

In the IAM console, add the following permissions to AmazonSageMakerServiceCatalogProductsUseRole:


{
      "Effect": "Allow",
      "Action": [
          "codestar-connections:UseConnection"
      ],
      "Resource": "arn:aws:codestar-connections:*:*:connection/*",
      "Condition": {
          "StringEqualsIgnoreCase": {
              "aws:ResourceTag/sagemaker": "true"
          }
      }
  },
  {
      "Effect": "Allow",
      "Action": [
          "s3:PutObjectAcl"
      ],
      "Resource": [
          "arn:aws:s3:::sagemaker-*"
      ]
  }



MLOps Project Templates
An Amazon SageMaker project template automates the setup and implementation of MLOps for your projects. A SageMaker project template is an Service Catalog product that SageMaker makes available to Amazon SageMaker Studio users. These Service Catalog products are visible in your Service Catalog console after you enable permissions when you onboard or update Amazon SageMaker Studio. For information about enabling permissions to use SageMaker project templates, see SageMaker Studio Permissions Required to Use Projects. Use SageMaker project templates to create a project that is an end-to-end MLOps solution.
If you are an administrator, you can create custom project templates from scratch or modify one of the project templates provided by SageMaker. Studio users in your organization can use these custom project templates to create their projects.
Topics
+ Use SageMaker-Provided Project Templates
+ Create Custom Project Templates

Update an MLOps Project in Amazon SageMaker Studio
This procedure demonstrates how to update an MLOps project in Amazon SageMaker Studio. You can update the Description, template version, and template parameters.
Prerequisites
+ An IAM account or IAM Identity Center to sign in to Studio. For information, see Onboard to Amazon SageMaker Domain.
+ Basic familiarity with the Studio user interface. For information, see Amazon SageMaker Studio UI Overview.
+ Add the following custom inline policies to the specified roles:
User-created role having AmazonSageMakerFullAccess

  {
      "Version": "2012-10-17",
      "Statement": [
          {
              "Effect": "Allow",
              "Action": [
                  "servicecatalog:CreateProvisionedProductPlan",
                  "servicecatalog:DescribeProvisionedProductPlan",
                  "servicecatalog:DeleteProvisionedProductPlan"
              ],
              "Resource": "*"
          }
      ]
  }

AmazonSageMakerServiceCatalogProductsLaunchRole

  {
      "Version": "2012-10-17",
      "Statement": [
          {
              "Effect": "Allow",
              "Action": [
                  "cloudformation:CreateChangeSet",
                  "cloudformation:DeleteChangeSet",
                  "cloudformation:DescribeChangeSet"
              ],
              "Resource": "arn:aws:cloudformation:*:*:stack/SC-*"
          },
          {
              "Effect": "Allow",
              "Action": [
                  "codecommit:PutRepositoryTriggers"
              ],
              "Resource": "arn:aws:codecommit:*:*:sagemaker-*"
          }
      ]
  }

To update a project in Studio

Sign in to Studio. For more information, see Onboard to Amazon SageMaker Domain.
In the Studio sidebar, choose the Home icon ( ).
Select Deployments from the menu, and then select Projects. A list of your projects appears.
Select the name of the project you want to update in the projects list.
Choose Update from the Actions menu in the upper-right corner of the project tab.
In the Update project dialog box, you can edit the Description and listed template parameters.
Choose View difference.
A dialog box displays your original and updated project settings. Any change in your project settings can modify or delete resources in the current project. The dialog box displays these changes as well.
You may need to wait a few minutes for the Update button to become active. Choose Update.
The project update may take a few minutes to complete. Select Settings in the project tab and ensure the parameters have been updated correctly.


SageMaker MLOps Project Walkthrough Using Third-party Git Repos
This walkthrough uses the template MLOps template for model building, training, and deployment with third-party Git repositories using CodePipeline to demonstrate how to use MLOps projects to create a CI/CD system to build, train, and deploy models.
Prerequisites
To complete this walkthrough, you need:
+ An IAM or IAM Identity Center account to sign in to Studio. For information, see Onboard to Amazon SageMaker Domain.
+ Permission to use SageMaker-provided project templates. For information, see SageMaker Studio Permissions Required to Use Projects.
+ Basic familiarity with the Studio user interface. For information, see Amazon SageMaker Studio UI Overview.
+ Two GitHub repositories initialized with a README. You input these repositories into the project template, which will seed these repos with model build and deploy code.
Topics
+ Step 1: Set up the GitHub connection
+ Step 2: Create the Project
+ Step 3: Make a Change in the Code
+ Step 4: Approve the Model
+ (Optional) Step 5: Deploy the Model Version to Production
+ Step 6: Clean Up Resources
Step 1: Set up the GitHub connection
In this step, you connect to your GitHub repositories using an AWS CodeStar connection. The SageMaker project uses this connection to access your source code repositories.
To set up the GitHub connection:

Log in to the CodePipeline console at https://console.aws.amazon.com/codepipeline/
Under Settings in the navigation pane, choose Connections.
Choose Create connection.
For Select a provider, select GitHub.
For Connection name, enter a name.
Choose Connect to GitHub.
If the AWS Connector GitHub app isn’t previously installed, choose Install new app.
This displays a list of all the GitHub personal accounts and organizations to which you have access.
Choose the account where you want to establish connectivity for use with SageMaker projects and GitHub repositories.
Choose Configure.
You can optionally select your specific repositories or choose All repositories.
Choose Save. When the app is installed, you’re redirected to the Connect to GitHub page and the installation ID is automatically populated.
Choose Connect.
Add a tag with the key sagemaker and value true to this AWS CodeStar connection.
Copy the connection ARN to save for later. You use the ARN as a parameter in the project creation step.

Step 2: Create the Project
In this step, you create a SageMaker MLOps project by using a SageMaker-provided project template to build, train, and deploy models.
To create the SageMaker MLOps project

Sign in to Studio. For more information, see Onboard to Amazon SageMaker Domain.
In the Studio sidebar, choose the Home icon ( ).
Select Deployments from the menu, and then select Projects.
Choose Create project.
The Create project tab appears.
For SageMaker project templates, choose MLOps template for model building, training, and deployment with third-party Git repositories.
Choose Select project template.
Under ModelBuild CodeRepository Info, provide the following parameters:

For URL, enter the URL of your Git repository for the model build code in https://git-url.git format.
For Branch, enter the branch to use from your Git repository for pipeline activities.
For Full Repository Name, enter the Git repository name in the format of username/repository name or organization/repository name.
For Codestar Connection ARN, enter the ARN of the AWS CodeStar connection you created in Step 1.
The Sample Code toggle switch lets you choose whether to populate the repository with model build seed code. We can leave it on for this demo.

Under ModelDeploy CodeRepository Info, provide the following parameters:

For URL, enter the URL of your Git repository for the model deploy code in https://git-url.git format.
For Branch, enter the branch to use from your Git repository for pipeline activities.
For Full Repository Name, enter the Git repository name in the format of username/repository name or organization/repository name.
For Codestar Connection ARN, enter the ARN of the AWS CodeStar connection you created in Step 1.
The Sample Code toggle switch lets you choose whether to populate the repository with model deployment seed code. We can leave it on for this demo.

Choose Create Project.

The project appears in the Projects list with a Status of Created.
Step 3: Make a Change in the Code
Now make a change to the pipeline code that builds the model and commit the change to initiate a new pipeline run. The pipeline run registers a new model version.
To make a code change

In your model build GitHub repo, navigate to the pipelines/abalone folder. Double-click pipeline.py to open the code file.
In the pipeline.py file, find the line that sets the training instance type.

training_instance_type = ParameterString(
        name="TrainingInstanceType", default_value="ml.m5.xlarge"

Open the file for editing, change ml.m5.xlarge to ml.m5.large, then commit.

After you commit your code change, the MLOps system initiates a run of the pipeline that creates a new model version. In the next step, you approve the new model version to deploy it to production.
Step 4: Approve the Model
Now you approve the new model version that was created in the previous step to initiate a deployment of the model version to a SageMaker endpoint.
To approve the model version

In the Studio sidebar, choose the Home icon ( ).
Select Deployments from the menu, and then select Projects.
Find the name of the project you created in the first step and double-click on it to open the project tab for your project.
In the project tab, choose Model groups, then double-click the name of the model group that appears.
The model group tab appears.
In the model group tab, double-click Version 1. The Version 1 tab opens. Choose Update status.
In the model Update model version status dialog box, in the Status dropdown list, select Approve and then choose Update status.
Approving the model version causes the MLOps system to deploy the model to staging. To view the endpoint, choose the Endpoints tab on the project tab.

(Optional) Step 5: Deploy the Model Version to Production
Now you can deploy the model version to the production environment.
Note
To complete this step, you need to be an administrator in your Studio domain. If you are not an administrator, skip this step.
To deploy the model version to the production environment

Log in to the CodePipeline console at https://console.aws.amazon.com/codepipeline/
Choose Pipelines, then choose the pipeline with the name sagemaker-projectname-projectid-modeldeploy, where projectname is the name of your project, and projectid is the ID of your project.
In the DeployStaging stage, choose Review.
In the Review dialog box, choose Approve.
Approving the DeployStaging stage causes the MLOps system to deploy the model to production. To view the endpoint, choose the Endpoints tab on the project tab in Studio.

Step 6: Clean Up Resources
To stop incurring charges, clean up the resources that were created in this walkthrough.
Note
To delete the AWS CloudFormation stack and the Amazon S3 bucket, you need to be an administrator in Studio. If you are not an administrator, ask your administrator to complete those steps.

In the Studio sidebar, choose the Home icon ( ).
Select Deployments from the menu, and then select Projects.
Select the target project from the dropdown list. If you don’t see your project, type the project name and apply the filter to find your project.
Select your project to view its details in the main panel.
Choose Delete from the Actions menu.
Confirm your choice by choosing Delete from the Delete Project window.
This deletes the Service Catalog provisioned product that the project created. This includes the CodeCommit, CodePipeline, and CodeBuild resources created for the project.
Delete the AWS CloudFormation stacks that the project created. There are two stacks, one for staging and one for production. The names of the stacks are sagemaker-projectname-project-id-deploy-staging and sagemaker-projectname-project-id-deploy-prod, where projectname is the name of your project, and project-id is the ID of your project.
For information about how to delete a AWS CloudFormation stack, see Deleting a stack on the AWS CloudFormation console in the AWS CloudFormation User Guide.
Delete the Amazon S3 bucket that the project created. The name of the bucket is sagemaker-project-project-id, where project-id is the ID of your project.


SageMaker MLOps Project Walkthrough
This walkthrough uses the template MLOps template for model building, training, and deployment to demonstrate using MLOps projects to create a CI/CD system to build, train, and deploy models.
Prerequisites
To complete this walkthrough, you need:
+ An IAM account or IAM Identity Center to sign in to Studio. For information, see Onboard to Amazon SageMaker Domain.
+ Permission to use SageMaker-provided project templates. For information, see SageMaker Studio Permissions Required to Use Projects.
+ Basic familiarity with the Studio user interface. For information, see Amazon SageMaker Studio UI Overview.
Topics
+ Step 1: Create the Project
+ Step 2: Clone the Code Repository
+ Step 3: Make a Change in the Code
+ Step 4: Approve the Model
+ (Optional) Step 5: Deploy the Model Version to Production
+ Step 6: Clean Up Resources
Step 1: Create the Project
In this step, you create a SageMaker MLOps project by using a SageMaker-provided project template to build, train, and deploy models.
To create the SageMaker MLOps project

Sign in to Studio. For more information, see Onboard to Amazon SageMaker Domain.
In the Studio sidebar, choose the Home icon ( ).
Select Deployments from the menu, and then select Projects.
Choose Create project.
The Create project tab appears.
If not selected already, choose SageMaker templates, then choose MLOps template for model building, training, and deployment.
For Project details, enter a name and description for your project.

When the project appears in the Projects list with a Status of Create completed, move on to the next step.
Important
As of July 25, 2022, we require additional roles to use project templates. If you see the error message CodePipeline is not authorized to perform AssumeRole on role arn:aws:iam::xxx:role/service-role/AmazonSageMakerServiceCatalogProductsCodePipelineRole, see Steps 5-6 of SageMaker Studio Permissions Required to Use Projects for a complete list of required roles and instructions on how to create them.
Step 2: Clone the Code Repository
After you create the project, two CodeCommit repositories are created in the project. One of the repositories contains code to build and train a model, and one contains code to deploy the model. In this step, you clone the repository to your local SageMaker project that contains the code to build and train the model to the local Studio environment so that you can work with the code.
To clone the code repository

In the Studio sidebar, choose the Home icon ( ).
Select Deployments from the menu, and then select Projects.
Select the project you created in the previous step to open the project tab for your project.
In the project tab, choose Repositories, and in the Local path column for the repository that ends with modelbuild, choose clone repo....
In the dialog box that appears, accept the defaults and choose Clone repository.

When clone of the repository is complete, the local path appears in the Local path column. Choose the path to open the local folder that contains the repository code in Studio.

Step 3: Make a Change in the Code
Now make a change to the pipeline code that builds the model and check in the change to initiate a new pipeline run. The pipeline run registers a new model version.
To make a code change

In Studio, choose the file browser icon (  ), and navigate to the pipelines/abalone folder. Double-click pipeline.py to open the code file.
In the pipeline.py file, find the line that sets the training instance type.

training_instance_type = ParameterString(
        name="TrainingInstanceType", default_value="ml.m5.xlarge"

Change ml.m5.xlarge to ml.m5.large, then type Ctrl+S to save the change.
Choose the Git icon (  ). Stage, commit, and push the change in pipeline.py. Also, enter a summary in the Summary field and an optional description in the Description field. For information about using Git in Studio, see Clone a Git Repository in SageMaker Studio.


After pushing your code change, the MLOps system initiates a run of the pipeline that creates a new model version. In the next step, you approve the new model version to deploy it to production.
Step 4: Approve the Model
Now you approve the new model version that was created in the previous step to initiate a deployment of the model version to a SageMaker endpoint.
To approve the model version

In the Studio sidebar, choose the Home icon ( ).
Select Deployments from the menu, and then select Projects.
Select the name of the project you created in the first step to open the project tab for your project.
In the project tab, choose Model groups, then double-click the name of the model group that appears.
The model group tab appears.
In the model group tab, double-click Version 1. The Version 1 tab opens. Choose Update status.
In the model Update model version status dialog box, in the Status dropdown list, select Approve, then choose Update status.
Approving the model version causes the MLOps system to deploy the model to staging. To view the endpoint, choose the Endpoints tab on the project tab.

(Optional) Step 5: Deploy the Model Version to Production
Now you can deploy the model version to the production environment.
Note
To complete this step, you need to be an administrator in your Studio domain. If you are not an administrator, skip this step.
To deploy the model version to the production environment

Log in to the CodePipeline console at https://console.aws.amazon.com/codepipeline/
Choose Pipelines, then choose the pipeline with the name sagemaker-projectname-projectid-modeldeploy, where projectname is the name of your project, and projectid is the ID of your project.
In the DeployStaging stage, choose Review.
In the Review dialog box, choose Approve.
Approving the DeployStaging stage causes the MLOps system to deploy the model to production. To view the endpoint, choose the Endpoints tab on the project tab in Studio.

Step 6: Clean Up Resources
To stop incurring charges, clean up the resources that were created in this walkthrough. To do this, complete the following steps.
Note
To delete the AWS CloudFormation stack and the Amazon S3 bucket, you need to be an administrator in Studio. If you are not an administrator, ask your administrator to complete those steps.

In the Studio sidebar, choose the Home icon ( ).
Select Deployments from the menu, and then select Projects.
Select the target project from the dropdown list. If you don’t see your project, type the project name and apply the filter to find your project.
1. 

You can delete a Studio project in one of the following ways:

You can delete the project from the projects list.
Right-click the target project and choose * Delete* from the dropdown list.
Note
This functionality is supported in Studio version v3.17.1 or higher. For more information, see Shut down and Update SageMaker Studio.
   1. 

You can delete a project from the *Project details section.*
  1. When you've found your project, double\-click it to view its details in the main panel\.

  1. Choose **Delete** from the **Actions** menu\.


Confirm your choice by choosing Delete from the Delete Project window.
This deletes the Service Catalog provisioned product that the project created. This includes the CodeCommit, CodePipeline, and CodeBuild resources created for the project.
Delete the AWS CloudFormation stacks that the project created. There are two stacks, one for staging and one for production. The names of the stacks are sagemaker-projectname-project-id-deploy-staging and sagemaker-projectname-project-id-deploy-prod, where projectname is the name of your project, and project-id is the ID of your project.
For information about how to delete a AWS CloudFormation stack, see Deleting a stack on the AWS CloudFormation console in the AWS CloudFormation User Guide.
Delete the Amazon S3 bucket that the project created. The name of the bucket is sagemaker-project-project-id, where project-id is the ID of your project.


What is a SageMaker Project?
SageMaker Projects help organizations set up and standardize developer environments for data scientists and CI/CD systems for MLOps engineers. Projects also help organizations set up dependency management, code repository management, build reproducibility, and artifact sharing.
You can provision SageMaker Projects from the AWS Service Catalog using custom or SageMaker-provided templates. For information about the AWS Service Catalog, see What Is AWS Service Catalog. With SageMaker Projects, MLOps engineers and organization admins can define their own templates or use SageMaker-provided templates. The SageMaker-provided templates bootstrap the ML workflow with source version control, automated ML pipelines, and a set of code to quickly start iterating over ML use cases.
When Should You Use a SageMaker Project?
While notebooks are helpful for model building and experimentation, a team of data scientists and ML engineers sharing code needs a more scalable way to maintain code consistency and strict version control.
Every organization has its own set of standards and practices that provide security and governance for its AWS environment. SageMaker provides a set of first-party templates for organizations that want to quickly get started with ML workflows and CI/CD. The templates include projects that use AWS-native services for CI/CD, such as AWS CodeBuild, AWS CodePipeline, and AWS CodeCommit. The templates also offer the option to create projects that use third-party tools, such as Jenkins and GitHub. For a list of the project templates that SageMaker provides, see Use SageMaker-Provided Project Templates.
Organizations often need tight control over the MLOps resources that they provision and manage. Such responsibility assumes certain tasks, including configuring IAM roles and policies, enforcing resource tags, enforcing encryption, and decoupling resources across multiple accounts. SageMaker Projects can support all these tasks through custom template offerings where organizations use AWS CloudFormation templates to define the resources needed for an ML workflow. Data Scientists can choose a template to bootstrap and pre-configure their ML workflow. These custom templates are created as Service Catalog products and you can provision them in the Studio UI under Organization Templates. The Service Catalog is a service that helps organizations create and manage catalogs of products that are approved for use on AWS. For more information about creating custom templates, see Build Custom SageMaker Project Templates – Best Practices.
SageMaker Projects can help you manage your Git repositories so that you can collaborate more efficiently across teams, ensure code consistency, and support CI/CD. SageMaker Projects can help you with the following tasks:
+ Organize all entities of the ML lifecycle under one project.
+ Establish a single-click approach to set up standard ML infrastructure for model training and deployment that incorporates best practices.
+ Create and share templates for ML infrastructure to serve multiple use cases.
+ Leverage SageMaker-provided pre-built templates to quickly start focusing on model building, or create custom templates with organization-specific resources and guidelines.
+ Integrate with tools of your choice by extending the project templates. For an example, see Create a SageMaker Project to integrate with GitLab and GitLab Pipelines.
+ Organize all entities of the ML lifecycle under one project.
What is in a SageMaker Project?
Customers have the flexibility to set up their projects with the resources that best serve their use case. The example below showcases the MLOps setup for an ML workflow, including model training and deployment.

A typical project with a SageMaker-provided template might include the following:
+ One or more repositories with sample code to build and deploy ML solutions. These are working examples that you can clone locally and modify for your needs. You own this code and can take advantage of the version-controlled repositories for your tasks.
+ A SageMaker pipeline that defines steps for data preparation, training, model evaluation, and model deployment, as shown in the following diagram.

+ A CodePipeline or Jenkins pipeline that runs your SageMaker pipeline every time you check in a new version of the code. For information about CodePipeline, see What is AWS CodePipeline. For information about Jenkins, see Jenkins User Documentation.
+ A model group that contains model versions. Every time you approve the resulting model version from a SageMaker pipeline run, you can deploy it to a SageMaker endpoint.
Each SageMaker project has a unique name and ID that are applied as tags to all of the SageMaker and AWS resources created in the project. With the name and ID, you can view all of the entities associated with your project. These include:
+ Pipelines
+ Registered models
+ Deployed models (endpoints)
+ Datasets
+ Service Catalog products
+ CodePipeline and Jenkins pipelines
+ CodeCommit and third-party Git repositories
Do I Need to Create a Project to Use SageMaker Pipelines?
No. SageMaker pipelines are standalone entities just like training jobs, processing jobs, and other SageMaker jobs. You can create, update, and run pipelines directly within a notebook by using the SageMaker Python SDK without using a SageMaker project.
Projects provide an additional layer to help you organize your code and adopt operational best practices that you need for a production-quality system.

Why Should You Use MLOps?
As you move from running individual artificial intelligence and machine learning (AI/ML) projects to using AI/ML to transform your business at scale, the discipline of ML Operations (MLOps) can help. MLOps accounts for the unique aspects of AI/ML projects in project management, CI/CD, and quality assurance, helping you improve delivery time, reduce defects, and make data science more productive. MLOps refers to a methodology that is built on applying DevOps practices to machine learning workloads. For a discussion of DevOps principles, see the white paper Introduction to DevOps on AWS. To learn more about implementation using AWS services, see Practicing CI/CD on AWS and Infrastructure as Code.
Like DevOps, MLOps relies on a collaborative and streamlined approach to the machine learning development lifecycle where the intersection of people, process, and technology optimizes the end-to-end activities required to develop, build, and operate machine learning workloads.
MLOps focuses on the intersection of data science and data engineering in combination with existing DevOps practices to streamline model delivery across the machine learning development lifecycle. MLOps is the discipline of integrating ML workloads into release management, CI/CD, and operations. MLOps requires the integration of software development, operations, data engineering, and data science.
Challenges with MLOps
Although MLOps can provide valuable tools to help you scale your business, you might face certain issues as you integrate MLOps into your machine learning workloads.
Project management
+ ML projects involve data scientists, a relatively new role, and one not often integrated into cross-functional teams. These new team members often speak a very different technical language than product owners and software engineers, compounding the usual problem of translating business requirements into technical requirements. 
Communication and collaboration
+ Building visibility on ML projects and enabling collaboration across different stakeholders such as data engineers, data scientists, ML engineers, and DevOps is becoming increasingly important to ensure successful outcomes.
Everything is code
+ Use of production data in development activities, longer experimentation lifecycles, dependencies on data pipelines, retraining deployment pipelines, and unique metrics in evaluating the performance of a model.
+ Models often have a lifecycle independent of the applications and systems integrating with those models. 
+ The entire end-to-end system is reproducible through versioned code and artifacts. DevOps projects use Infrastructure-as-Code (IaC) and Configuration-as-Code (CaC) to build environments, and Pipelines-as-Code (PaC) to ensure consistent CI/CD patterns. The pipelines have to integrate with Big Data and ML training workflows. That often means that the pipeline is a combination of a traditional CI/CD tool and another workflow engine. There are important policy concerns for many ML projects, so the pipeline may also need to enforce those policies. Biased input data produces biased results, an increasing concern for business stakeholders.
CI/CD
+ In MLOps, the source data is a first-class input, along with source code. That’s why MLOps calls for versioning the source data and initiating pipeline runs when the source or inference data changes. 
+ Pipelines must also version the ML models, along with inputs and other outputs, in order to provide for traceability. 
+ Automated testing must include proper validation of the ML model during build phases and when the model is in production.
+ Build phases may include model training and retraining, a time-consuming and resource-intensive process. Pipelines must be granular enough to only perform a full training cycle when the source data or ML code changes, not when related components change.
+ Because machine learning code is typically a small part of an overall solution, a deployment pipeline may also incorporate the additional steps required to package a model for consumption as an API by other applications and systems.
Monitoring and logging
+ The feature engineering and model training phases needed to capture model training metrics as well as model experiments. Tuning an ML model requires manipulating the form of the input data as well as algorithm hyperparameters, and systematically capture those experiments. Experiment tracking helps data scientists work more effectively and gives a reproducible snapshot of their work.
+ Deployed ML models require monitoring of the data passed to the model for inference, along with the standard endpoint stability and performance metrics. The monitoring system must also capture the quality of model output, as evaluated by an appropriate ML metric. 
Benefits of MLOps
Adopting MLOps practices gives you faster time-to-market for ML projects by delivering the following benefits.
+ Productivity: Providing self-service environments with access to curated data sets lets data engineers and data scientists move faster and waste less time with missing or invalid data.
+ Repeatability: Automating all the steps in the MLDC helps you ensure a repeatable process, including how the model is trained, evaluated, versioned, and deployed. 
+ Reliability: Incorporating CI/CD practices allows for the ability to not only deploy quickly but with increased quality and consistency. 
+ Auditability: Versioning all inputs and outputs, from data science experiments to source data to trained model, means that we can demonstrate exactly how the model was built and where it was deployed.
+ Data and model quality: MLOps lets us enforce policies that guard against model bias and track changes to data statistical properties and model quality over time. 

Automate MLOps with SageMaker Projects
Create end-to-end ML solutions with CI/CD by using SageMaker projects. 
Use SageMaker projects to create an MLOps solution to orchestrate and manage:
+ Building custom images for processing, training, and inference
+ Data preparation and feature engineering
+ Training models
+ Evaluating models
+ Deploying models
+ Monitoring and updating models
Topics
+ Why Should You Use MLOps?
+ What is a SageMaker Project?
+ SageMaker Studio Permissions Required to Use Projects
+ Create an MLOps Project using Amazon SageMaker Studio
+ MLOps Project Templates
+ View Project Resources
+ Update an MLOps Project in Amazon SageMaker Studio
+ Delete an MLOps Project using Amazon SageMaker Studio
+ SageMaker MLOps Project Walkthrough
+ SageMaker MLOps Project Walkthrough Using Third-party Git Repos

Distributed Training with Amazon SageMaker RL
Amazon SageMaker RL supports multi-core and multi-instance distributed training. Depending on your use case, training and/or environment rollout can be distributed. For example, SageMaker RL works for the following distributed scenarios:
+ Single training instance and multiple rollout instances of the same instance type. For an example, see the Neural Network Compression example in the SageMaker examples repository.
+ Single trainer instance and multiple rollout instances, where different instance types for training and rollouts. For an example, see the AWS DeepRacer / AWS RoboMaker example in the SageMaker examples repository.
+ Single trainer instance that uses multiple cores for rollout. For an example, see the Roboschool example in the SageMaker examples repository. This is useful if the simulation environment is light-weight and can run on a single thread. 
+ Multiple instances for training and rollouts. For an example, see the Roboschool example in the SageMaker examples repository.

RL Environments in Amazon SageMaker
Amazon SageMaker RL uses environments to mimic real-world scenarios. Given the current state of the environment and an action taken by the agent or agents, the simulator processes the impact of the action, and returns the next state and a reward. Simulators are useful in cases where it is not safe to train an agent in the real world (for example, flying a drone) or if the RL algorithm takes a long time to converge (for example, when playing chess).
The following diagram shows an example of the interactions with a simulator for a car racing game.

The simulation environment consists of an agent and a simulator. Here, a convolutional neural network (CNN) consumes images from the simulator and generates actions to control the game controller. With multiple simulations, this environment generates training data of the form state_t, action, state_t+1, and reward_t+1. Defining the reward is not trivial and impacts the RL model quality. We want to provide a few examples of reward functions, but would like to make it user-configurable. 
Topics
+ Use OpenAI Gym Interface for Environments in SageMaker RL
+ Use Open-Source Environments
+ Use Commercial Environments
Use OpenAI Gym Interface for Environments in SageMaker RL
To use OpenAI Gym environments in SageMaker RL, use the following API elements. For more information about OpenAI Gym, see https://gym.openai.com/docs/.
+ env.action_space—Defines the actions the agent can take, specifies whether each action is continuous or discrete, and specifies the minimum and maximum if the action is continuous.
+ env.observation_space—Defines the observations the agent receives from the environment, as well as minimum and maximum for continuous observations.
+ env.reset()—Initializes a training episode. The reset() function returns the initial state of the environment, and the agent uses the initial state to take its first action. The action is then sent to step() repeatedly until the episode reaches a terminal state. When step() returns done = True, the episode ends. The RL toolkit re-initializes the environment by calling reset().
+ step()—Takes the agent action as input and outputs the next state of the environment, the reward, whether the episode has terminated, and an info dictionary to communicate debugging information. It is the responsibility of the environment to validate the inputs.
+ env.render()—Used for environments that have visualization. The RL toolkit calls this function to capture visualizations of the environment after each call to the step() function.
Use Open-Source Environments
You can use open-source environments, such as EnergyPlus and RoboSchool, in SageMaker RL by building your own container. For more information about EnergyPlus, see https://energyplus.net/. For more information about RoboSchool, see https://github.com/openai/roboschool. The HVAC and RoboSchool examples in the SageMaker examples repository show how to build a custom container to use with SageMaker RL:
Use Commercial Environments
You can use commercial environments, such as MATLAB and Simulink, in SageMaker RL by building your own container. You need to manage your own licenses.

Hyperparameter Tuning with Amazon SageMaker RL
You can run a hyperparameter tuning job to optimize hyperparameters for Amazon SageMaker RL. The Roboschool example in the sample notebooks in the SageMaker examples repository shows how you can do this with RL Coach. The launcher script shows how you can abstract parameters from the Coach preset file and optimize them.

Sample RL Workflow Using Amazon SageMaker RL
The following example describes the steps for developing RL models using Amazon SageMaker RL.
For complete code examples, see the sample notebooks at https://github.com/awslabs/amazon-sagemaker-examples/tree/master/reinforcement-learning.

Formulate the RL problem—First, formulate the business problem into an RL problem. For example, auto scaling enables services to dynamically increase or decrease capacity depending on conditions that you define. Currently, this requires setting up alarms, scaling policies, thresholds, and other manual steps. To solve this with RL, we define the components of the Markov Decision Process:

Objective—Scale instance capacity so that it matches the desired load profile.
Environment—A custom environment that includes the load profile. It generates a simulated load with daily and weekly variations and occasional spikes. The simulated system has a delay between when new resources are requested and when they become available for serving requests.
State—The current load, number of failed jobs, and number of active machines.
Action—Remove, add, or keep the same number of instances.
Reward—A positive reward for successful transactions and a high penalty for failing transactions beyond a specified threshold.

Define the RL environment—The RL environment can be the real world where the RL agent interacts or a simulation of the real world. You can connect open source and custom environments developed using Gym interfaces and commercial simulation environments such as MATLAB and Simulink.
Define the presets—The presets configure the RL training jobs and define the hyperparameters for the RL algorithms.
Write the training code—Write training code as a Python script and pass the script to a SageMaker training job. In your training code, import the environment files and the preset files, and then define the main() function.
Train the RL Model—Use the SageMaker RLEstimator in the Amazon SageMaker Python SDK to start an RL training job. If you are using local mode, the training job runs on the notebook instance. When you use SageMaker for training, you can select GPU or CPU instances. Store the output from the training job in a local directory if you train in local mode, or on Amazon S3 if you use SageMaker training.
The RLEstimator requires the following information as parameters. 

The source directory where the environment, presets, and training code are uploaded.
The path to the training script.
The RL toolkit and deep learning framework you want to use. This automatically resolves to the Amazon ECR path for the RL container.
The training parameters, such as the instance count, job name, and S3 path for output.
Metric definitions that you want to capture in your logs. These can also be visualized in CloudWatch and in SageMaker notebooks.

Visualize training metrics and output—After a training job that uses an RL model completes, you can view the metrics you defined in the training jobs in CloudWatch,. You can also plot the metrics in a notebook by using the Amazon SageMaker Python SDK analytics library. Visualizing metrics helps you understand how the performance of the model as measured by the reward improves over time.
Note
If you train in local mode, you can't visualize metrics in CloudWatch.
Evaluate the model—Checkpointed data from the previously trained models can be passed on for evaluation and inference in the checkpoint channel. In local mode, use the local directory. In SageMaker training mode, you need to upload the data to S3 first.
Deploy RL models—Finally, deploy the trained model on an endpoint hosted on SageMaker containers or on an edge device by using AWS IoT Greengrass.

For more information on RL with SageMaker, see Using RL with the SageMaker Python SDK.

SageMaker Roles
As a managed service, Amazon SageMaker performs operations on your behalf on the AWS hardware that is managed by SageMaker. SageMaker can perform only operations that the user permits.
A SageMaker user can grant these permissions with an IAM role (referred to as an execution role). 
To create and use a locally available execution role, you can use the following procedures.
Get execution role
You can find the IAM execution role in the following ways:
From the notebook
When you run a notebook within SageMaker (from the SageMaker console or SageMaker Studio) you can access the execution role with the following code:

sagemaker_session = sagemaker.Session()
role = sagemaker.get_execution_role()

Note
The execution role is available only when running a notebook within SageMaker. If you run get_execution_role in a notebook not on SageMaker, expect a "region" error. 
From the SageMaker console
Under Notebook > Notebook instances, select the notebook. The ARN is given in the Permissions and encryption section.
Create execution role
Use the following procedure to create an execution role with the IAM managed policy, AmazonSageMakerFullAccess, attached. If your use case requires more granular permissions, use other sections on this page to create an execution role that meets your business needs.
Important
The IAM managed policy, AmazonSageMakerFullAccess, used in the following procedure only grants the execution role permission to perform certain Amazon S3 actions on buckets or objects with SageMaker, Sagemaker, sagemaker, or aws-glue in the name. To learn how to add an additional policy to an execution role to grant it access to other Amazon S3 buckets and objects, see Add Additional Amazon S3 Permissions to a SageMaker Execution Role.
To create a new role

Open the IAM console at https://console.aws.amazon.com/iam/.
Select Roles and then select Create role.
Select SageMaker.
Select Next: Permissions.
The IAM managed policy, AmazonSageMakerFullAccess is automatically attached to this role. To see the permissions included in this policy, select the sideways arrow next to the policy name. Select Next: Tags.
(Optional) Add tags and select Next: Review.
Give the role a name in the text field under Role name and select Create role.
On the Roles section of the IAM console, select the role you just created. If needed, use the text box to search for the role using the role name you entered in step 7.
On the role summary page, make note of the ARN.

With a known ARN for your role, you can programmatically check the role when running the notebook locally or on SageMaker. Replace RoleName with your known ARN:

try:
    role = sagemaker.get_execution_role()
except ValueError:
    iam = boto3.client('iam')
    role = iam.get_role(RoleName='AmazonSageMaker-ExecutionRole-20201200T100000')['Role']['Arn']

Add Additional Amazon S3 Permissions to a SageMaker Execution Role
When you use a SageMaker feature with resources in Amazon S3, such as input data, the execution role you specify in your request (for example CreateTrainingJob) is used to access these resources.
If you attach the IAM managed policy, AmazonSageMakerFullAccess, to an execution role, that role has permission to perform certain Amazon S3 actions on buckets or objects with SageMaker, Sagemaker, sagemaker, or aws-glue in the name. It also has permission to perform the following actions on any Amazon S3 resource:

"s3:CreateBucket", 
"s3:GetBucketLocation",
"s3:ListBucket",
"s3:ListAllMyBuckets",
"s3:GetBucketCors",
"s3:PutBucketCors"

To give an execution role permissions to access one or more specific buckets in Amazon S3, you can attach a policy similar to the following to the role. This policy grants an IAM role permission to perform all actions that AmazonSageMakerFullAccess allows but restricts this access to the buckets DOC-EXAMPLE-BUCKET1 and DOC-EXAMPLE-BUCKET2. Refer to the security documentation for the specific SageMaker feature you are using to learn more about the Amazon S3 permissions required for that feature.

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
                "s3:AbortMultipartUpload"
            ],
            "Resource": [
                "arn:aws:s3:::DOC-EXAMPLE-BUCKET1/*",
                "arn:aws:s3:::DOC-EXAMPLE-BUCKET2/*"
            ]
        }, 
        {
            "Effect": "Allow",
            "Action": [
                "s3:CreateBucket",
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListAllMyBuckets",
                "s3:GetBucketCors",
                "s3:PutBucketCors"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetBucketAcl",
                "s3:PutObjectAcl"
            ],
            "Resource": [
                "arn:aws:s3:::DOC-EXAMPLE-BUCKET1",
                "arn:aws:s3:::DOC-EXAMPLE-BUCKET2"
            ]
        }
    ]
}

Passing Roles
Actions like passing a role between services are a common function within SageMaker. You can find more details on Actions, Resources, and Condition Keys for SageMaker in the IAM User Guide.
You pass the role (iam:PassRole) when making these API calls: https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateAutoMLJob.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateCompilationJob.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateDomain.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateFlowDefinition.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateHyperParameterTuningJob.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateImage.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateLabelingJob.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateModel.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateMonitoringSchedule.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateNotebookInstance.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateProcessingJob.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateTrainingJob.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APICreateUserProfile.html, https://docs.aws.amazon.com/sagemaker/latest/APIReference/APIRenderUiTemplate.html, and https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_UpdateImage.html.
You attach the following trust policy to the IAM role which grants SageMaker principal permissions to assume the role, and is the same for all of the execution roles: 

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "Service": "sagemaker.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
        }
    ]
}

The permissions that you need to grant to the role vary depending on the API that you call. The following sections explain these permissions.
Note
Instead of managing permissions by crafting a permission policy, you can use the AWS-managed AmazonSageMakerFullAccess permission policy. The permissions in this policy are fairly broad, to allow for any actions you might want to perform in SageMaker. For a listing of the policy including information about the reasons for adding many of the permissions, see AWS managed policy: AmazonSageMakerFullAccess. If you prefer to create custom policies and manage permissions to scope the permissions only to the actions you need to perform with the execution role, see the following topics.
Important
If you're running into issues, see Troubleshooting Amazon SageMaker Identity and Access.
For more information about IAM roles, see IAM Roles in the IAM User Guide.
Topics
+ Get execution role
+ Create execution role
+ Passing Roles
+ CreateAutoMLJob API: Execution Role Permissions
+ CreateDomain API: Execution Role Permissions
+ CreateImage and UpdateImage APIs: Execution Role Permissions
+ CreateNotebookInstance API: Execution Role Permissions
+ CreateHyperParameterTuningJob API: Execution Role Permissions
+ CreateProcessingJob API: Execution Role Permissions
+ CreateTrainingJob API: Execution Role Permissions
+ CreateModel API: Execution Role Permissions
+ SageMaker geospatial capabilities roles
CreateAutoMLJob API: Execution Role Permissions
For an execution role that you can pass in a CreateAutoMLJob API request, you can attach the following minimum permission policy to the role:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "iam:PassRole"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "iam:PassedToService": "sagemaker.amazonaws.com"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "sagemaker:DescribeEndpointConfig",
                "sagemaker:DescribeModel",
                "sagemaker:InvokeEndpoint",
                "sagemaker:ListTags",
                "sagemaker:DescribeEndpoint",
                "sagemaker:CreateModel",
                "sagemaker:CreateEndpointConfig",
                "sagemaker:CreateEndpoint",
                "sagemaker:DeleteModel",
                "sagemaker:DeleteEndpointConfig",
                "sagemaker:DeleteEndpoint",
                "cloudwatch:PutMetricData",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:DescribeLogStreams",
                "s3:GetObject",
                "s3:PutObject",
                "s3:ListBucket",
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
            ],
            "Resource": "*"
        }
    ]
}

If you specify a private VPC for your AutoML job, add the following permissions:

{
    "Effect": "Allow",
    "Action": [
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeVpcs",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeSubnets",
        "ec2:DescribeSecurityGroups"
    ]
}

If your input is encrypted using server-side encryption with an AWS KMS–managed key (SSE-KMS), add the following permissions:

{
    "Effect": "Allow",
    "Action": [
        "kms:Decrypt"
    ]
}

If you specify a KMS key in the output configuration of your AutoML job, add the following permissions:

{
    "Effect": "Allow",
    "Action": [
    "kms:Encrypt"
    ]
}

If you specify a volume KMS key in the resource configuration of your AutoML job, add the following permissions:

{
    "Effect": "Allow",
    "Action": [
    "kms:CreateGrant"
    ]
}

CreateDomain API: Execution Role Permissions
The execution role for domains with IAM Identity Center and the user/execution role for IAM domains need the following permissions when you pass an AWS KMS customer managed key as the KmsKeyId in the CreateDomain API request. The permissions are enforced during the CreateApp API call.
For an execution role that you can pass in the CreateDomain API request, you can attach the following permission policy to the role:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "kms:CreateGrant",
                "kms:DescribeKey"
            ],
            "Resource": "arn:aws:kms:region:account-id:key/kms-key-id"
        }
    ]
}

Alternatively, if the permissions are specified in a KMS policy, you can attach the following policy to the role:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "Allow use of the key",
            "Effect": "Allow",
            "Principal": {
                "AWS": [
                    "arn:aws:iam::account-id:role/ExecutionRole"
                ]
            },
            "Action": [
                "kms:CreateGrant",
                "kms:DescribeKey"
            ],
            "Resource": "*"
        }
    ]
}

CreateImage and UpdateImage APIs: Execution Role Permissions
For an execution role that you can pass in a CreateImage or UpdateImage API request, you can attach the following permission policy to the role:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "ecr:BatchGetImage",
                "ecr:GetDownloadUrlForLayer"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "iam:PassRole"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "iam:PassedToService": "sagemaker.amazonaws.com"
                }
            }
        }
    ]
}

CreateNotebookInstance API: Execution Role Permissions
The permissions that you grant to the execution role for calling the CreateNotebookInstance API depend on what you plan to do with the notebook instance. If you plan to use it to invoke SageMaker APIs and pass the same role when calling the CreateTrainingJob and CreateModel APIs, attach the following permissions policy to the role:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "sagemaker:*",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "ecr:BatchCheckLayerAvailability",
                "ecr:SetRepositoryPolicy",
                "ecr:CompleteLayerUpload",
                "ecr:BatchDeleteImage",
                "ecr:UploadLayerPart",
                "ecr:DeleteRepositoryPolicy",
                "ecr:InitiateLayerUpload",
                "ecr:DeleteRepository",
                "ecr:PutImage",
                "ecr:CreateRepository",
                "cloudwatch:PutMetricData",
                "cloudwatch:GetMetricData",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:ListMetrics",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
                "logs:GetLogEvents",
                "s3:CreateBucket",
                "s3:ListBucket",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
                "robomaker:CreateSimulationApplication",
                "robomaker:DescribeSimulationApplication",
                "robomaker:DeleteSimulationApplication",
                "robomaker:CreateSimulationJob",
                "robomaker:DescribeSimulationJob",
                "robomaker:CancelSimulationJob",
                "ec2:CreateVpcEndpoint",
                "ec2:DescribeRouteTables",
                "elasticfilesystem:DescribeMountTargets"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "codecommit:GitPull",
                "codecommit:GitPush"
            ],
            "Resource": [
                "arn:aws:codecommit:*:*:*sagemaker*",
                "arn:aws:codecommit:*:*:*SageMaker*",
                "arn:aws:codecommit:*:*:*Sagemaker*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "iam:PassRole"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "iam:PassedToService": "sagemaker.amazonaws.com"
                }
            }
        }
    ]
}

To tighten the permissions, limit them to specific Amazon S3 and Amazon ECR resources, by restricting "Resource": "*", as follows:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "sagemaker:*",
                "ecr:GetAuthorizationToken",
                "cloudwatch:PutMetricData",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
                "logs:GetLogEvents"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "iam:PassRole"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "iam:PassedToService": "sagemaker.amazonaws.com"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:ListBucket"
            ],
            "Resource": [
                "arn:aws:s3:::inputbucket"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject"
            ],
            "Resource": [
                "arn:aws:s3:::inputbucket/object1",
                "arn:aws:s3:::outputbucket/path",
                "arn:aws:s3:::inputbucket/object2",
                "arn:aws:s3:::inputbucket/object3"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
            ],
            "Resource": [
                "arn:aws:ecr:region::repository/my-repo1",
                "arn:aws:ecr:region::repository/my-repo2",
                "arn:aws:ecr:region::repository/my-repo3"
            ]
        }
    ]
}

If you plan to access other resources, such as Amazon DynamoDB or Amazon Relational Database Service, add the relevant permissions to this policy.
In the preceding policy, you scope the policy as follows:
+ Scope the s3:ListBucket permission to the specific bucket that you specify as InputDataConfig.DataSource.S3DataSource.S3Uri in a CreateTrainingJob request.
+ Scope s3:GetObject, s3:PutObject, and s3:DeleteObject permissions as follows:
  + Scope to the following values that you specify in a CreateTrainingJob request:
`InputDataConfig.DataSource.S3DataSource.S3Uri`

`OutputDataConfig.S3OutputPath`

+ Scope to the following values that you specify in a CreateModel request:
`PrimaryContainer.ModelDataUrl`

`SuplementalContainers.ModelDataUrl`

+ Scope ecr permissions as follows:
  + Scope to the AlgorithmSpecification.TrainingImage value that you specify in a CreateTrainingJob request.
  + Scope to the PrimaryContainer.Image value that you specify in a CreateModel request:
The cloudwatch and logs actions are applicable for "*" resources. For more information, see CloudWatch Resources and Operations in the Amazon CloudWatch User Guide.
CreateHyperParameterTuningJob API: Execution Role Permissions
For an execution role that you can pass in a CreateHyperParameterTuningJob API request, you can attach the following permission policy to the role:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "cloudwatch:PutMetricData",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:DescribeLogStreams",
                "s3:GetObject",
                "s3:PutObject",
                "s3:ListBucket",
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
            ],
            "Resource": "*"
        }
    ]
}

Instead of the specifying "Resource": "*", you could scope these permissions to specific Amazon S3 and Amazon ECR resources:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "cloudwatch:PutMetricData",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:DescribeLogStreams",
                "ecr:GetAuthorizationToken"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:ListBucket"
            ],
            "Resource": [
                "arn:aws:s3:::inputbucket"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:PutObject"
            ],
            "Resource": [
                "arn:aws:s3:::inputbucket/object",
                "arn:aws:s3:::outputbucket/path"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
            ],
            "Resource": "arn:aws:ecr:region::repository/my-repo"
        }
    ]
}

If the training container associated with the hyperparameter tuning job needs to access other data sources, such as DynamoDB or Amazon RDS resources, add relevant permissions to this policy.
In the preceding policy, you scope the policy as follows:
+ Scope the s3:ListBucket permission to a specific bucket that you specify as the InputDataConfig.DataSource.S3DataSource.S3Uri in a CreateTrainingJob request.
+ Scope the s3:GetObjectand s3:PutObject permissions to the following objects that you specify in the input and output data configuration in a CreateHyperParameterTuningJob request:
InputDataConfig.DataSource.S3DataSource.S3Uri
OutputDataConfig.S3OutputPath
+ Scope Amazon ECR permissions to the registry path (AlgorithmSpecification.TrainingImage) that you specify in a CreateHyperParameterTuningJob request.
The cloudwatch and logs actions are applicable for "*" resources. For more information, see CloudWatch Resources and Operations in the Amazon CloudWatch User Guide.
If you specify a private VPC for your hyperparameter tuning job, add the following permissions:

{
    "Effect": "Allow",
    "Action": [
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeVpcs",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeSubnets",
        "ec2:DescribeSecurityGroups"
    ]
}

If your input is encrypted using server-side encryption with an AWS KMS–managed key (SSE-KMS), add the following permissions:

{
    "Effect": "Allow",
    "Action": [
        "kms:Decrypt"
    ]
}

If you specify a KMS key in the output configuration of your hyperparameter tuning job, add the following permissions:

{
    "Effect": "Allow",
    "Action": [
    "kms:Encrypt"
    ]
}

If you specify a volume KMS key in the resource configuration of your hyperparameter tuning job, add the following permissions:

{
    "Effect": "Allow",
    "Action": [
    "kms:CreateGrant"
    ]
}

CreateProcessingJob API: Execution Role Permissions
For an execution role that you can pass in a CreateProcessingJob API request, you can attach the following permission policy to the role:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "cloudwatch:PutMetricData",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:DescribeLogStreams",
                "s3:GetObject",
                "s3:PutObject",
                "s3:ListBucket",
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
            ],
            "Resource": "*"
        }
    ]
}

Instead of the specifying "Resource": "*", you could scope these permissions to specific Amazon S3 and Amazon ECR resources:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "cloudwatch:PutMetricData",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:DescribeLogStreams",
                "ecr:GetAuthorizationToken"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:ListBucket"
            ],
            "Resource": [
                "arn:aws:s3:::inputbucket"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:PutObject"
            ],
            "Resource": [
                "arn:aws:s3:::inputbucket/object",
                "arn:aws:s3:::outputbucket/path"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
            ],
            "Resource": "arn:aws:ecr:region::repository/my-repo"
        }
    ]
}

If CreateProcessingJob.AppSpecification.ImageUri needs to access other data sources, such as DynamoDB or Amazon RDS resources, add relevant permissions to this policy.
In the preceding policy, you scope the policy as follows:
+ Scope the s3:ListBucket permission to a specific bucket that you specify as the ProcessingInputs in a CreateProcessingJob request.
+ Scope the s3:GetObjectand s3:PutObject permissions to the objects that will be downloaded or uploaded in the ProcessingInputs and ProcessingOutputConfig in a CreateProcessingJob request.
+ Scope Amazon ECR permissions to the registry path (AppSpecification.ImageUri) that you specify in a CreateProcessingJob request.
The cloudwatch and logs actions are applicable for "*" resources. For more information, see CloudWatch Resources and Operations in the Amazon CloudWatch User Guide.
If you specify a private VPC for your processing job, add the following permissions. Don't scope in the policy with any conditions or resource filters. Otherwise, the validation checks that occur during the creation of the processing job fail.

{
    "Effect": "Allow",
    "Action": [
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeVpcs",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeSubnets",
        "ec2:DescribeSecurityGroups"
    ]
}

If your input is encrypted using server-side encryption with an AWS KMS–managed key (SSE-KMS), add the following permissions:

{
    "Effect": "Allow",
    "Action": [
        "kms:Decrypt"
    ]
}

If you specify a KMS key in the output configuration of your processing job, add the following permissions:

{
    "Effect": "Allow",
    "Action": [
    "kms:Encrypt"
    ]
}

If you specify a volume KMS key in the resource configuration of your processing job, add the following permissions:

{
    "Effect": "Allow",
    "Action": [
    "kms:CreateGrant"
    ]
}

CreateTrainingJob API: Execution Role Permissions
For an execution role that you can pass in a CreateTrainingJob API request, you can attach the following permission policy to the role:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "cloudwatch:PutMetricData",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:DescribeLogStreams",
                "s3:GetObject",
                "s3:PutObject",
                "s3:ListBucket",
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
            ],
            "Resource": "*"
        }
    ]
}

Instead of the specifying "Resource": "*", you could scope these permissions to specific Amazon S3 and Amazon ECR resources:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "cloudwatch:PutMetricData",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:DescribeLogStreams",
                "ecr:GetAuthorizationToken"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:ListBucket"
            ],
            "Resource": [
                "arn:aws:s3:::inputbucket"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:PutObject"
            ],
            "Resource": [
                "arn:aws:s3:::inputbucket/object",
                "arn:aws:s3:::outputbucket/path"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
            ],
            "Resource": "arn:aws:ecr:region::repository/my-repo"
        }
    ]
}

If CreateTrainingJob.AlgorithSpecifications.TrainingImage needs to access other data sources, such as DynamoDB or Amazon RDS resources, add relevant permissions to this policy.
In the preceding policy, you scope the policy as follows:
+ Scope the s3:ListBucket permission to a specific bucket that you specify as the InputDataConfig.DataSource.S3DataSource.S3Uri in a CreateTrainingJob request.
+ Scope the s3:GetObjectand s3:PutObject permissions to the following objects that you specify in the input and output data configuration in a CreateTrainingJob request:
InputDataConfig.DataSource.S3DataSource.S3Uri
OutputDataConfig.S3OutputPath
+ Scope Amazon ECR permissions to the registry path (AlgorithmSpecification.TrainingImage) that you specify in a CreateTrainingJob request.
The cloudwatch and logs actions are applicable for "*" resources. For more information, see CloudWatch Resources and Operations in the Amazon CloudWatch User Guide.
If you specify a private VPC for your training job, add the following permissions:

{
    "Effect": "Allow",
    "Action": [
      "ec2:CreateNetworkInterface",
      "ec2:CreateNetworkInterfacePermission",
      "ec2:DeleteNetworkInterface",
      "ec2:DeleteNetworkInterfacePermission",
      "ec2:DescribeNetworkInterfaces",
      "ec2:DescribeVpcs",
      "ec2:DescribeDhcpOptions",
      "ec2:DescribeSubnets",
      "ec2:DescribeSecurityGroups"
    ]
}

If your input is encrypted using server-side encryption with an AWS KMS–managed key (SSE-KMS), add the following permissions:

{
    "Effect": "Allow",
    "Action": [
        "kms:Decrypt"
    ]
}

If you specify a KMS key in the output configuration of your training job, add the following permissions:

{
    "Effect": "Allow",
    "Action": [
    "kms:Encrypt"
    ]
}

If you specify a volume KMS key in the resource configuration of your training job, add the following permissions:

{
    "Effect": "Allow",
    "Action": [
    "kms:CreateGrant"
    ]
}

CreateModel API: Execution Role Permissions
For an execution role that you can pass in a CreateModel API request, you can attach the following permission policy to the role:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "cloudwatch:PutMetricData",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:DescribeLogStreams",
                "s3:GetObject",
                "s3:ListBucket",
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
            ],
            "Resource": "*"
        }
    ]
}

Instead of the specifying "Resource": "*", you can scope these permissions to specific Amazon S3 and Amazon ECR resources:

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "cloudwatch:PutMetricData",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:DescribeLogStreams",
                "ecr:GetAuthorizationToken"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject"
            ],
            "Resource": [
                "arn:aws:s3:::inputbucket/object"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
            ],
            "Resource": [
                "arn:aws:ecr:region::repository/my-repo",
                "arn:aws:ecr:region::repository/my-repo"
             ]
        }
    ]
}

If CreateModel.PrimaryContainer.Image need to access other data sources, such as Amazon DynamoDB or Amazon RDS resources, add relevant permissions to this policy.
In the preceding policy, you scope the policy as follows:
+ Scope S3 permissions to objects that you specify in the PrimaryContainer.ModelDataUrl in a https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateModel.html request.
+ Scope Amazon ECR permissions to a specific registry path that you specify as the PrimaryContainer.Image and SecondaryContainer.Image in a CreateModel request.
The cloudwatch and logs actions are applicable for "*" resources. For more information, see CloudWatch Resources and Operations in the Amazon CloudWatch User Guide.
Note
If you plan to use the SageMaker deployment guardrails feature for model deployment in production, ensure that your execution role has permission to perform the cloudwatch:DescribeAlarms action on your auto-rollback alarms.
If you specify a private VPC for your model, add the following permissions:

{
    "Effect": "Allow",
    "Action": [
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeVpcs",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeSubnets",
        "ec2:DescribeSecurityGroups"
    ]
}


Amazon SageMaker and Application Auto Scaling
You can scale SageMaker endpoint variants using target tracking scaling policies, step scaling policies, and scheduled scaling. 
Use the following information to help you integrate SageMaker with Application Auto Scaling. 
If you are just getting started with scaling SageMaker endpoint variants, you can view sample configurations and details about using SageMaker with Application Auto Scaling in the following documentation:
+ Automatically scale Amazon SageMaker models in the Amazon SageMaker Developer Guide
Service-linked role created for SageMaker
The following service-linked role is automatically created in your AWS account when registering SageMaker resources as scalable targets with Application Auto Scaling. This role allows Application Auto Scaling to perform supported operations within your account. For more information, see Service-linked roles for Application Auto Scaling.
+ AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint
Service principal used by the service-linked role
The service-linked role in the previous section can be assumed only by the service principal authorized by the trust relationships defined for the role. The service-linked role used by Application Auto Scaling grants access to the following service principal: 
+ sagemaker.application-autoscaling.amazonaws.com
Registering SageMaker endpoint variants as scalable targets with Application Auto Scaling
Application Auto Scaling requires a scalable target before you can create scaling policies or scheduled actions for a SageMaker model (variant). A scalable target is a resource that Application Auto Scaling can scale out and scale in. Scalable targets are uniquely identified by the combination of resource ID, scalable dimension, and namespace. 
If you configure auto scaling using the SageMaker console, then SageMaker automatically registers a scalable target for you. 
If you want to configure auto scaling using the AWS CLI or one of the AWS SDKs, you can use the following options:
+ AWS CLI: 
Call the register-scalable-target command for an SageMaker endpoint variant. The following example registers the desired EC2 instance count for a product variant called my-variant, running on the my-endpoint endpoint, with a minimum capacity of one instance and a maximum capacity of eight instances.

  aws application-autoscaling register-scalable-target \
    --service-namespace sagemaker \
    --scalable-dimension sagemaker:variant:DesiredInstanceCount \
    --resource-id endpoint/my-endpoint/variant/my-variant \
    --min-capacity 1 \
    --max-capacity 8

+ AWS SDK: 
Call the RegisterScalableTarget operation and provide ResourceId, ScalableDimension, ServiceNamespace, MinCapacity, and MaxCapacity as parameters. 

Train and Evaluate AWS DeepRacer Models Using SageMaker Notebooks
The AWS DeepRacer console provides you with an integrated experience to train and evaluate your AWS DeepRacer models. It's integrated because AWS DeepRacer uses SageMaker and AWS RoboMaker behind the scenes. The integration includes detailed reinforcement learning tasks and makes training more readily accessible to beginners. 
If you're an experienced user of SageMaker or if you're determined to learn how to use SageMaker and AWS RoboMaker to train and evaluate your AWS DeepRacer models, then you can manually create an SageMaker notebook. You can then clone a reinforcement learning sample notebook instance and use it as a template to perform the predefined tasks that train and evaluate an AWS DeepRacer model. 
After the training, you can copy the trained model artifacts to your AWS DeepRacer vehicle for test runs in a physical environment. 
The tutorial presents step-by-step instructions to walk you through these tasks. 
Topics
+ Create an SageMaker Notebook
+ Initialize the SageMaker Notebook Instance
+ Set Up the Training Environment
+ Train Your AWS DeepRacer Model
Create an SageMaker Notebook
To train an AWS DeepRacer model directly on SageMaker, follow the steps below and create an SageMaker notebook instance. 
To create an SageMaker notebook instance to train and evaluate your AWS DeepRacer models

Sign in to the SageMaker console at https://console.aws.amazon.com/sagemaker. Choose one of the supported regions. 
From the navigation pane, choose Notebook instances and then choose Create notebook instance. 
On the Create notebook instance page, do the following: 

Type a name. For example, my-deepracer-model) for the Notebook instance name.
If the IAM role drop-down menu is not populated with an existing IAM role, choose Create a new role, Enter a custom IAM role ARN, or Use existing role and then follow the instructions.
Leave the default choices for all other options and then choose Create notebook instance. 
For more information, see creating an SageMaker notebook instance. 

Wait for the notebook instance's Status to change from Pending to InService. Then choose Open Jupyter. 
On the Jupyter page (which is the home page of the newly created notebook), do the following:

Choose the SageMaker Examples tab. 
Expand the Reinforcement Learning example group from the example collection. 
For this exercise, choose Use next to the deepracer_rl.ipynb item. 
On the Create a copy in your home directory dialog, choose Create copy. 

At this point, the notebook instance is running and you can begin to train the model.

You are charged for a running instance according to the selected instance type. To avoid being charged for a running instance when you're not ready to use it, shut down the instance.

Initialize the SageMaker Notebook Instance
To use an SageMaker notebook instance to train your AWS DeepRacer model, first properly initialize the instance for the required job. The initialization includes the following. 
+ Import required libraries.
+ Set up training environment.
+ Grant access permissions for SageMaker and AWS RoboMaker.
+ Provision a docker container to host training and evaluation jobs.
+ Configure VPC for SageMaker and AWS RoboMaker to interact with each other.
Follow the steps below for detailed instructions to initialize a notebook instance.
To initialize an SageMaker notebook instance

To import the required library to do training, choose the notebook instance's first code block. For example, choose the one under the Imports heading. Next, choose Run from the notebook's menu bar to execute the code block. You can use the Shift-Enter key-command shortcuts to start running the code block.

Before the code execution starts, the code block status shows In [ ]. When the execution is under way, the status becomes In [*]. After the code execution is complete, the status becomes In [n], where n corresponds to the order of invocations. Because the importation code cell is the first, n=1. If you run the command again after the first run, the status becomes In [2].
For asynchronous execution, the code cell returns immediately to show the completed status. For synchronous executions, subsequent calls are blocked until the current code cell execution is completed when the status turns from In [*] to In [n].
To initialize the basic parameters, run the Initializing basic parameters code block as-is.

The example notebook instance sets the job duration for 1 hour by default. To speed up or extend the training, you can decrease or increase the job_duration_in_seconds value before running the code cell. 
To set up the training output storage, choose the code block under Setup S3 bucket, and then choose Run from the notebook instance menu or press the Shift+Enter keys.

When the execution completes, you can verify this bucket in Amazon S3 console. 
To view the s3_output_path variable value, append print(s3_output_path) to the above code cell and rerun the code.
To set up appropriate permissions for this notebook instance to access the S3 storage for output by SageMaker, run the code cell under Create an IAM role.

When executed, this code block creates a new IAM role containing the following IAM policy.

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
                "s3:ListBucket"
            ],
            "Resource": [
                "arn:aws:s3:::*"
            ]
        }
    ]
}

The created IAM role has SageMaker as its trusted entity. 
To set up appropriate permissions for this notebook instance to invoke AWS RoboMaker to simulate the training environment, run the code cell under Permission setup for invoking AWS RoboMaker from this notebook and follow the instructions thereafter to add robomaker.amazonaws.com as another trusted entity of the previously created IAM role.

To set up the required permissions for SageMaker to access the S3 storage, run the code cell under Permission setup for SageMaker to S3 bucket and folow the instructions thereafter to attach the AmazonS3FullAccess policy to the IAM role previously created.

To provision a docker container for running our training and evalution jobs, run the code cell under Build and push docker image. 


Building and pushing the docker image takes some time to finish.

To enable VPC mode for SageMaker and AWS RoboMaker to communicate with each other over network, run the code cell under Configure VPC. By default, the notebook instance uses your default VPC, security group, and subnets to configure the VPC mode. If you don't want open VPC for other traffic, make sure to set the Inbound Rules and Outbound Rules for the specified security group to allow incoming traffic from itself only.

To enable the SageMaker training job to access S3 resources, run the code cell under Create Route Table to create a VPC S3 endpoint.


At this point, you're done with initializing the training and are ready to move on to set up the training environment.
Set Up the Training Environment
Setting up the environment for training your AWS DeepRacer model involves selecting a race track, a reward function and the associated action space, as well as hyperparameters used for training. 
The notebook uses the default settings for these. To view the default settings, uncomment relevant parts and then run the code cell under Configure the preset for RL algorithm. For example, to view the code listing of the reward function, run the code cell as follows:

If you decide to use the default settings, copy the files to the S3 bucket. To modify any of the files, follow the steps below, changing the file name and directory for anything other than the default reward function.
To modify the reward function in the default.py file:

Choose File menu on the top of the notebook instance page and then choose Open....

Navigate to the src/markov/rewards folder and choose default.py to open the file.

Edit the file as you see fit. After finishing editing the file, choose File->Save to save the update.


Notice that the environment file is shared by both SageMaker and AWS RoboMaker, also known as nodes. When it's used by SageMaker, the node_type is SAGEMAKER_TRAINING_WORKER. When it's used by AWS RoboMaker, the node_type is SIMULATION_WORKER.
Train Your AWS DeepRacer Model
Training your model with SageMaker and AWS RoboMaker amounts to executing the code in the training_worker.py file under the notebook's src directory. The training_worker.py file is designated as the entry point of your training job. 
The training process involves using AWS RoboMaker to emulate driving experiences in the environment, relaying the experiences at fixed intervals to SageMaker as input to train the deep neural network, and updating the network weights to an S3 location. 
While the training is in progress, you can have specified training metrics logged to Amazon CloudWatch Logs or displayed to the AWS RoboMaker terminal.
To train your AWS DeepRacer model

Run the code cell under Copy custom files to S3 bucket so that sagemaker & robomaker can pick it up copy the environment files to S3 . 



To start an SageMaker job to train your AWS DeepRacer model, do the following:

Run the first code cell under Train the RL model using the Python SDK Script mode to define training metrics to watch in either CloudWatch Logs or in an AWS RoboMaker console window.

You can watch the specified metrics to monitor the training and to find out the effectiveness of your chosen reward function in CloudWatch Logs or using an AWS RoboMaker terminal.
Run the second code cell under Train the RL model using the Python SDK Script mode to start an SageMaker training job for your model.

This SageMaker training job uses the TensorFlow framework and runs on a specified EC2 compute instance type. The output lists the job name. You can track the status of this training job in SageMaker.


To create an environment simulation job in AWS RoboMaker, run the code cells under Start the RoboMaker job and Create Simulation Application.
To start the simulation on AWS RoboMaker and share the simulated data, run the code cell under Launch the Simulation job on RoboMaker.

To watch the simulations in AWS RoboMaker, run the code cell under Visualizing the simulations in RoboMaker and then choose the Simulation 1 link from the output.

Alternatively, you can go to the AWS RoboMaker console directly to open the simulation job. 
After the simulation job is initialized, the AWS RoboMaker console makes available the following visualization utilities:

Gazebo: an emulation of 3D worlds for simulating autonomous vehicle in the chosen track.
rqt: Qt-based framework and plugins for ROS GUI development.
ivis: ROS visualizer for displaying the field of vision as captured by the vehicle's front-facing camera.
Terminal: A terminal application to provide command line access on the simulation job host.


To view your vehicle learning in the 3D simulation, double-click or tap Gazebo.

You watch the simulated vehicle navigate along the track in repeated trials starting from the starting point and ending at going off-track or reaching the finishing line. In the beginning, the vehicle can stay on the track briefly. As time goes on, it learns to stay on the track longer.
To access rqt utilities, double-click or tap rqt and choose a plugin.

For more information about the plugins, see AWS RoboMaker plugins.
To view the front-facing vision of the vehicle, double-click or tap rvis. Choose Add to create a visualization. And then choose the By topic tab, scroll down to choose /camera/zed/rgb/image_rec_color/Image, choose OK.

To use the terminal, double-click or tap Terminal to open a terminal window on the simulation job host and type appropriate shell command.

With the simulation job host terminal opened, you can call Linux shell commands to view (more or tail) the logs or performing other operations. 
To view the reward of the last 10 steps in the simulation logs, you can type the following shell command in the terminal:

tail /tmp/simulation-logs/stdout_and_stderr


To visualize the training performance, run the two code cells under Plot metrics for training job. When all is done successfully, you see a plot of Training reward vs Episode # similar to the following.

In this particular example, the training reward appears to start to plateau. Perhaps more data are needed to verify if it's true. If the training job is running, you can run the code cell under Plot metrics for training job again to include more recent data into the plot. If they persist, the onset of large fluctuations can indicate certain deficiency in the reward function. Thus, you might update the reward function definition. In any case, you need to collect more data with more training.
After training has elapsed the specified amount of time, you can locate the trained model artifacts in the training job's S3 bucket, e.g., s3:////output/model.tar.gz. Download the model artifacts file, copy it to a USB drive and then transfer the file to your AWS DeepRacer vehicle's compute module. 

To clean up when you're done with training and no longer need the AWS RoboMaker and SageMaker resources, run the two code cells under Clean Up.
To evaluate the model that has been trained thus far, run the code cell under Evaluation. 
If successful, a simulation job is created for the task in AWS RoboMaker. Make note of the job name in the output below the code cell. You may need it to open the simulation job in the AWS RoboMaker console. This simulation job is similar to the simulation job for training. It provides the same utilities for you view the evaluation in progress in the AWS RoboMaker console. In particular, you can watch the evaluation trials in Gazebo.
When you're done with evaluating the model and want to terminate the simulation application, run the code cell under Clean Up Simulation Application Resource.



Use Amazon SageMaker Edge Manager on Greengrass core devices
Amazon SageMaker Edge Manager is a software agent that runs on edge devices. SageMaker Edge Manager provides model management for edge devices so that you can package and use Amazon SageMaker Neo-compiled models directly on Greengrass core devices. By using SageMaker Edge Manager, you can also sample model input and output data from your core devices, and send that data to the AWS Cloud for monitoring and analysis. Because SageMaker Edge Manager uses SageMaker Neo to optimize your models for your target hardware, you don't need to install the DLR runtime directly on your device. On Greengrass devices, SageMaker Edge Manager doesn't load local AWS IoT certificates or call the AWS IoT credential provider endpoint directly. Instead, SageMaker Edge Manager uses the token exchange service to fetch temporary credential from a TES endpoint. 
This section describes how SageMaker Edge Manager works on Greengrass core devices.
How SageMaker Edge Manager works on Greengrass devices
To deploy the SageMaker Edge Manager agent to your core devices, create a deployment that includes the aws.greengrass.SageMakerEdgeManager component. AWS IoT Greengrass manages the installation and lifecycle of the Edge Manager agent on your devices. When a new version of the agent binary is available, deploy the updated version of the aws.greengrass.SageMakerEdgeManager component to upgrade the version of the agent that is installed on your device. 
When you use SageMaker Edge Manager with AWS IoT Greengrass, your workflow includes the following high-level steps:

Compile models with SageMaker Neo.
Package your SageMaker Neo-compiled models using SageMaker edge packaging jobs. When you run an edge packaging job for your model, you can choose to create a model component with the packaged model as an artifact that can be deployed to your Greengrass core device. 
Create a custom inference component. You use this inference component to interact with the Edge Manager agent to perform inference on the core device. These operations include loading models, invoke prediction requests to run inference, and unloading models when the component shuts down. 
Deploy the SageMaker Edge Manager component, the packaged model component, and the inference component to run your model on the SageMaker inference engine (Edge Manager agent) on your device.

For more information about creating edge packaging jobs and inference components that work with SageMaker Edge Manager, see Deploy Model Package and Edge Manager Agent with AWS IoT Greengrass in the Amazon SageMaker Developer Guide.
The Tutorial: Get started with SageMaker Edge Manager tutorial shows you how to set up and use the SageMaker Edge Manager agent on an existing Greengrass core device, using AWS-provided example code that you can use to create sample inference and model components. 
When you use SageMaker Edge Manager on Greengrass core devices, you can also use the capture data feature to upload sample data to the AWS Cloud. Capture data is a SageMaker feature that you use to upload inference input, inference results, and additional inference data to an S3 bucket or a local directory for future analysis. For more information about using capture data with SageMaker Edge Manager, see Manage Model in the Amazon SageMaker Developer Guide.
Requirements
You must meet the following requirements to use the SageMaker Edge Manager agent on Greengrass core devices.
+ A Greengrass core device running on Amazon Linux 2, a Debian-based Linux platform (x86_64 or Armv8), or Windows (x86_64). If you don't have one, see Tutorial: Getting started with AWS IoT Greengrass V2.
+ Python 3.6 or later, including pip for your version of Python, installed on your core device.
+ The Greengrass device role configured with the following: 
  + A trust relationship that allows credentials.iot.amazonaws.com and sagemaker.amazonaws.com to assume the role, as shown in the following IAM policy example.
```
{ 
  "Version": "2012-10-17",
  "Statement": [ 
    { 
      "Effect": "Allow", 
      "Principal": {
        "Service": "credentials.iot.amazonaws.com"
       }, 
      "Action": "sts:AssumeRole" 
    },
    { 
      "Effect": "Allow", 
      "Principal": {
        "Service": "sagemaker.amazonaws.com"
      }, 
      "Action": "sts:AssumeRole" 
    } 
  ] 
}
```

+ The AmazonSageMakerEdgeDeviceFleetPolicy IAM managed policy.
  + The s3:PutObject action, as shown in the following IAM policy example.
```
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "s3:PutObject"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    }
  ]
}
```

+ An Amazon S3 bucket created in the same AWS account and AWS Region as your Greengrass core device. SageMaker Edge Manager requires an S3 bucket to create an edge device fleet, and to store sample data from running inference on your device. For information about creating S3 buckets, see Getting started with Amazon S3.
+ A SageMaker edge device fleet that uses the same AWS IoT role alias as your Greengrass core device. For more information, see Create an edge device fleet.
+ Your Greengrass core device registered as an edge device in your SageMaker Edge device fleet. The edge device name must match the AWS IoT thing name for your core device. For more information, see Register your Greengrass core device.
Get started with SageMaker Edge Manager
You can complete a tutorial to get started using SageMaker Edge Manager. The tutorial shows you how to get started using SageMaker Edge Manager with AWS-provided sample components on an existing core device. These sample components use the SageMaker Edge Manager component as a dependency to deploy the Edge Manager agent, and perform inference using pre-trained models that were compiled using SageMaker Neo. For more information, see Tutorial: Get started with SageMaker Edge Manager.

